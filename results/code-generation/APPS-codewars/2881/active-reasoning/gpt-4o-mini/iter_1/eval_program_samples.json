{
    "0": {
        "0": [
            "```python\ndef validate(n):\n    n = ''.join(n.split())\n    total = 0\n    reverse_digits = [int(d) for d in n[::-1]]\n    \n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    total = 0\n    reverse_digits = [int(d) for d in n][::-1]\n\n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = ''.join(filter(str.isdigit, str(n)))\n    total = 0\n    length = len(n)\n    \n    for i in range(length):\n        digit = int(n[length - 1 - i])\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = ''.join(n.split())\n    digits = [int(d) for d in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = ''.join(n.split())\n    if not n.isdigit() or len(n) > 16:\n        return False\n    \n    total = 0\n    reverse_digits = n[::-1]\n    \n    for i, digit in enumerate(reverse_digits):\n        d = int(digit)\n        if i % 2 == 1:\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    for i in range(length - 2, -1, -1):\n        if (length - i) % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    total = 0\n    reverse_digits = [int(d) for d in n[::-1]]\n\n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Every other digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    total = 0\n    length = len(n)\n    \n    for i in range(length):\n        digit = int(n[length - i - 1])\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    even_length = len(digits) % 2 == 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 0) == even_length:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(\" \", \"\")]\n    length = len(digits)\n    total = 0\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    checksum = 0\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    digits = [int(d) for d in n]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```"
        ],
        "1": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -1):\n        if (length - i) % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    odd_index = len(digits) % 2 == 1\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd_index else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 0) == odd:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total += doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    \n    for i in range(len(digits)):\n        if (len(digits) - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(\" \", \"\")]\n    checksum = 0\n    \n    for i in range(len(digits)):\n        digit = digits[-(i + 1)]\n        if i % 2 == 1:  # Every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    odd_even = len(digits) % 2\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if (i + odd_even) % 2 == 0:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    check_sum = 0\n    reverse_digits = digits[::-1]\n    \n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        check_sum += digit\n    \n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total_sum = 0\n\n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total_sum += doubled - 9 if doubled > 9 else doubled\n        else:\n            total_sum += digits[i]\n\n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    odd = len(digits) % 2\n    \n    for i, digit in enumerate(digits):\n        if (i + odd) % 2 == 0:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    checksum = 0\n    \n    for i in range(length):\n        if (length % 2 == 0 and i % 2 == 0) or (length % 2 == 1 and i % 2 == 1):\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    even_length = len(digits) % 2 == 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 0 and even_length) or (i % 2 != 0 and not even_length):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```"
        ],
        "2": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_indices = len(digits) % 2 == 0\n    total = 0\n\n    for i in range(len(digits)):\n        if (i % 2 == 0) == odd_indices:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n\n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length % 2 == 0 and i % 2 == 0) or (length % 2 == 1 and i % 2 == 1):\n            double = digits[i] * 2\n            checksum += double if double < 10 else double - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:  # Subtract 9 if greater than 9\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits)-2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_index = len(digits) % 2 == 0\n    total_sum = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 0) == odd_index:\n            doubled = digit * 2\n            total_sum += doubled if doubled < 10 else doubled - 9\n        else:\n            total_sum += digit\n\n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(\" \", \"\")]\n    checksum = 0\n    \n    for i in range(len(digits)):\n        if (len(digits) - i) % 2 == 0:\n            digit = digits[i] * 2\n            if digit > 9:\n                digit -= 9\n            checksum += digit\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            double = digits[i] * 2\n            total += double - 9 if double > 9 else double\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1) ^ odd:  # if i is odd and we start from the second\n            d = digits[i] * 2\n            total += d - 9 if d > 9 else d\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for d in reversed(digits):\n        if double:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    checksum = 0\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    total = sum(digits)\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -1):\n        if (length - i) % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:  # Double every second digit from the right\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # every second digit from right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_digits = digits[-1::-2]\n    even_digits = digits[-2::-2]\n\n    total = sum(odd_digits)\n    \n    for d in even_digits:\n        doubled = d * 2\n        if doubled > 9:\n            doubled -= 9\n        total += doubled\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    checksum = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```"
        ],
        "3": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    check_sum = 0\n    double = False\n\n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        check_sum += digit\n        double = not double\n\n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    check_sum = 0\n    double = False\n\n    for d in reversed(digits):\n        if double:\n            d *= 2\n            if d > 9:\n                d -= 9\n        check_sum += d\n        double = not double\n\n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i + odd_even) % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    reverse_digits = digits[::-1]\n\n    for i in range(len(reverse_digits)):\n        digit = reverse_digits[i]\n        if i % 2 == 1:  # Double every second digit\n            digit *= 2\n            if digit > 9:  # If the result is greater than 9\n                digit -= 9  # Subtract 9 from it\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2 == 0) == odd:  # Double every other digit\n            digit *= 2\n            if digit > 9:  # If the result is greater than 9, subtract 9\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    check_sum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        check_sum += digit\n\n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    num_digits = len(digits)\n    sum_digits = 0\n\n    for i in range(num_digits):\n        digit = digits[num_digits - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        sum_digits += digit\n\n    return sum_digits % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    even_length = len(digits) % 2 == 0\n    total = 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 0) if even_length else (i % 2 != 0):\n            double = digits[i] * 2\n            total += double - 9 if double > 9 else double\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    # Double every second digit from the right\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    # Sum all the digits\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total_sum = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total_sum += digit\n    \n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i, d in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_index = len(digits) % 2 == 1\n    total = 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1 and odd_index) or (i % 2 == 0 and not odd_index):\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total += doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_length = len(digits) % 2 == 1\n\n    for i in range(len(digits)):\n        if (i % 2 == 0) ^ odd_length:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```"
        ],
        "4": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    total = sum(digits)\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    for i in range(len(digits)):\n        if (i % 2 == 0) == odd:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = str(n)[::-1]\n    total = 0\n    \n    for i in range(len(n)):\n        digit = int(n[i])\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    num_digits = len(digits)\n    for i in range(num_digits):\n        if (num_digits - i) % 2 == 0:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            digit = digits[i] * 2\n            if digit > 9:\n                digit -= 9\n            checksum += digit\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for d in reversed(digits):\n        if double:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    total = sum(digits)\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    odd_digits = digits[-1::-2]\n    even_digits = digits[-2::-2]\n    \n    sum_odds = sum(odd_digits)\n    sum_evens = sum((d * 2 - 9) if (d * 2) > 9 else (d * 2) for d in even_digits)\n    \n    total_sum = sum_odds + sum_evens\n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_sum = sum(digits[-1::-2])\n    even_sum = sum((d * 2 - 9) if d * 2 > 9 else d * 2 for d in digits[-2::-2])\n    total = odd_sum + even_sum\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    total = sum(digits)\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    checksum = 0\n\n    for i in range(length):\n        if (length - i) % 2 == 0:  # Double every second digit\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:  # Double every second digit\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```"
        ]
    },
    "1": {
        "0": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Every other digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    total = 0\n    length = len(n)\n    \n    for i in range(length):\n        digit = int(n[length - i - 1])\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    even_length = len(digits) % 2 == 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 0) == even_length:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(\" \", \"\")]\n    length = len(digits)\n    total = 0\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    checksum = 0\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    digits = [int(d) for d in n]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - i - 1]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length % 2 == 0 and i % 2 == 0) or (length % 2 == 1 and i % 2 == 1):\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(' ', '')]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    digits = [int(d) for d in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n\n    for d in reversed(digits):\n        if double:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n        double = not double\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    check_sum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            check_sum += doubled\n        else:\n            check_sum += digits[i]\n\n    return check_sum % 10 == 0\n```"
        ],
        "1": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_length = len(digits) % 2 == 1\n\n    for i in range(len(digits)):\n        if (i % 2 == 1) if odd_length else (i % 2 == 0):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    checksum = 0\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    check_sum = 0\n    reverse_digits = digits[::-1]\n    \n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        check_sum += digit\n    \n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) ^ odd:  # Check if we should double this digit\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2) == odd_even:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    checksum = 0\n    \n    for i in range(length):\n        if (length % 2 == 0 and i % 2 == 0) or (length % 2 == 1 and i % 2 == 1):\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    check_sum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from right\n            digit *= 2\n            if digit > 9:  # If doubled digit is greater than 9, subtract 9\n                digit -= 9\n        check_sum += digit\n    \n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:  # double every second digit\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total += doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:  # Even index when counting from right\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n    total_sum = sum(digits)\n    \n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    parity = len(digits) % 2\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2) == parity:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n    \n    for i, d in enumerate(digits):\n        if (i % 2 == 1) == odd:\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    # Double every other digit\n    for i in range(length - 2 if length % 2 == 0 else length - 1, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    # Sum all the digits\n    total = sum(digits)\n    \n    # Check if the total modulo 10 is 0\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - i - 1]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:  # If it exceeds 9, subtract 9\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:  # double every second digit from the right\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i in range(len(digits)):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digit = digits[i] * 2\n            if digit > 9:\n                digit -= 9\n            total += digit\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```"
        ],
        "2": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            double = digits[i] * 2\n            total += double - 9 if double > 9 else double\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1) ^ odd:  # Only double if it's the correct position based on odd/even\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for d in reversed(digits):\n        if double:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    checksum = 0\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from right to left\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    total = sum(digits)\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:  # Double every second digit from the right\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    num_digits = len(digits)\n    sum_digits = 0\n    \n    for i in range(num_digits):\n        digit = digits[num_digits - 1 - i]\n        if i % 2 == 1:  # double every second digit\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        sum_digits += digit\n    \n    return sum_digits % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:  # Sum the digits if greater than 9\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 1 and odd) or (i % 2 == 0 and not odd):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:  # If the result is greater than 9, subtract 9\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n\n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i in range(len(digits)):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    num_digits = len(digits)\n    odd = num_digits % 2 == 1\n    \n    for i in range(num_digits):\n        if (odd and i % 2 == 1) or (not odd and i % 2 == 0):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n\n    for i, d in enumerate(digits):\n        if (i % 2 == 0) == odd:  # Double every second digit\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(\" \", \"\")]\n    sum_digits = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            sum_digits += doubled - 9 if doubled > 9 else doubled\n        else:\n            sum_digits += digits[i]\n    \n    return sum_digits % 10 == 0\n```"
        ],
        "3": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    num_digits = len(digits)\n    sum_digits = 0\n\n    for i in range(num_digits):\n        digit = digits[num_digits - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        sum_digits += digit\n\n    return sum_digits % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - i - 1]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n\n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    odd = len(digits) % 2\n\n    for i, digit in enumerate(digits):\n        if (i + odd) % 2 == 0:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total_sum = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:  # double every second digit\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total_sum += doubled\n        else:\n            total_sum += digits[i]\n    \n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    check_sum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # every other digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        check_sum += digit\n    \n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 0) == odd:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    parity = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == parity:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```"
        ],
        "4": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if i % 2 == 1:  # Double every second digit\n            digit *= 2\n            if digit > 9:  # If it's greater than 9, subtract 9\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_length = len(digits) % 2 == 1\n\n    for i in range(len(digits)):\n        if (i % 2 == 1) if odd_length else (i % 2 == 0):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    total = sum(digits)\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 0 and odd) or (i % 2 == 1 and not odd):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n\n    for d in reversed(digits):\n        if double:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n        double = not double\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    # Reverse the digits for processing from right to left\n    digits.reverse()\n\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    check_sum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            double = digits[i] * 2\n            check_sum += double if double < 10 else double - 9\n        else:\n            check_sum += digits[i]\n    \n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i, d in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```"
        ]
    },
    "2": {
        "0": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    odd_length = len(digits) % 2 == 1\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1) == odd_length:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = ''.join(n.split())\n    total = 0\n    reverse_digits = [int(d) for d in n][::-1]\n\n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:  # double every second digit\n            digit *= 2\n            if digit > 9:  # subtract 9 if the doubled digit is greater than 9\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(' ', '')]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    digits = [int(d) for d in n][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    reverse_digits = digits[::-1]\n    \n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    total = 0\n    reverse_digits = [int(d) for d in n][::-1]\n\n    for i in range(len(reverse_digits)):\n        if i % 2 == 1:  # Double every second digit\n            doubled = reverse_digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total += doubled\n        else:\n            total += reverse_digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = ''.join(n.split())\n    total_sum = 0\n    reverse_digits = [int(d) for d in n][::-1]\n\n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:  # Every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total_sum += digit\n\n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    check_sum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            check_sum += doubled\n        else:\n            check_sum += digits[i]\n\n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    \n    for i, d in enumerate(reversed(digits)):\n        if i % 2 == 1:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    even_length = len(digits) % 2 == 0\n\n    for i in range(len(digits)):\n        if (i % 2 == 1) if even_length else (i % 2 == 0):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    digits = [int(d) for d in n]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    total = sum(digits)\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    check_sum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        check_sum += digit\n        \n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(\" \", \"\")]\n    checksum = 0\n    \n    for i in range(len(digits)-1, -1, -1):\n        digit = digits[i]\n        if (len(digits) - i) % 2 == 0:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - i - 1]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(\" \", \"\")]\n    total = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length % 2 == 0 and i % 2 == 0) or (length % 2 == 1 and i % 2 == 1):\n            doubled = digits[length - 1 - i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[length - 1 - i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    digits = [int(d) for d in n]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    total_sum = sum(digits)\n    \n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    total = 0\n    reverse_digits = [int(d) for d in n][::-1]\n    \n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```"
        ],
        "1": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    check_sum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from right\n            digit *= 2\n            if digit > 9:  # If doubled digit is greater than 9, subtract 9\n                digit -= 9\n        check_sum += digit\n    \n    return check_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:  # double every second digit\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total += doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    reverse_digits = digits[::-1]\n    \n    for i, d in enumerate(reverse_digits):\n        if i % 2 == 1:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n\n    for i in range(len(digits)):\n        if i % 2 == 1:  # Double every second digit\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    reverse_digits = digits[::-1]\n    \n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:  # Double every second digit\n            digit *= 2\n            if digit > 9:  # If the result is greater than 9, subtract 9\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n    \n    for i, d in enumerate(digits):\n        if (i % 2 == 1) == odd:\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i, d in enumerate(digits):\n        if i % 2 == 1:\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - i - 1]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:  # If the result is greater than 9, subtract 9\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:  # double every second digit from the right\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:  # Double every second digit from the right\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    \n    for i in range(len(digits)):\n        if (len(digits) - i) % 2 == 0:\n            double = digits[i] * 2\n            checksum += double if double < 10 else double - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            double = digits[i] * 2\n            total += double if double < 10 else double - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - i - 1]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:  # Double every second digit\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total += doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```"
        ],
        "2": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:  # Double every second digit from the right\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    num_digits = len(digits)\n    sum_digits = 0\n    \n    for i in range(num_digits):\n        digit = digits[num_digits - 1 - i]\n        if i % 2 == 1:  # double every second digit\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        sum_digits += digit\n    \n    return sum_digits % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # every second digit from right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_digits = digits[-1::-2]\n    even_digits = digits[-2::-2]\n\n    total = sum(odd_digits)\n    \n    for d in even_digits:\n        doubled = d * 2\n        if doubled > 9:\n            doubled -= 9\n        total += doubled\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    sum_digits = 0\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            sum_digits += doubled\n        else:\n            sum_digits += digits[i]\n    \n    return sum_digits % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    checksum = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    checksum = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            double = digits[i] * 2\n            checksum += double if double < 10 else double - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    checksum = 0\n\n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    n_digits = len(digits)\n    total = 0\n\n    for i in range(n_digits):\n        if (n_digits - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total += doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    num_digits = len(digits)\n    odd = num_digits % 2 == 1\n    \n    for i in range(num_digits):\n        if (odd and i % 2 == 1) or (not odd and i % 2 == 0):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length % 2 == 0 and i % 2 == 0) or (length % 2 != 0 and i % 2 != 0):\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            double = digits[i] * 2\n            total += double if double < 10 else double - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits)-2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] = digits[i] * 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            double = digits[i] * 2\n            checksum += double if double < 10 else double - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```"
        ],
        "3": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total_sum = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total_sum += digit\n    \n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from right\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i + odd) % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_index = len(digits) % 2 == 1\n    total = 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1 and odd_index) or (i % 2 == 0 and not odd_index):\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total += doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2) == odd:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    odd = len(digits) % 2\n\n    for i, digit in enumerate(digits):\n        if (i + odd) % 2 == 0:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total_sum = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:  # double every second digit\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            total_sum += doubled\n        else:\n            total_sum += digits[i]\n    \n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 0\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 0) == odd:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    parity = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == parity:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    total = sum(digits)\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    odd = len(digits) % 2 == 0\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if (i % 2 == 0) == odd:  # Check if we are in the correct position to double\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_sum = sum(digits[-1::-2])\n    even_sum = sum((d * 2 - 9) if (d * 2) > 9 else (d * 2) for d in digits[-2::-2])\n    total_sum = odd_sum + even_sum\n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    even = len(digits) % 2 == 0\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (even and i % 2 == 0) or (not even and i % 2 != 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    \n    total = 0\n    for i, digit in enumerate(digits):\n        if (i % 2 == 0 and odd) or (i % 2 == 1 and not odd):\n            total += digit\n        else:\n            double_digit = digit * 2\n            total += double_digit if double_digit < 10 else double_digit - 9\n            \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_even = len(digits) % 2\n    \n    for i in range(len(digits)):\n        if (i % 2) == odd_even:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```"
        ],
        "4": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n\n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n\n    for d in reversed(digits):\n        if double:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n        double = not double\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    # Reverse the digits for processing from right to left\n    digits.reverse()\n\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    double = False\n\n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled if doubled < 10 else doubled - 9\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_index = len(digits) % 2 == 0\n    for i in range(len(digits)):\n        if (i % 2 == 0 and odd_index) or (i % 2 == 1 and not odd_index):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -1):\n        if (length - i) % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    total = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_indexed = len(digits) % 2 == 1\n    total_sum = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd_indexed else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total_sum += digit\n\n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:\n            double = digits[i] * 2\n            total += double - 9 if double > 9 else double\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n    \n    for i, digit in enumerate(digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n\n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    even_length = len(digits) % 2 == 0\n    \n    for i in range(len(digits)):\n        if (even_length and i % 2 == 0) or (not even_length and i % 2 == 1):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n    \n    for i in range(len(digits)):\n        if i % 2 == 1:  # double every second digit from the right\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_index = len(digits) % 2 == 1\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1) == odd_index:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```"
        ]
    }
}