{
    "0": [
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(d) for d in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(d) for d in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    checksum = 0\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    for digit in digits:\n        checksum += digit\n    return checksum % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(d) for d in n]\n    check_sum = 0\n    \n    for i in range(len(digits) - 1, -1, -1):\n        if (len(digits) - i) % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n        check_sum += digits[i]\n        \n    return check_sum % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    for i in range(0, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return (sum(digits) + check_digit) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(digit) for digit in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    \n    for i in range(len(digits)):\n        if i % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n    return (sum(digits) + check_digit) % 10 == 0",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(d) for d in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    checksum = 0\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    for digit in digits:\n        checksum += digit\n    return checksum % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(d) for d in n]\n    check_sum = 0\n    \n    for i in range(len(digits) - 1, -1, -1):\n        if (len(digits) - i) % 2 == 0:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n                \n        check_sum += digits[i]\n        \n    return check_sum % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    for i in range(0, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return (sum(digits) + check_digit) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(digit) for digit in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    for i in range(0, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits + [check_digit]) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(digit) for digit in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(d) for d in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    checksum = 0\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    for digit in digits:\n        checksum += digit\n    return checksum % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    for i in range(0, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return (sum(digits) + check_digit) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(digit) for digit in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    for i in range(0, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits + [check_digit]) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)][::-1]\n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(digit) for digit in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    for i in range(0, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return (sum(digits) + check_digit) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    nums = [int(digit) for digit in n]\n    for i in range(len(nums) - 2, -1, -2):\n        nums[i] *= 2\n        if nums[i] > 9:\n            nums[i] -= 9\n    return sum(nums) % 10 == 0",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(d) for d in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    checksum = 0\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    for digit in digits:\n        checksum += digit\n    return checksum % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    for i in range(0, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return (sum(digits) + check_digit) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(digit) for digit in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    check_digit = digits.pop()\n    digits = digits[::-1]\n    for i in range(0, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits + [check_digit]) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        },
        {
            "content": "def validate(n):\n    n = str(n)\n    digits = [int(digit) for digit in n]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0",
            "logp": null
        }
    ]
}