{
    "0": {
        "0": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    double = False\n\n    for d in reversed(digits):\n        if double:\n            d *= 2\n            if d > 9:\n                d -= 9\n        checksum += d\n        double = not double\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    total = 0\n    reverse_digits = [int(d) for d in n][::-1]\n\n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # Double every second digit from the right\n            digit *= 2\n            if digit > 9:  # If the result is greater than 9, subtract 9\n                digit -= 9\n        checksum += digit\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled - 9 if doubled > 9 else doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    for i in range(length - 2, -1, -1):\n        if (length - i) % 2 == (length % 2):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    odd = len(digits) % 2 == 0\n    total = 0\n\n    for i, d in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = ''.join(n.split())\n    if not n.isdigit() or len(n) > 16:\n        return False\n    \n    total = 0\n    reverse_digits = [int(d) for d in n][::-1]\n\n    for i, digit in enumerate(reverse_digits):\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    total = 0\n    reverse_digits = n[::-1]\n    \n    for i, digit in enumerate(reverse_digits):\n        digit = int(digit)\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n        \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    digits = [int(d) for d in n]\n    even_length = len(digits) % 2 == 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1 and even_length) or (i % 2 == 0 and not even_length):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    even_length = len(digits) % 2 == 0\n    \n    for i in range(len(digits)):\n        if (i % 2 == 0) == even_length:\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n    \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n).replace(\" \", \"\")]\n    length = len(digits)\n    total = 0\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    total = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    n = n.replace(\" \", \"\")\n    digits = [int(d) for d in n]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in n if d.isdigit()]\n    for i in range(len(digits)-2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n) if d.isdigit()]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```"
        ],
        "1": [
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2) == odd:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    total_sum = sum(digits)\n    return total_sum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i in range(len(digits)):\n        if (i % 2 == 0) != odd:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    \n    total = 0\n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:  # double every second digit from the right\n            digit *= 2\n            if digit > 9:  # sum of the digits if greater than 9\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    # Start from the right\n    digits.reverse()\n    \n    for i in range(1, len(digits), 2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n\n    for i in range(len(digits)):\n        if i % 2 == 1:  # Double every second digit\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)[::-1]]\n    total = 0\n\n    for i in range(len(digits)):\n        if i % 2 == 1:\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    double = False\n    \n    for digit in reversed(digits):\n        if double:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n        double = not double\n        \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_index = len(digits) % 2 == 1\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd_index else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        digit = digits[length - 1 - i]\n        if i % 2 == 1:\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        checksum += digit\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)][::-1]\n    total = 0\n\n    for i in range(len(digits)):\n        if i % 2 == 1:  # double every second digit from the right\n            doubled = digits[i] * 2\n            total += doubled - 9 if doubled > 9 else doubled\n        else:\n            total += digits[i]\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n    \n    total = sum(digits)\n    \n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    \n    for i in range(length - 2, -1, -2):\n        digits[i] *= 2\n        if digits[i] > 9:\n            digits[i] -= 9\n            \n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i, d in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            d *= 2\n            if d > 9:\n                d -= 9\n        total += d\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    length = len(digits)\n    checksum = 0\n\n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            if doubled > 9:\n                doubled -= 9\n            checksum += doubled\n        else:\n            checksum += digits[i]\n\n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    \n    for i in range(len(digits)):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digits[i] *= 2\n            if digits[i] > 9:\n                digits[i] -= 9\n\n    return sum(digits) % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    checksum = 0\n    length = len(digits)\n    \n    for i in range(length):\n        if (length - i) % 2 == 0:\n            doubled = digits[i] * 2\n            checksum += doubled if doubled < 10 else doubled - 9\n        else:\n            checksum += digits[i]\n    \n    return checksum % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd = len(digits) % 2 == 1\n    total = 0\n\n    for i, digit in enumerate(digits):\n        if (i % 2 == 1) if odd else (i % 2 == 0):\n            digit *= 2\n            if digit > 9:\n                digit -= 9\n        total += digit\n\n    return total % 10 == 0\n```",
            "```python\ndef validate(n):\n    digits = [int(d) for d in str(n)]\n    odd_sum = sum(digits[-1::-2])\n    even_sum = sum((d * 2 - 9) if (d * 2) > 9 else (d * 2) for d in digits[-2::-2])\n    return (odd_sum + even_sum) % 10 == 0\n```"
        ]
    }
}