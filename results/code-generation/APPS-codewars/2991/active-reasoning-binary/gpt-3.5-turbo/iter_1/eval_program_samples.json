{
    "0": {
        "0": [
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    if b == w or b == w + 1:\n        return \"Unsure\"\n    \n    if b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # if both b and w are zero\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # if there are no white marbles\n    if w == 0:\n        if b % 2 == 0:\n            return \"Black\"\n        else:\n            return \"Unsure\"\n    \n    # if there are no black marbles\n    if b == 0:\n        if w % 2 == 0:\n            return \"White\"\n        else:\n            return \"Unsure\"\n    \n    # if there are black and white marbles\n    if b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) > 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if (b + w) % 2 == 0 else \"White\"",
            "def not_so_random(b,w):\n    # if there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # if there is only one marble left, return its color\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n    \n    # if there are an odd number of marbles, return \"Unsure\"\n    if (b+w) % 2 == 1:\n        return \"Unsure\"\n    \n    # if the number of black and white marbles is equal, return \"Unsure\"\n    if b == w:\n        return \"Unsure\"\n    \n    # if there are more black marbles, return \"Black\"\n    if b > w:\n        return \"Black\"\n    \n    # if there are more white marbles, return \"White\"\n    if w > b:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, we cannot predict the color\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble, we can predict the color based on the remaining marbles\n    if b == 0:\n        if w % 2 == 0:\n            return \"Black\"\n        else:\n            return \"White\"\n    \n    if w == 0:\n        if b % 2 == 0:\n            return \"White\"\n        else:\n            return \"Black\"\n    \n    # If there are more black marbles, we can predict the color based on the remaining marbles\n    if b > w:\n        if (b - 1) >= w or (w - 1) >= b:\n            return \"Black\"\n        else:\n            return \"Unsure\"\n    \n    # If there are more white marbles, we can predict the color based on the remaining marbles\n    if w > b:\n        if (w - 1) >= b or (b - 1) >= w:\n            return \"White\"\n        else:\n            return \"Unsure\"\n    \n    # If there are equal number of black and white marbles, we cannot predict the color\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w == 1:\n        return \"White\"\n    elif b == 1 and w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        if w % 2 == 1:\n            return \"White\"\n        else:\n            return \"Black\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If there are no marbles in the hat, we cannot predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are only black marbles or only white marbles in the hat, we can safely predict the color of the last marble\n    if b == 0 or w == 0:\n        return \"Black\" if b > 0 else \"White\"\n    \n    # If there are an odd number of marbles in the hat, we cannot predict the color of the last marble\n    if (b + w) % 2 == 1:\n        return \"Unsure\"\n    \n    # If there are an even number of marbles in the hat, the color of the last marble will be the same as the color of the second-to-last marble\n    return \"Black\" if b % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # Check if the number of black and white marbles is odd\n    if b % 2 == 1 and w % 2 == 1:\n        return \"Unsure\"\n    # If the number of black marbles is odd and the number of white marbles is even, the last marble will be black\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    # If the number of black marbles is even and the number of white marbles is odd, the last marble will be white\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    # If both the number of black and white marbles are even, the last marble will be black\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # Check if the difference between the number of black and white marbles is greater than 1\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    # Check if there are more black marbles than white marbles\n    if b > w:\n        return \"Black\"\n    \n    # Check if there are more white marbles than black marbles\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is equal, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If the number of black or white marbles is 0, return \"Unsure\"\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    if (b + w) % 2 != 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is even, check the difference\n    diff = abs(b - w)\n    \n    # If the difference is even, return \"Black\" or \"White\" depending on the greater number of marbles\n    if diff % 2 == 0:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If the difference is odd, return \"Unsure\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If the number of black marbles is 0, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If the number of white marbles is 0, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If the difference between the number of black and white marbles is 1, we can predict the color of the last marble\n    if abs(b - w) == 1:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # Otherwise, we are unsure\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If there are an even number of black and white marbles, the last marble will be black\n    if (b + w) % 2 == 0:\n        return \"Black\"\n    # If there are an odd number of black and white marbles, the last marble will be white\n    return \"White\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are an odd number of black and white marbles,\n    # the last marble will be black\n    if (b + w) % 2 == 1:\n        return \"Black\"\n    \n    # Otherwise, it is unsure\n    return \"Unsure\""
        ],
        "1": [
            "def not_so_random(b, w):\n    # if both b and w are zero, there is no marble left\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # if the number of black and white marbles are the same, the last marble will be black\n    elif b == w:\n        return \"Black\"\n    # if the difference between the number of black and white marbles is 1, the last marble will be white\n    elif abs(b - w) == 1:\n        return \"White\"\n    # if the difference between the number of black and white marbles is greater than 1, it is unsure\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) > 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if (b + w) % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w == 1:\n        return \"White\"\n    elif b == 1 and w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If there are no marbles in the hat, we cannot predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are only black marbles or only white marbles in the hat, we can safely predict the color of the last marble\n    if b == 0 or w == 0:\n        return \"Black\" if b > 0 else \"White\"\n    \n    # If there are an odd number of marbles in the hat, we cannot predict the color of the last marble\n    if (b + w) % 2 == 1:\n        return \"Unsure\"\n    \n    # If there are an even number of marbles in the hat, the color of the last marble will be the same as the color of the second-to-last marble\n    return \"Black\" if b % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If the number of black or white marbles is 0, return \"Unsure\"\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    if (b + w) % 2 != 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is even, check the difference\n    diff = abs(b - w)\n    \n    # If the difference is even, return \"Black\" or \"White\" depending on the greater number of marbles\n    if diff % 2 == 0:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If the difference is odd, return \"Unsure\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If there are an even number of black and white marbles, the last marble will be black\n    if (b + w) % 2 == 0:\n        return \"Black\"\n    # If there are an odd number of black and white marbles, the last marble will be white\n    return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are only black marbles, return \"Black\"\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # If there are only white marbles, return \"White\"\n    elif b == 0 and w > 0:\n        return \"White\"\n    # If the number of black and white marbles are both odd or both even, return \"Black\"\n    elif (b % 2 == 0 and w % 2 == 0) or (b % 2 != 0 and w % 2 != 0):\n        return \"Black\"\n    # Otherwise, return \"White\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif abs(b-w) == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif min(b, w) == 1:\n        return \"Black\" if b % 2 == 0 else \"White\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    else:\n        return \"Black\" if (b + w) % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black and white marbles is the same, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # If the difference between the number of black and white marbles is 1, the last marble will be black\n    if abs(b - w) == 1:\n        return \"Black\"\n    \n    # Otherwise, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) >= 2:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\""
        ],
        "2": [
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif min(b, w) == 1:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif min(b, w) == 1:\n        return \"White\"\n    elif min(b, w) % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # if the initial number of black marbles is 0, then the last marble must be white\n    if b == 0:\n        return \"White\"\n    # if the initial number of white marbles is 0, then the last marble must be black\n    if w == 0:\n        return \"Black\"\n    # if the difference between the number of black and white marbles is greater than 1, then it is not possible to predict the color of the last marble\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    # if the difference between the number of black and white marbles is 1, then the color of the last marble is determined by the color of the majority of marbles\n    if abs(b - w) == 1:\n        return \"Black\" if b > w else \"White\"\n    # if the difference between the number of black and white marbles is 0, then the color of the last marble is determined by the color of the first marble\n    if b == w:\n        return \"Black\" if b % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 or w == 0:\n        return \"White\" if b == 0 else \"Black\"\n    elif min(b, w) == 1 and max(b, w) >= 2:\n        return \"Unsure\"\n    elif min(b, w) >= 2:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b > w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is unsure\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b >= w - 1 and b <= 3 * (w + 1):\n        return \"Black\"\n    elif w >= b - 1 and w <= 3 * (b + 1):\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    elif b < w:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is 1 or 2, the last marble will be black\n    if abs(b - w) <= 2:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is greater than 2, the last marble will be white\n    return \"White\"",
            "def not_so_random(b,w):\n    # check if the initial number of black marbles is equal to the initial number of white marbles\n    if b == w:\n        # if the number of black and white marbles is even, the last marble will be black\n        if b % 2 == 0:\n            return \"Black\"\n        # if the number of black and white marbles is odd, the last marble will be white\n        else:\n            return \"White\"\n    # if the initial number of black marbles is greater than the initial number of white marbles\n    elif b > w:\n        # if the difference between the number of black and white marbles is more than 1, we are unsure of the last marble color\n        if b - w > 1:\n            return \"Unsure\"\n        # if the difference between the number of black and white marbles is 1, the last marble will be black\n        else:\n            return \"Black\"\n    # if the initial number of black marbles is less than the initial number of white marbles\n    else:\n        # if the difference between the number of black and white marbles is more than 1, we are unsure of the last marble color\n        if w - b > 1:\n            return \"Unsure\"\n        # if the difference between the number of black and white marbles is 1, the last marble will be white\n        else:\n            return \"White\""
        ],
        "3": [
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b >= w - 1 and b <= 3 * (w + 1):\n        return \"Black\"\n    elif w >= b - 1 and w <= 3 * (b + 1):\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is 1 or 2, the last marble will be black\n    if abs(b - w) <= 2:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is greater than 2, the last marble will be white\n    return \"White\""
        ],
        "4": [
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 or w == 0:\n        return \"White\" if b == 0 else \"Black\"\n    elif min(b, w) == 1 and max(b, w) >= 2:\n        return \"Unsure\"\n    elif min(b, w) >= 2:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\""
        ]
    },
    "1": {
        "0": [
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # Check if the number of black and white marbles is odd\n    if b % 2 == 1 and w % 2 == 1:\n        return \"Unsure\"\n    # If the number of black marbles is odd and the number of white marbles is even, the last marble will be black\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    # If the number of black marbles is even and the number of white marbles is odd, the last marble will be white\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    # If both the number of black and white marbles are even, the last marble will be black\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # Check if the difference between the number of black and white marbles is greater than 1\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    # Check if there are more black marbles than white marbles\n    if b > w:\n        return \"Black\"\n    \n    # Check if there are more white marbles than black marbles\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is equal, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If the number of black or white marbles is 0, return \"Unsure\"\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    if (b + w) % 2 != 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is even, check the difference\n    diff = abs(b - w)\n    \n    # If the difference is even, return \"Black\" or \"White\" depending on the greater number of marbles\n    if diff % 2 == 0:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If the difference is odd, return \"Unsure\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If the number of black marbles is 0, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If the number of white marbles is 0, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If the difference between the number of black and white marbles is 1, we can predict the color of the last marble\n    if abs(b - w) == 1:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # Otherwise, we are unsure\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If there are an even number of black and white marbles, the last marble will be black\n    if (b + w) % 2 == 0:\n        return \"Black\"\n    # If there are an odd number of black and white marbles, the last marble will be white\n    return \"White\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are an odd number of black and white marbles,\n    # the last marble will be black\n    if (b + w) % 2 == 1:\n        return \"Black\"\n    \n    # Otherwise, it is unsure\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\" if w%2 == 0 else \"Unsure\"\n    if w == 0:\n        return \"Black\"\n    if b%2 == 0:\n        return \"Black\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are more black marbles than white marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles than black marbles, the last marble will be white\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is the same, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b,w):\n\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    if b > w:\n        return \"Black\"\n    \n    if w > b:\n        return \"White\"\n    \n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == w:\n        return \"Unsure\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are only black marbles, return \"Black\"\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # If there are only white marbles, return \"White\"\n    elif b == 0 and w > 0:\n        return \"White\"\n    # If the number of black and white marbles are both odd or both even, return \"Black\"\n    elif (b % 2 == 0 and w % 2 == 0) or (b % 2 != 0 and w % 2 != 0):\n        return \"Black\"\n    # Otherwise, return \"White\"\n    else:\n        return \"White\""
        ],
        "1": [
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If the number of black or white marbles is 0, return \"Unsure\"\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    if (b + w) % 2 != 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is even, check the difference\n    diff = abs(b - w)\n    \n    # If the difference is even, return \"Black\" or \"White\" depending on the greater number of marbles\n    if diff % 2 == 0:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If the difference is odd, return \"Unsure\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If there are an even number of black and white marbles, the last marble will be black\n    if (b + w) % 2 == 0:\n        return \"Black\"\n    # If there are an odd number of black and white marbles, the last marble will be white\n    return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are only black marbles, return \"Black\"\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # If there are only white marbles, return \"White\"\n    elif b == 0 and w > 0:\n        return \"White\"\n    # If the number of black and white marbles are both odd or both even, return \"Black\"\n    elif (b % 2 == 0 and w % 2 == 0) or (b % 2 != 0 and w % 2 != 0):\n        return \"Black\"\n    # Otherwise, return \"White\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    if b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif abs(b-w) == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif min(b, w) == 1:\n        return \"Black\" if b % 2 == 0 else \"White\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    else:\n        return \"Black\" if (b + w) % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black and white marbles is the same, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # If the difference between the number of black and white marbles is 1, the last marble will be black\n    if abs(b - w) == 1:\n        return \"Black\"\n    \n    # Otherwise, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) >= 2:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble left, return its color\n    if b == 1:\n        return \"Black\"\n    if w == 1:\n        return \"White\"\n    \n    # If there are an odd number of marbles, return \"Unsure\"\n    if (b + w) % 2 == 1:\n        return \"Unsure\"\n    \n    # If there are an even number of marbles and the number of black and white marbles are the same, return \"White\"\n    if b == w:\n        return \"White\"\n    \n    # If there are an even number of marbles and the number of black marbles is one more than the number of white marbles, return \"Black\"\n    if b == w + 1:\n        return \"Black\"\n    \n    # If none of the above conditions are satisfied, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b,w):\n    # If both b and w are zero, then there are no marbles left.\n    # In this case, we cannot predict the color of the last marble.\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If b and w are both odd or both even, then we can predict the color of the last marble.\n    # This is because every pair we remove will have different colors, and we will always be left with a black marble.\n    if b % 2 == w % 2:\n        return \"Black\"\n    \n    # If b is odd and w is even, or b is even and w is odd, then we cannot predict the color of the last marble.\n    # This is because at least one pair we remove will have the same color, and we will be left with a white marble.\n    return \"Unsure\"",
            "def not_so_random(b,w):\n    # If both b and w are 0, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If b and w are both even or both odd, return \"White\"\n    if (b % 2 == 0 and w % 2 == 0) or (b % 2 == 1 and w % 2 == 1):\n        return \"White\"\n    \n    # If b is even and w is odd, return \"Black\"\n    if b % 2 == 0 and w % 2 == 1:\n        return \"Black\"\n    \n    # If b is odd and w is even, return \"Unsure\"\n    if b % 2 == 1 and w % 2 == 0:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) > 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if (b+w) % 2 == 0 else \"White\"",
            "def not_so_random(b,w):\n    # if there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there are more black marbles than white marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # if there are more white marbles than black marbles, the last marble will be white\n    if w > b:\n        return \"White\"\n    \n    # if there are an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, the last marble will be black\n    elif w == 0:\n        return \"Black\"\n    # If there are an odd number of marbles, it is not possible to determine the color of the last marble\n    elif (b + w) % 2 != 0:\n        return \"Unsure\"\n    # If there are an even number of marbles, the last marble will be the opposite color of the initial color\n    else:\n        return \"Black\" if b > w else \"White\""
        ],
        "2": [
            "def not_so_random(b, w):\n    # if the initial number of black marbles is 0, then the last marble must be white\n    if b == 0:\n        return \"White\"\n    # if the initial number of white marbles is 0, then the last marble must be black\n    if w == 0:\n        return \"Black\"\n    # if the difference between the number of black and white marbles is greater than 1, then it is not possible to predict the color of the last marble\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    # if the difference between the number of black and white marbles is 1, then the color of the last marble is determined by the color of the majority of marbles\n    if abs(b - w) == 1:\n        return \"Black\" if b > w else \"White\"\n    # if the difference between the number of black and white marbles is 0, then the color of the last marble is determined by the color of the first marble\n    if b == w:\n        return \"Black\" if b % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b > w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b >= w - 1 and b <= 3 * (w + 1):\n        return \"Black\"\n    elif w >= b - 1 and w <= 3 * (b + 1):\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    elif b < w:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is 1 or 2, the last marble will be black\n    if abs(b - w) <= 2:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is greater than 2, the last marble will be white\n    return \"White\"",
            "def not_so_random(b,w):\n    # check if the initial number of black marbles is equal to the initial number of white marbles\n    if b == w:\n        # if the number of black and white marbles is even, the last marble will be black\n        if b % 2 == 0:\n            return \"Black\"\n        # if the number of black and white marbles is odd, the last marble will be white\n        else:\n            return \"White\"\n    # if the initial number of black marbles is greater than the initial number of white marbles\n    elif b > w:\n        # if the difference between the number of black and white marbles is more than 1, we are unsure of the last marble color\n        if b - w > 1:\n            return \"Unsure\"\n        # if the difference between the number of black and white marbles is 1, the last marble will be black\n        else:\n            return \"Black\"\n    # if the initial number of black marbles is less than the initial number of white marbles\n    else:\n        # if the difference between the number of black and white marbles is more than 1, we are unsure of the last marble color\n        if w - b > 1:\n            return \"Unsure\"\n        # if the difference between the number of black and white marbles is 1, the last marble will be white\n        else:\n            return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\""
        ],
        "3": [
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 or w == 0:\n        return \"White\" if b == 0 else \"Black\"\n    elif min(b, w) == 1 and max(b, w) >= 2:\n        return \"Unsure\"\n    elif min(b, w) >= 2:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is 1 or 2, the last marble will be black\n    if abs(b - w) <= 2:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is greater than 2, the last marble will be white\n    return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"Black\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\""
        ],
        "4": [
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\""
        ]
    },
    "2": {
        "0": [
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\" if w%2 == 0 else \"Unsure\"\n    if w == 0:\n        return \"Black\"\n    if b%2 == 0:\n        return \"Black\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are more black marbles than white marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles than black marbles, the last marble will be white\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is the same, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b,w):\n\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    if b > w:\n        return \"Black\"\n    \n    if w > b:\n        return \"White\"\n    \n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == w:\n        return \"Unsure\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are only black marbles, return \"Black\"\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # If there are only white marbles, return \"White\"\n    elif b == 0 and w > 0:\n        return \"White\"\n    # If the number of black and white marbles are both odd or both even, return \"Black\"\n    elif (b % 2 == 0 and w % 2 == 0) or (b % 2 != 0 and w % 2 != 0):\n        return \"Black\"\n    # Otherwise, return \"White\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\" if w % 2 == 1 else \"Black\"\n    elif w == 0:\n        return \"Black\" if b % 2 == 1 else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif abs(b-w) == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif min(b, w) == 1:\n        return \"Black\" if b % 2 == 0 else \"White\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble, return its color\n    if b == 1 and w == 0:\n        return \"Black\"\n    if b == 0 and w == 1:\n        return \"White\"\n    \n    # If there are more black marbles than white marbles, return \"Black\"\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles than black marbles, return \"White\"\n    if w > b:\n        return \"White\"\n    \n    # If there are an equal number of black and white marbles, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n    if abs(b-w) <= 1:\n        return \"Unsure\"\n    return \"Black\" if (min(b,w) + 1) % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, return \"White\"\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, return \"Black\"\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is even, return \"Black\"\n    if b % 2 == 0:\n        return \"Black\"\n    \n    # If the number of white marbles is even, return \"White\"\n    if w % 2 == 0:\n        return \"White\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    else:\n        return \"Black\" if (b + w) % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black and white marbles is the same, return \"Unsure\"\n    if b == w:\n        return \"Unsure\"\n    \n    # If there are more black marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles, the last marble will be white\n    if w > b:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) >= 2:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\""
        ],
        "1": [
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are only black marbles, return \"Black\"\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # If there are only white marbles, return \"White\"\n    elif b == 0 and w > 0:\n        return \"White\"\n    # If the number of black and white marbles are both odd or both even, return \"Black\"\n    elif (b % 2 == 0 and w % 2 == 0) or (b % 2 != 0 and w % 2 != 0):\n        return \"Black\"\n    # Otherwise, return \"White\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif abs(b-w) == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif min(b, w) == 1:\n        return \"Black\" if b % 2 == 0 else \"White\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    else:\n        return \"Black\" if (b + w) % 2 == 0 else \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) >= 2:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble left, return its color\n    if b == 1:\n        return \"Black\"\n    if w == 1:\n        return \"White\"\n    \n    # If there are an odd number of marbles, return \"Unsure\"\n    if (b + w) % 2 == 1:\n        return \"Unsure\"\n    \n    # If there are an even number of marbles and the number of black and white marbles are the same, return \"White\"\n    if b == w:\n        return \"White\"\n    \n    # If there are an even number of marbles and the number of black marbles is one more than the number of white marbles, return \"Black\"\n    if b == w + 1:\n        return \"Black\"\n    \n    # If none of the above conditions are satisfied, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b,w):\n    # If both b and w are zero, then there are no marbles left.\n    # In this case, we cannot predict the color of the last marble.\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If b and w are both odd or both even, then we can predict the color of the last marble.\n    # This is because every pair we remove will have different colors, and we will always be left with a black marble.\n    if b % 2 == w % 2:\n        return \"Black\"\n    \n    # If b is odd and w is even, or b is even and w is odd, then we cannot predict the color of the last marble.\n    # This is because at least one pair we remove will have the same color, and we will be left with a white marble.\n    return \"Unsure\"",
            "def not_so_random(b,w):\n    # If both b and w are 0, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If b and w are both even or both odd, return \"White\"\n    if (b % 2 == 0 and w % 2 == 0) or (b % 2 == 1 and w % 2 == 1):\n        return \"White\"\n    \n    # If b is even and w is odd, return \"Black\"\n    if b % 2 == 0 and w % 2 == 1:\n        return \"Black\"\n    \n    # If b is odd and w is even, return \"Unsure\"\n    if b % 2 == 1 and w % 2 == 0:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) > 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if (b+w) % 2 == 0 else \"White\"",
            "def not_so_random(b,w):\n    # if there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there are more black marbles than white marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # if there are more white marbles than black marbles, the last marble will be white\n    if w > b:\n        return \"White\"\n    \n    # if there are an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, the last marble will be black\n    elif w == 0:\n        return \"Black\"\n    # If there are an odd number of marbles, it is not possible to determine the color of the last marble\n    elif (b + w) % 2 != 0:\n        return \"Unsure\"\n    # If there are an even number of marbles, the last marble will be the opposite color of the initial color\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    else:\n        return \"White\" if b == w else \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # check if the initial number of black or white marbles is 0 or 1\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n\n    # check if the difference between the number of black and white marbles is more than 1\n    if abs(b - w) > 1:\n        return \"Unsure\"\n\n    # check the color of the last marble based on the difference between the number of black and white marbles\n    if b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"Black\" if b > 0 else \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    if b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    else:\n        return \"White\""
        ],
        "2": [
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is unsure\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    elif b < w:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is 1 or 2, the last marble will be black\n    if abs(b - w) <= 2:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is greater than 2, the last marble will be white\n    return \"White\"",
            "def not_so_random(b,w):\n    # check if the initial number of black marbles is equal to the initial number of white marbles\n    if b == w:\n        # if the number of black and white marbles is even, the last marble will be black\n        if b % 2 == 0:\n            return \"Black\"\n        # if the number of black and white marbles is odd, the last marble will be white\n        else:\n            return \"White\"\n    # if the initial number of black marbles is greater than the initial number of white marbles\n    elif b > w:\n        # if the difference between the number of black and white marbles is more than 1, we are unsure of the last marble color\n        if b - w > 1:\n            return \"Unsure\"\n        # if the difference between the number of black and white marbles is 1, the last marble will be black\n        else:\n            return \"Black\"\n    # if the initial number of black marbles is less than the initial number of white marbles\n    else:\n        # if the difference between the number of black and white marbles is more than 1, we are unsure of the last marble color\n        if w - b > 1:\n            return \"Unsure\"\n        # if the difference between the number of black and white marbles is 1, the last marble will be white\n        else:\n            return \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n    if w > b+1 or b > w+1:\n        return \"Unsure\"\n    return \"Black\" if b > w else \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if w == 0:\n        return \"Black\"\n    elif b == 0:\n        return \"White\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) >= 2:\n        return \"Unsure\"\n    else:\n        return \"Black\" if (b+w) % 2 == 1 else \"White\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        if b == 0:\n            return \"Unsure\"\n        else:\n            return \"Black\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\""
        ],
        "3": [
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b >= w - 1 and b <= 3 * (w + 1):\n        return \"Black\"\n    elif w >= b - 1 and w <= 3 * (b + 1):\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is 1 or 2, the last marble will be black\n    if abs(b - w) <= 2:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is greater than 2, the last marble color is uncertain\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"Black\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        if b == 0:\n            return \"Unsure\"\n        else:\n            return \"Black\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\""
        ],
        "4": [
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b >= w - 1 and b <= 3 * (w + 1):\n        return \"Black\"\n    elif w >= b - 1 and w <= 3 * (b + 1):\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"Black\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        if b == 0:\n            return \"Unsure\"\n        else:\n            return \"Black\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\""
        ]
    }
}