{
    "0": [
        {
            "content": "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # Check if the number of black and white marbles is odd\n    if b % 2 == 1 and w % 2 == 1:\n        return \"Unsure\"\n    # If the number of black marbles is odd and the number of white marbles is even, the last marble will be black\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    # If the number of black marbles is even and the number of white marbles is odd, the last marble will be white\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    # If both the number of black and white marbles are even, the last marble will be black\n    else:\n        return \"Black\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # Check if the difference between the number of black and white marbles is greater than 1\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    # Check if there are more black marbles than white marbles\n    if b > w:\n        return \"Black\"\n    \n    # Check if there are more white marbles than black marbles\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is equal, return \"Unsure\"\n    return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # If the number of black or white marbles is 0, return \"Unsure\"\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    if (b + w) % 2 != 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is even, check the difference\n    diff = abs(b - w)\n    \n    # If the difference is even, return \"Black\" or \"White\" depending on the greater number of marbles\n    if diff % 2 == 0:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If the difference is odd, return \"Unsure\"\n    else:\n        return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    if b == 0:\n        return \"White\" if w%2 == 0 else \"Unsure\"\n    if w == 0:\n        return \"Black\"\n    if b%2 == 0:\n        return \"Black\"\n    return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are more black marbles than white marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles than black marbles, the last marble will be white\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is the same, return \"Unsure\"\n    return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # If the number of black or white marbles is 0, return \"Unsure\"\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    if (b + w) % 2 != 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is even, check the difference\n    diff = abs(b - w)\n    \n    # If the difference is even, return \"Black\" or \"White\" depending on the greater number of marbles\n    if diff % 2 == 0:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If the difference is odd, return \"Unsure\"\n    else:\n        return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif abs(b-w) == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif min(b, w) == 1:\n        return \"Black\" if b % 2 == 0 else \"White\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble left, return its color\n    if b == 1:\n        return \"Black\"\n    if w == 1:\n        return \"White\"\n    \n    # If there are an odd number of marbles, return \"Unsure\"\n    if (b + w) % 2 == 1:\n        return \"Unsure\"\n    \n    # If there are an even number of marbles and the number of black and white marbles are the same, return \"White\"\n    if b == w:\n        return \"White\"\n    \n    # If there are an even number of marbles and the number of black marbles is one more than the number of white marbles, return \"Black\"\n    if b == w + 1:\n        return \"Black\"\n    \n    # If none of the above conditions are satisfied, return \"Unsure\"\n    return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    # If both b and w are zero, then there are no marbles left.\n    # In this case, we cannot predict the color of the last marble.\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If b and w are both odd or both even, then we can predict the color of the last marble.\n    # This is because every pair we remove will have different colors, and we will always be left with a black marble.\n    if b % 2 == w % 2:\n        return \"Black\"\n    \n    # If b is odd and w is even, or b is even and w is odd, then we cannot predict the color of the last marble.\n    # This is because at least one pair we remove will have the same color, and we will be left with a white marble.\n    return \"Unsure\"",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def not_so_random(b, w):\n    # if the initial number of black marbles is 0, then the last marble must be white\n    if b == 0:\n        return \"White\"\n    # if the initial number of white marbles is 0, then the last marble must be black\n    if w == 0:\n        return \"Black\"\n    # if the difference between the number of black and white marbles is greater than 1, then it is not possible to predict the color of the last marble\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    # if the difference between the number of black and white marbles is 1, then the color of the last marble is determined by the color of the majority of marbles\n    if abs(b - w) == 1:\n        return \"Black\" if b > w else \"White\"\n    # if the difference between the number of black and white marbles is 0, then the color of the last marble is determined by the color of the first marble that was removed\n    if abs(b - w) == 0:\n        return \"Black\" if b % 2 == 0 else \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    elif b < w:\n        return \"White\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is 1 or 2, the last marble will be black\n    if abs(b - w) <= 2:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is greater than 2, the last marble will be white\n    return \"White\"",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) <= 1:\n        return \"Black\" if b >= w else \"White\"\n    else:\n        return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is greater than or equal to the number of white marbles\n    # the last marble will be black\n    if b >= w:\n        return \"Black\"\n    \n    # If the number of black marbles is one less than the number of white marbles\n    # the last marble will be white\n    if b + 1 == w:\n        return \"White\"\n    \n    # If none of the above conditions are met, the last marble color is uncertain\n    return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b >= w - 1 and b <= 3 * (w + 1):\n        return \"Black\"\n    elif w >= b - 1 and w <= 3 * (b + 1):\n        return \"White\"\n    else:\n        return \"Unsure\"",
            "logp": null
        },
        {
            "content": "def not_so_random(b, w):\n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an equal number of black and white marbles, the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is 1 or 2, the last marble will be black\n    if abs(b - w) <= 2:\n        return \"Black\"\n    \n    # if the difference between the number of black and white marbles is greater than 2, the last marble will be white\n    return \"White\"",
            "logp": null
        }
    ]
}