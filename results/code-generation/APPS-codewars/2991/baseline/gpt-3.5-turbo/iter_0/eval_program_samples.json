{
    "0": {
        "0": [
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    if b == w or b == w + 1:\n        return \"Unsure\"\n    \n    if b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # if both b and w are zero\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # if there are no white marbles\n    if w == 0:\n        if b % 2 == 0:\n            return \"Black\"\n        else:\n            return \"Unsure\"\n    \n    # if there are no black marbles\n    if b == 0:\n        if w % 2 == 0:\n            return \"White\"\n        else:\n            return \"Unsure\"\n    \n    # if there are black and white marbles\n    if b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) > 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if (b + w) % 2 == 0 else \"White\"",
            "def not_so_random(b,w):\n    # if there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # if there is only one marble left, return its color\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n    \n    # if there are an odd number of marbles, return \"Unsure\"\n    if (b+w) % 2 == 1:\n        return \"Unsure\"\n    \n    # if the number of black and white marbles is equal, return \"Unsure\"\n    if b == w:\n        return \"Unsure\"\n    \n    # if there are more black marbles, return \"Black\"\n    if b > w:\n        return \"Black\"\n    \n    # if there are more white marbles, return \"White\"\n    if w > b:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, we cannot predict the color\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble, we can predict the color based on the remaining marbles\n    if b == 0:\n        if w % 2 == 0:\n            return \"Black\"\n        else:\n            return \"White\"\n    \n    if w == 0:\n        if b % 2 == 0:\n            return \"White\"\n        else:\n            return \"Black\"\n    \n    # If there are more black marbles, we can predict the color based on the remaining marbles\n    if b > w:\n        if (b - 1) >= w or (w - 1) >= b:\n            return \"Black\"\n        else:\n            return \"Unsure\"\n    \n    # If there are more white marbles, we can predict the color based on the remaining marbles\n    if w > b:\n        if (w - 1) >= b or (b - 1) >= w:\n            return \"White\"\n        else:\n            return \"Unsure\"\n    \n    # If there are equal number of black and white marbles, we cannot predict the color\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if abs(b-w) > 1:\n        return \"Unsure\"\n    elif b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w == 1:\n        return \"White\"\n    elif b == 1 and w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        if w % 2 == 1:\n            return \"White\"\n        else:\n            return \"Black\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If there are no marbles in the hat, we cannot predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are only black marbles or only white marbles in the hat, we can safely predict the color of the last marble\n    if b == 0 or w == 0:\n        return \"Black\" if b > 0 else \"White\"\n    \n    # If there are an odd number of marbles in the hat, we cannot predict the color of the last marble\n    if (b + w) % 2 == 1:\n        return \"Unsure\"\n    \n    # If there are an even number of marbles in the hat, the color of the last marble will be the same as the color of the second-to-last marble\n    return \"Black\" if b % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # Check if the number of black and white marbles is odd\n    if b % 2 == 1 and w % 2 == 1:\n        return \"Unsure\"\n    # If the number of black marbles is odd and the number of white marbles is even, the last marble will be black\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    # If the number of black marbles is even and the number of white marbles is odd, the last marble will be white\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    # If both the number of black and white marbles are even, the last marble will be black\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # Check if the difference between the number of black and white marbles is greater than 1\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    # Check if there are more black marbles than white marbles\n    if b > w:\n        return \"Black\"\n    \n    # Check if there are more white marbles than black marbles\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is equal, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If the number of black or white marbles is 0, return \"Unsure\"\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    if (b + w) % 2 != 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is even, check the difference\n    diff = abs(b - w)\n    \n    # If the difference is even, return \"Black\" or \"White\" depending on the greater number of marbles\n    if diff % 2 == 0:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If the difference is odd, return \"Unsure\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If the number of black marbles is 0, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If the number of white marbles is 0, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If the difference between the number of black and white marbles is 1, we can predict the color of the last marble\n    if abs(b - w) == 1:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # Otherwise, we are unsure\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If there are an even number of black and white marbles, the last marble will be black\n    if (b + w) % 2 == 0:\n        return \"Black\"\n    # If there are an odd number of black and white marbles, the last marble will be white\n    return \"White\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are an odd number of black and white marbles,\n    # the last marble will be black\n    if (b + w) % 2 == 1:\n        return \"Black\"\n    \n    # Otherwise, it is unsure\n    return \"Unsure\""
        ],
        "1": [
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"Black\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        if w % 2 == 0:\n            return \"Black\"\n        else:\n            return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b - w) >= 2:\n        return \"Unsure\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n\n    # calculate the absolute difference between the number of black and white marbles\n    diff = abs(b - w)\n\n    # if the difference is 0, it means there are an equal number of black and white marbles\n    if diff == 0:\n        # if the number of black marbles is odd, the last marble will be black; otherwise, it will be white\n        if b % 2 == 1:\n            return \"Black\"\n        else:\n            return \"White\"\n\n    # if the difference is 1, it means there is only one more black or white marble than the other color\n    elif diff == 1:\n        return \"Unsure\"\n\n    # if the difference is greater than 1, it means there are significantly more black or white marbles than the other color\n    else:\n        # if the number of black marbles is greater than the number of white marbles, the last marble will be black; otherwise, it will be white\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\" if (b+w)%2 == 0 else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b == 1 and w == 1:\n        return \"Black\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    if b == 0:\n        return \"White\"\n    \n    if w == 0:\n        return \"Black\"\n    \n    if b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    \n    return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b == 1 and w == 1:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    #if both black and white marbles are equal\n    if b == w:\n        #check if there are even number of marbles \n        if b % 2 == 0:\n            #the last marble will be white because for every pair of black and white, a white marble is added\n            return \"White\"\n        else:\n            #the last marble will be black because for every pair of black and white, a white marble is added\n            return \"Black\"\n    #if there are more black marbles than white marbles\n    elif b > w:\n        #check if the difference between black and white marbles is more than 1\n        if b - w > 1:\n            #the last marble will be black because for every pair of black and white, a black marble is added\n            return \"Black\"\n        else:\n            #the last marble can be either black or white, we are unsure\n            return \"Unsure\"\n    #if there are more white marbles than black marbles\n    else:\n        #check if the difference between white and black marbles is more than 1\n        if w - b > 1:\n            #the last marble will be white because for every pair of black and white, a black marble is added\n            return \"White\"\n        else:\n            #the last marble can be either black or white, we are unsure\n            return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    elif w > b:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If the difference between the number of black and white marbles is greater than 1,\n    # it is not possible to predict the color of the last marble\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    # If there are an odd number of marbles, the last marble will be the same color as the larger group\n    if (b + w) % 2 == 1:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If there are an even number of marbles, the last marble will be black\n    return \"Black\"",
            "def not_so_random(b,w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are no black marbles, return \"White\"\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, return \"Black\"\n    if w == 0:\n        return \"Black\"\n    # If there are an odd number of white marbles, return \"Black\"\n    if w % 2 != 0:\n        return \"Black\"\n    # If there are more black marbles than white marbles, return \"Black\"\n    if b > w:\n        return \"Black\"\n    # If none of the conditions are met, return \"White\"\n    return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble, return the color of that marble\n    if b == 0 or w == 0:\n        return \"Black\" if b == 1 else \"White\"\n    \n    # If the difference between the number of black and white marbles is 1, return \"Unsure\"\n    if abs(b - w) == 1:\n        return \"Unsure\"\n    \n    # If the difference between the number of black and white marbles is even, return \"Black\"\n    if abs(b - w) % 2 == 0:\n        return \"Black\"\n    \n    # If the difference between the number of black and white marbles is odd, return \"White\"\n    return \"White\"",
            "def not_so_random(b,w):\n    # if there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # if there are no black marbles, the last marble will be white\n    elif b == 0:\n        return \"White\"\n    # if there are no white marbles, the last marble will be black\n    elif w == 0:\n        return \"Black\"\n    # if the number of black and white marbles are both odd, the last marble will be black\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    # otherwise, the last marble will be white\n    else:\n        return \"White\""
        ],
        "2": [
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 0:\n        return \"White\"\n    elif w == 0 and b % 2 == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    if b % 2 == 0:\n        return \"White\"\n    \n    return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) > 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b % 2 == 1 else \"White\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    else:\n        if b % 2 == 0 or w % 2 == 0:\n            return \"White\"\n        else:\n            return \"Black\"",
            "def not_so_random(b,w):\n    # Check if the number of black and white marbles are both even or both odd\n    if b%2 == 0 and w%2 == 0:\n        return \"White\"\n    elif b%2 == 1 and w%2 == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"Black\"\n        ",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    if b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    return \"Black\""
        ],
        "3": [
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n    if b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, return \"White\"\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, return \"Black\"\n    if w == 0:\n        return \"Black\"\n    \n    # If there are an even number of black and white marbles, return \"White\"\n    if b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    \n    # Otherwise, return \"Black\"\n    return \"Black\""
        ],
        "4": [
            "def not_so_random(b, w):\n    # Check if there are no marbles in the hat\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # Check if there are only black marbles in the hat\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # Check if there are only white marbles in the hat\n    elif b == 0 and w > 0:\n        return \"White\"\n    # Calculate the difference between the number of black and white marbles\n    diff = abs(b - w)\n    # If the difference is greater than or equal to 3, we can determine the color of the last marble\n    if diff >= 3:\n        return \"Unsure\"\n    # If the difference is 2, we can determine the color of the last marble\n    elif diff == 2:\n        return \"White\"\n    # If the difference is 1, we need to check the number of black marbles\n    else:\n        # If the number of black marbles is even, the last marble will be white\n        if b % 2 == 0:\n            return \"White\"\n        # If the number of black marbles is odd, the last marble will be black\n        else:\n            return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\""
        ]
    },
    "1": {
        "0": [
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # Check if the number of black and white marbles is odd\n    if b % 2 == 1 and w % 2 == 1:\n        return \"Unsure\"\n    # If the number of black marbles is odd and the number of white marbles is even, the last marble will be black\n    elif b % 2 == 1 and w % 2 == 0:\n        return \"Black\"\n    # If the number of black marbles is even and the number of white marbles is odd, the last marble will be white\n    elif b % 2 == 0 and w % 2 == 1:\n        return \"White\"\n    # If both the number of black and white marbles are even, the last marble will be black\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # Check if the difference between the number of black and white marbles is greater than 1\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    # Check if there are more black marbles than white marbles\n    if b > w:\n        return \"Black\"\n    \n    # Check if there are more white marbles than black marbles\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is equal, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If the number of black or white marbles is 0, return \"Unsure\"\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    if (b + w) % 2 != 0:\n        return \"Unsure\"\n    \n    # If the number of black and white marbles is even, check the difference\n    diff = abs(b - w)\n    \n    # If the difference is even, return \"Black\" or \"White\" depending on the greater number of marbles\n    if diff % 2 == 0:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If the difference is odd, return \"Unsure\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If the number of black marbles is 0, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If the number of white marbles is 0, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If the difference between the number of black and white marbles is 1, we can predict the color of the last marble\n    if abs(b - w) == 1:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # Otherwise, we are unsure\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If there are an even number of black and white marbles, the last marble will be black\n    if (b + w) % 2 == 0:\n        return \"Black\"\n    # If there are an odd number of black and white marbles, the last marble will be white\n    return \"White\"",
            "def not_so_random(b,w):\n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are an odd number of black and white marbles,\n    # the last marble will be black\n    if (b + w) % 2 == 1:\n        return \"Black\"\n    \n    # Otherwise, it is unsure\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\" if w%2 == 0 else \"Unsure\"\n    if w == 0:\n        return \"Black\"\n    if b%2 == 0:\n        return \"Black\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are more black marbles than white marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles than black marbles, the last marble will be white\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is the same, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b,w):\n\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    if b > w:\n        return \"Black\"\n    \n    if w > b:\n        return \"White\"\n    \n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == w:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are only black marbles, return \"Black\"\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # If there are only white marbles, return \"White\"\n    elif b == 0 and w > 0:\n        return \"White\"\n    # If the number of black and white marbles are both odd or both even, return \"Black\"\n    elif (b % 2 == 0 and w % 2 == 0) or (b % 2 != 0 and w % 2 != 0):\n        return \"Black\"\n    # Otherwise, return \"White\"\n    else:\n        return \"White\""
        ],
        "1": [
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b-w) <= 1:\n        return \"Black\" if (b+w)%2 == 0 else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b == 1 and w == 1:\n        return \"Black\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    if b == 0:\n        return \"White\"\n    \n    if w == 0:\n        return \"Black\"\n    \n    if b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    \n    return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b == 1 and w == 1:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    #if both black and white marbles are equal\n    if b == w:\n        #check if there are even number of marbles \n        if b % 2 == 0:\n            #the last marble will be white because for every pair of black and white, a white marble is added\n            return \"White\"\n        else:\n            #the last marble will be black because for every pair of black and white, a white marble is added\n            return \"Black\"\n    #if there are more black marbles than white marbles\n    elif b > w:\n        #check if the difference between black and white marbles is more than 1\n        if b - w > 1:\n            #the last marble will be black because for every pair of black and white, a black marble is added\n            return \"Black\"\n        else:\n            #the last marble can be either black or white, we are unsure\n            return \"Unsure\"\n    #if there are more white marbles than black marbles\n    else:\n        #check if the difference between white and black marbles is more than 1\n        if w - b > 1:\n            #the last marble will be white because for every pair of black and white, a black marble is added\n            return \"White\"\n        else:\n            #the last marble can be either black or white, we are unsure\n            return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    elif w > b:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    elif w > b:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    elif w > b:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are no black marbles, return \"White\"\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, return \"Black\"\n    if w == 0:\n        return \"Black\"\n    # If there are an odd number of white marbles, return \"Black\"\n    if w % 2 != 0:\n        return \"Black\"\n    # If there are more black marbles than white marbles, return \"Black\"\n    if b > w:\n        return \"Black\"\n    # If none of the conditions are met, return \"White\"\n    return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble, return the color of that marble\n    if b == 0 or w == 0:\n        return \"Black\" if b == 1 else \"White\"\n    \n    # If the difference between the number of black and white marbles is 1, return \"Unsure\"\n    if abs(b - w) == 1:\n        return \"Unsure\"\n    \n    # If the difference between the number of black and white marbles is even, return \"Black\"\n    if abs(b - w) % 2 == 0:\n        return \"Black\"\n    \n    # If the difference between the number of black and white marbles is odd, return \"White\"\n    return \"White\"",
            "def not_so_random(b,w):\n    # if there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # if there are no black marbles, the last marble will be white\n    elif b == 0:\n        return \"White\"\n    # if there are no white marbles, the last marble will be black\n    elif w == 0:\n        return \"Black\"\n    # if the number of black and white marbles are both odd, the last marble will be black\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    # otherwise, the last marble will be white\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no black marbles or no white marbles, we can safely predict the color of the last marble\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n\n    # If there are an odd number of black and white marbles, we can't predict the color of the last marble\n    if (b + w) % 2 == 1:\n        return \"Unsure\"\n\n    # If there are an even number of black and white marbles, the last marble will be the same color as the majority\n    if b > w:\n        return \"Black\"\n    if w > b:\n        return \"White\"\n\n    # If there are an equal number of black and white marbles, the last marble will be the opposite color of the second-to-last marble\n    return \"Black\" if b % 2 == 1 else \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == w:\n        return \"Black\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    else:\n        return \"White\""
        ],
        "2": [
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif abs(b-w) > 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b % 2 == 1 else \"White\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    else:\n        if b % 2 == 0 or w % 2 == 0:\n            return \"White\"\n        else:\n            return \"Black\"",
            "def not_so_random(b,w):\n    # Check if the number of black and white marbles are both even or both odd\n    if b%2 == 0 and w%2 == 0:\n        return \"White\"\n    elif b%2 == 1 and w%2 == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"Black\"\n        ",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    if b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0:\n        if w % 2 == 0:\n            return \"White\"\n        else:\n            return \"Unsure\"\n    elif w == 0:\n        return \"Black\"\n    else:\n        if b % 2 == 0:\n            return \"White\"\n        else:\n            return \"Black\""
        ],
        "3": [
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n    if b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\""
        ],
        "4": [
            "def not_so_random(b, w):\n    # Check if there are no marbles in the hat\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # Check if there are only black marbles in the hat\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # Check if there are only white marbles in the hat\n    elif b == 0 and w > 0:\n        return \"White\"\n    # Calculate the difference between the number of black and white marbles\n    diff = abs(b - w)\n    # If the difference is greater than or equal to 3, we can determine the color of the last marble\n    if diff >= 3:\n        return \"Unsure\"\n    # If the difference is 2, we can determine the color of the last marble\n    elif diff == 2:\n        return \"White\"\n    # If the difference is 1, we need to check the number of black marbles\n    else:\n        # If the number of black marbles is even, the last marble will be white\n        if b % 2 == 0:\n            return \"White\"\n        # If the number of black marbles is odd, the last marble will be black\n        else:\n            return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if abs(b-w) <= 1:\n        return \"Black\" if min(b,w) % 2 == 1 else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\""
        ]
    },
    "2": {
        "0": [
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If both b and w are zero, then we can't predict the color of the last marble\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If the difference between b and w is greater than 1, then we can predict the color of the last marble\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    # If the difference between b and w is less than or equal to 1, then we can safely predict the color of the last marble\n    else:\n        return \"Black\" if b > w else \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\" if w%2 == 0 else \"Unsure\"\n    if w == 0:\n        return \"Black\"\n    if b%2 == 0:\n        return \"Black\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If there are more black marbles than white marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles than black marbles, the last marble will be white\n    if w > b:\n        return \"White\"\n    \n    # If the number of black and white marbles is the same, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) <= 1:\n        return \"Unsure\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == w:\n        return \"White\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b > w + 1 or w > b + 1:\n        return \"Unsure\"\n    else:\n        return \"Black\" if b >= w else \"White\"",
            "def not_so_random(b,w):\n\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    \n    if b > w:\n        return \"Black\"\n    \n    if w > b:\n        return \"White\"\n    \n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == w:\n        return \"Unsure\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles in the hat, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are only black marbles, return \"Black\"\n    elif b > 0 and w == 0:\n        return \"Black\"\n    # If there are only white marbles, return \"White\"\n    elif b == 0 and w > 0:\n        return \"White\"\n    # If the number of black and white marbles are both odd or both even, return \"Black\"\n    elif (b % 2 == 0 and w % 2 == 0) or (b % 2 != 0 and w % 2 != 0):\n        return \"Black\"\n    # Otherwise, return \"White\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\" if w % 2 == 1 else \"Black\"\n    elif w == 0:\n        return \"Black\" if b % 2 == 1 else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == w:\n        return \"White\"\n    elif abs(b-w) == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif min(b, w) == 1:\n        return \"Black\" if b % 2 == 0 else \"White\"\n    elif b < w:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble, return its color\n    if b == 1 and w == 0:\n        return \"Black\"\n    if b == 0 and w == 1:\n        return \"White\"\n    \n    # If there are more black marbles than white marbles, return \"Black\"\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles than black marbles, return \"White\"\n    if w > b:\n        return \"White\"\n    \n    # If there are an equal number of black and white marbles, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n    if abs(b-w) <= 1:\n        return \"Unsure\"\n    return \"Black\" if (min(b,w) + 1) % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, return \"White\"\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, return \"Black\"\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black marbles is even, return \"Black\"\n    if b % 2 == 0:\n        return \"Black\"\n    \n    # If the number of white marbles is even, return \"White\"\n    if w % 2 == 0:\n        return \"White\"\n    \n    # If the number of black and white marbles is odd, return \"Unsure\"\n    return \"Unsure\"",
            "def not_so_random(b, w):\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    elif b == 0 and w % 2 == 1:\n        return \"White\"\n    elif w == 0 and b % 2 == 1:\n        return \"Black\"\n    else:\n        return \"Black\" if (b + w) % 2 == 0 else \"White\"",
            "def not_so_random(b, w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # If the number of black and white marbles is the same, return \"Unsure\"\n    if b == w:\n        return \"Unsure\"\n    \n    # If there are more black marbles, the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles, the last marble will be white\n    if w > b:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif abs(b-w) >= 2:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\""
        ],
        "1": [
            "def not_so_random(b, w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b == 1 and w == 1:\n        return \"Black\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    if b == 0:\n        return \"White\"\n    \n    if w == 0:\n        return \"Black\"\n    \n    if b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    \n    return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b == 1 and w == 1:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    #if both black and white marbles are equal\n    if b == w:\n        #check if there are even number of marbles \n        if b % 2 == 0:\n            #the last marble will be white because for every pair of black and white, a white marble is added\n            return \"White\"\n        else:\n            #the last marble will be black because for every pair of black and white, a white marble is added\n            return \"Black\"\n    #if there are more black marbles than white marbles\n    elif b > w:\n        #check if the difference between black and white marbles is more than 1\n        if b - w > 1:\n            #the last marble will be black because for every pair of black and white, a black marble is added\n            return \"Black\"\n        else:\n            #the last marble can be either black or white, we are unsure\n            return \"Unsure\"\n    #if there are more white marbles than black marbles\n    else:\n        #check if the difference between white and black marbles is more than 1\n        if w - b > 1:\n            #the last marble will be white because for every pair of black and white, a black marble is added\n            return \"White\"\n        else:\n            #the last marble can be either black or white, we are unsure\n            return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    elif b > w:\n        return \"Black\"\n    elif w > b:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # If there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    # If the difference between the number of black and white marbles is greater than 1,\n    # it is not possible to predict the color of the last marble\n    if abs(b - w) > 1:\n        return \"Unsure\"\n    # If there are an odd number of marbles, the last marble will be the same color as the larger group\n    if (b + w) % 2 == 1:\n        if b > w:\n            return \"Black\"\n        else:\n            return \"White\"\n    # If there are an even number of marbles, the last marble will be black\n    return \"Black\"",
            "def not_so_random(b,w):\n    # If there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # If there are no black marbles, return \"White\"\n    if b == 0:\n        return \"White\"\n    # If there are no white marbles, return \"Black\"\n    if w == 0:\n        return \"Black\"\n    # If there are an odd number of white marbles, return \"Black\"\n    if w % 2 != 0:\n        return \"Black\"\n    # If there are more black marbles than white marbles, return \"Black\"\n    if b > w:\n        return \"Black\"\n    # If none of the conditions are met, return \"White\"\n    return \"White\"",
            "def not_so_random(b, w):\n    # If there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there is only one marble, return the color of that marble\n    if b == 0 or w == 0:\n        return \"Black\" if b == 1 else \"White\"\n    \n    # If the difference between the number of black and white marbles is 1, return \"Unsure\"\n    if abs(b - w) == 1:\n        return \"Unsure\"\n    \n    # If the difference between the number of black and white marbles is even, return \"Black\"\n    if abs(b - w) % 2 == 0:\n        return \"Black\"\n    \n    # If the difference between the number of black and white marbles is odd, return \"White\"\n    return \"White\"",
            "def not_so_random(b,w):\n    # if there are no black or white marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    # if there are no black marbles, the last marble will be white\n    elif b == 0:\n        return \"White\"\n    # if there are no white marbles, the last marble will be black\n    elif w == 0:\n        return \"Black\"\n    # if the number of black and white marbles are both odd, the last marble will be black\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    # otherwise, the last marble will be white\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == w:\n        return \"Black\"\n    elif abs(b - w) > 1:\n        return \"Unsure\"\n    else:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If there are more than 1 black marble and white marble,\n    # we can safely predict that the last marble will be black or white,\n    # depending on which color has more marbles.\n    \n    # If there are an equal number of black and white marbles,\n    # we can predict that the last marble will be black, because\n    # after removing a pair of marbles, we will always add a black marble.\n    \n    # If there is only one marble left, we cannot predict its color,\n    # because we don't know the color of the previous pair.\n    \n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == w:\n        return \"Black\"\n    elif b <= w:\n        return \"Black\"\n    elif b > w:\n        return \"White\"",
            "def not_so_random(b,w):\n    # If there are no marbles, return \"Unsure\"\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # If there are an even number of black and white marbles,\n    # the last marble will be black\n    if b == w:\n        return \"Black\"\n    \n    # If there are more black marbles than white marbles,\n    # the last marble will be black\n    if b > w:\n        return \"Black\"\n    \n    # If there are more white marbles than black marbles,\n    # the last marble will be white\n    if b < w:\n        return \"White\"",
            "def not_so_random(b,w):\n    # if both b and w are equal to 1, then the color of the last marble will be black\n    if b == 1 and w == 1:\n        return \"Black\"\n    # if one of the b and w is equal to 0, then the color of the last marble will be black\n    elif b == 0 or w == 0:\n        return \"Black\"\n    # if the difference between the number of black marbles and the number of white marbles is within 1, then we can predict the color of the last marble\n    elif abs(b-w) <= 1:\n        return \"White\"\n    # otherwise, we cannot predict the color of the last marble\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n\n  # if both b and w are zero then you can't predict anything\n  if b == 0 and w == 0:\n    return \"Unsure\"\n  \n  # if the number of black marbles is greater than the number of white marbles,\n  # then the last marble will be black\n  if b > w:\n    return \"Black\"\n  \n  # if the number of white marbles is greater than the number of black marbles,\n  # then the last marble will be white\n  if w > b:\n    return \"White\"\n  \n  # if the number of white marbles is equal to the number of black marbles,\n  # then the last marble will be black\n  return \"Black\""
        ],
        "2": [
            "def not_so_random(b,w):\n    # Check if the number of black and white marbles are both even or both odd\n    if b%2 == 0 and w%2 == 0:\n        return \"White\"\n    elif b%2 == 1 and w%2 == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    elif b % 2 == 0:\n        return \"Black\"\n    else:\n        return \"Black\"\n        ",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    if b % 2 == 0 or w % 2 == 0:\n        return \"White\"\n    return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0:\n        if w % 2 == 0:\n            return \"White\"\n        else:\n            return \"Unsure\"\n    elif w == 0:\n        return \"Black\"\n    else:\n        if b % 2 == 0:\n            return \"White\"\n        else:\n            return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    elif b % 2 == 1 and w % 2 == 1:\n        return \"Black\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    if b == 0:\n        if w % 2 == 0:\n            return \"White\"\n        else:\n            return \"Unsure\"\n    \n    if w == 0:\n        if b % 2 == 0:\n            return \"Black\"\n        else:\n            return \"Unsure\"\n    \n    if w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\""
        ],
        "3": [
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b % 2 == 0 and w % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    if b == 0:\n        return \"White\"\n    if w == 0:\n        return \"Black\"\n    if b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if b == 0 or w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n\n    if b == 0:\n        return \"White\"\n    elif w == 0:\n        return \"Black\"\n    elif b == 1 and w == 1:\n        return \"Black\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b, w):\n    # if there are no black or white marbles\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    \n    # if there are no black marbles, the last marble will be white\n    if b == 0:\n        return \"White\"\n    \n    # if there are no white marbles, the last marble will be black\n    if w == 0:\n        return \"Black\"\n    \n    # if there is an odd number of black or white marbles, the last marble will be black\n    if b % 2 == 1 or w % 2 == 1:\n        return \"Black\"\n    \n    # if there is an even number of black and white marbles, the last marble will be white\n    return \"White\""
        ],
        "4": [
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\"",
            "def not_so_random(b,w):\n    if abs(b-w) <= 1:\n        return \"Black\" if min(b,w) % 2 == 1 else \"White\"\n    else:\n        return \"Unsure\"",
            "def not_so_random(b, w):\n    if b == 0 and w == 0:\n        return \"Unsure\"\n    elif b % 2 == 0:\n        return \"White\"\n    else:\n        return \"Black\""
        ]
    }
}