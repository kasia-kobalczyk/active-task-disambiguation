{
    "0": {
        "0": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    return mating_pairs, len(mating_pairs) >= n",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]"
        ],
        "1": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = mating_pairs[:n]\n    return result + [len(result) >= n]"
        ],
        "2": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = mating_pairs[:n]\n    if len(result) == n:\n        return result + [True]\n    else:\n        return result + [False]"
        ],
        "3": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = mating_pairs[:n]\n    if len(result) == n:\n        return result + [True]\n    else:\n        return result + [False]"
        ],
        "4": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = mating_pairs[:n]\n    if len(result) == n:\n        return result + [True]\n    else:\n        return result + [False]"
        ]
    },
    "1": {
        "0": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = ''\n    for pair in mating_pairs:\n        if pair not in result:\n            result += pair\n    return [result, len(mating_pairs) >= n]",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n",
            "def bears(n, s):\n    result = re.findall('B[8]|8B', s)\n    return result, len(result) >= n"
        ],
        "1": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = mating_pairs[:n]\n    if len(result) == n:\n        return result + [True]\n    else:\n        return result + [False]"
        ],
        "2": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = mating_pairs[:n]\n    if len(result) == n:\n        return result + [True]\n    else:\n        return result + [False]",
            "def bears(n, s):\n    pair_count = 0\n    pairs = re.findall('B8|8B', s)\n    for pair in pairs:\n        if pair not in s[s.index(pair) + 2:]:\n            pair_count += 1\n    result = ' '.join(pairs)\n    return [result, pair_count >= n]"
        ],
        "3": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = mating_pairs[:n]\n    if len(result) >= n:\n        return result + [True]\n    else:\n        return result + [False]",
            "def bears(n, s):\n    pairs = re.findall('B8|8B', s)\n    result = ''.join(pairs)\n    return [result, len(pairs) >= n]"
        ],
        "4": [
            "def bears(n, s):\n    mating_pairs = re.findall('B8|8B', s)\n    result = mating_pairs[:n]\n    if len(result) >= n:\n        return result + [True]\n    else:\n        return result + [False]",
            "def bears(n, s):\n    pairs = re.findall('B8|8B', s)\n    result = ''.join(pairs)\n    return [result, len(pairs) >= n]"
        ]
    },
    "2": {
        "0": [
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall('B[8]|[8]B', s)\n    if len(result) >= n:\n        return result, True\n    else:\n        return result, False",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2",
            "def bears(n, s):\n    result = re.findall(r'([B8])(?=[B8])', s)\n    pairs = ''.join(result[i] + result[i+1] for i in range(0, len(result), 2))\n    return [pairs], len(s) >= n * 2"
        ],
        "1": [],
        "2": [
            "def bears(n, s):\n    pairs = re.findall('B8|8B', s)\n    result = ''.join(pairs)\n    return [result, len(pairs) >= n]"
        ],
        "3": [
            "def bears(n, s):\n    pair_count = 0\n    pairs = re.findall('B8|8B', s)\n    for pair in pairs:\n        if pair not in s[s.index(pair) + 2:]:\n            pair_count += 1\n    result = ' '.join(pairs)\n    return [result, pair_count >= n]"
        ],
        "4": [
            "def bears(n, s):\n    pairs = re.findall('B8|8B', s)\n    result = ''.join(pairs)\n    return [result, len(pairs) >= n]"
        ]
    }
}