{
    "0": [
        {
            "content": "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        },
        {
            "content": "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "logp": null
        }
    ]
}