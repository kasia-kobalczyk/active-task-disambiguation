{
    "0": {
        "0": [
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, y = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, y = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, y = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```"
        ],
        "1": [
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "2": [
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "3": [
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "4": [
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ]
    },
    "1": {
        "0": [
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, y = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "1": [
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "2": [
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "3": [
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "4": [
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ]
    },
    "2": {
        "0": [
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, _ = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, n):\n    g, x, y = egcd(a, n)\n    if g != 1:\n        return None\n    else:\n        return x % n\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "1": [
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "2": [
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "3": [
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ],
        "4": [
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\n    g, x, _ = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```",
            "```python\ndef inverseMod(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n        return None\n    else:\n        return x % m\n```"
        ]
    }
}