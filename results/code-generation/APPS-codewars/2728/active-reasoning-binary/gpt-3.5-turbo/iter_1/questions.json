{
    "0": [
        "assert inverseMod(8, 11) == None\n# Explanation: 8 and 11 are not co-prime, so no solution",
        "assert inverseMod(3, 5) == 2",
        "assert inverseMod(9, 11) == 5",
        "assert inverseMod(5, 12) == 5",
        "assert inverseMod(3, 7) == 5",
        "assert inverseMod(4, 9) == 7",
        "assert inverseMod(2, 7) == 4",
        "assert inverseMod(5, 8) == 5",
        "assert inverseMod(10, 12) == 10"
    ],
    "1": [
        "assert inverseMod(9, 6) == None",
        "assert inverseMod(17, 23) == 4",
        "assert inverseMod(4, 10) == None",
        "assert inverseMod(2, 10) == None",
        "assert inverseMod(1, 17) == 1",
        "assert inverseMod(2, 11) == 6",
        "assert inverseMod(5, 7) == 3",
        "assert inverseMod(3, 10) == 7",
        "assert inverseMod(12, 25) == None"
    ],
    "2": [
        "assert inverseMod(3, 5) == 2",
        "assert inverseMod(10, 25) == 9",
        "assert inverseMod(3, 7) == 5",
        "assert inverseMod(4, 8) == None",
        "assert inverseMod(7, 11) == 8",
        "assert inverseMod(4, 9) == 7",
        "assert inverseMod(15, 13) == 8",
        "assert inverseMod(5, 11) == 9",
        "assert inverseMod(2, 8) == None"
    ],
    "3": [
        "assert inverseMod(4, 9) == None",
        "assert inverseMod(15, 17) == 4",
        "assert inverseMod(7, 9) == 4",
        "assert inverseMod(6, 11) == 2",
        "assert inverseMod(10, 13) == 4",
        "assert inverseMod(8, 15) == None"
    ]
}