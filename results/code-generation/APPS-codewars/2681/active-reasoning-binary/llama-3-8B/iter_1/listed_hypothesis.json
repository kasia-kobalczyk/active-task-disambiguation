{
    "0": [
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    if initialHeight < 2 or bouncingProportion >= 1:\n        return -1\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height *= bouncingProportion\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    if initialHeight < 2 or bouncingProportion >= 1:\n        return -1\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height *= bouncingProportion\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    if initialHeight < 2 or bouncingProportion >= 1:\n        return -1\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height *= bouncingProportion\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    if initialHeight < 2 or bouncingProportion >= 1:\n        return -1\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height *= bouncingProportion\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    if initialHeight < 2 or bouncingProportion >= 1:\n        return -1\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height *= bouncingProportion\n    return bounces",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def bouncing_ball(initial, proportion):\n    result = 1\n    height = initial\n    while height >= 1:\n        height *= proportion\n        result += 1\n    return result - 1",
            "logp": null
        }
    ],
    "2": [],
    "3": []
}