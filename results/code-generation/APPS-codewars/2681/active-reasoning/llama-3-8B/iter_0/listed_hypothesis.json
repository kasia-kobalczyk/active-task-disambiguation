{
    "0": [
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = initialHeight * (1 - bouncingProportion) ** bounces\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = initialHeight * (1 - bouncingProportion) ** bounces\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = initialHeight * (1 - bouncingProportion) ** bounces\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = initialHeight * (1 - bouncingProportion) ** bounces\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = initialHeight * (1 - bouncingProportion) ** bounces\n    return bounces",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        },
        {
            "content": "def bouncing_ball(initialHeight, bouncingProportion):\n    bounces = 0\n    height = initialHeight\n    while height > 1:\n        bounces += 1\n        height = height * bouncingProportion\n    return bounces - 1",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def bouncing_ball(initial, proportion):\n    bounces = 0\n    while initial > 1:\n        bounces += 1\n        initial *= proportion\n    return bounces",
            "logp": null
        }
    ],
    "2": [],
    "3": []
}