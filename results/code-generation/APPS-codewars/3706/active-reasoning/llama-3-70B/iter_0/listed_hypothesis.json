{
    "0": [
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) + 1) / 2)",
            "logp": null
        },
        {
            "content": "def layers(n): \n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    return ceil(((sqrt(n - 1) - 1) / 2) + 1)",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) + 1) / 2)",
            "logp": null
        },
        {
            "content": "def layers(n): \n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) + 1) / 2) if n > 1 else 1",
            "logp": null
        },
        {
            "content": "def layers(n): \n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n): \n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) + 1) / 2)",
            "logp": null
        },
        {
            "content": "def layers(n): \n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n): \n    if n == 1: \n        return 1 \n    else: \n        return ceil((sqrt(n-1)-1)/2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n): \n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    return ceil(((sqrt(n - 1) - 1) / 2) + 1)",
            "logp": null
        },
        {
            "content": "def layers(n): \n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n): \n    if n == 1: \n        return 1 \n    else: \n        return ceil((sqrt(n-1)-1)/2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n): \n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    else:\n        return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    if n == 1:\n        return 1\n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        },
        {
            "content": "def layers(n):\n    return ceil((sqrt(n - 1) + 1) / 2)",
            "logp": null
        },
        {
            "content": "def layers(n): \n    return ceil((sqrt(n - 1) - 1) / 2) + 1",
            "logp": null
        }
    ]
}