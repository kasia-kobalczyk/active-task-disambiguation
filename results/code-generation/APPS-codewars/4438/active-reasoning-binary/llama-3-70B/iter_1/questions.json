{
    "0": [
        "assert middle_point(10, 10, 10, 20, 20, 20, 15, 15, 15) == 3",
        "assert middle_point(0, 0, 0, 5, 5, 5, 10, 10, 10) == 2",
        "assert middle_point(1, 1, 1, 0, 0, 0, 2, 2, 2) == 1",
        "assert middle_point(0, 0, 0, 2, 2, 2, 1, 1, 1) == 3",
        "assert middle_point(1, 2, 3, 3, 4, 5, 5, 6, 7) == 2",
        "assert middle_point(5, 5, 5, 3, 3, 3, 4, 4, 4) == 3",
        "assert middle_point(-10, 0, 0, 0, 0, 0, 10, 0, 0) == 2",
        "assert middle_point(0, 0, 0, 1, 1, 1, 2, 2, 2) == 2",
        "assert middle_point(1, 1, 1, 3, 3, 3, 2, 2, 2) == 3",
        "assert middle_point(5, 5, 5, 3, 3, 3, 1, 1, 1) == 2"
    ],
    "1": [
        "assert middle_point(-5, -5, -5, 0, 0, 0, 5, 5, 5) == 2",
        "assert middle_point(10, 10, 10, 5, 5, 5, 0, 0, 0) == 2",
        "assert middle_point(1, 1, 1, 2, 2, 2, 3, 3, 3) == 2",
        "assert middle_point(-10, 0, 0, 0, 0, 0, 10, 0, 0) == 2",
        "assert middle_point(7, 8, 9, 4, 5, 6, 5.5, 6.5, 7.5) == 2",
        "assert middle_point(-1, 0, 1, -3, -2, -1, -2, -1, 0) == 2",
        "assert middle_point(0, 0, 0, 3, 3, 3, 1.5, 1.5, 1.5) == 3",
        "assert middle_point(10, 20, 30, 5, 10, 15, 15, 30, 45) == 1"
    ],
    "2": [
        "assert middle_point(10, 10, 10, 5, 5, 5, 15, 15, 15) == 2",
        "assert middle_point(-5, -5, -5, 0, 0, 0, 5, 5, 5) == 2",
        "assert middle_point(-10, 0, 0, 0, 0, 0, 10, 0, 0) == 2",
        "assert middle_point(1, 1, 1, 3, 3, 3, 2, 2, 2) == 3",
        "assert middle_point(-1, -2, -3, 1, 2, 3, 0, 0, 0) == 3",
        "assert middle_point(-10, -10, -10, -5, -5, -5, -15, -15, -15) == 2",
        "assert middle_point(1, 2, 3, 5, 6, 7, 3, 4, 5) == 3"
    ],
    "3": [
        "assert middle_point(10, 10, 10, 5, 5, 5, 0, 0, 0) == 2",
        "assert middle_point(10, 10, 10, 15, 15, 15, 20, 20, 20) == 2",
        "assert middle_point(1, 1, 1, 2, 2, 2, 3, 3, 3) == 2",
        "assert middle_point(-1, -1, -1, 0, 0, 0, 1, 1, 1) == 2",
        "assert middle_point(-10, 0, 0, 0, 0, 0, 10, 0, 0) == 2",
        "assert middle_point(-10, 0, 10, 0, 0, 0, 10, 0, -10) == 2",
        "assert middle_point(1, 2, 3, 2, 4, 6, 3, 6, 9) == 2",
        "assert middle_point(-10, -10, -10, -5, -5, -5, 0, 0, 0) == 2"
    ]
}