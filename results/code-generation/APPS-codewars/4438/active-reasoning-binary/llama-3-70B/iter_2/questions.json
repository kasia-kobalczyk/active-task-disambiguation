{
    "0": [
        "assert middle_point(1, 1, 1, 3, 3, 3, 2, 2, 2) == 2",
        "assert middle_point(1, 1, 1, 2, 2, 2, 3, 3, 3) == 2",
        "assert middle_point(10, 10, 10, 5, 5, 5, 0, 0, 0) == 2",
        "assert middle_point(-1, -1, -1, 0, 0, 0, 1, 1, 1) == 2",
        "assert middle_point(1, 2, 3, 3, 4, 5, 5, 6, 7) == 2",
        "assert middle_point(0, 0, 0, 2, 2, 2, 1, 1, 1) == 3",
        "assert middle_point(0, 0, 0, 1, 1, 1, 2, 2, 2) == 2",
        "assert middle_point(10, 0, 0, 5, 0, 0, 0, 0, 0) == 2"
    ],
    "1": [
        "assert middle_point(10, 10, 10, 5, 5, 5, 0, 0, 0) == 2",
        "assert middle_point(0, 0, 0, -2, -2, -2, -4, -4, -4) == 2",
        "assert middle_point(0, 0, 0, 3, 3, 3, 6, 6, 6) == 2",
        "assert middle_point(-3, -3, -3, -1, -1, -1, 1, 1, 1) == 2",
        "assert middle_point(-1, -1, -1, 0, 0, 0, 1, 1, 1) == 2",
        "assert middle_point(1, 2, 3, 3, 4, 5, 5, 6, 7) == 3",
        "assert middle_point(-10, -10, -10, -5, -5, -5, 0, 0, 0) == 2",
        "assert middle_point(0, 0, 0, 0, 0, 0, 0, 0, 0) == 2",
        "assert middle_point(10, 0, 0, 5, 0, 0, 0, 0, 0) == 2"
    ],
    "2": [
        "assert middle_point(0, 0, 0, 5, 5, 5, 10, 10, 10) == 2",
        "assert middle_point(-5, -5, -5, -10, -10, -10, -7, -7, -7) == 3",
        "assert middle_point(10, 10, 10, 5, 5, 5, 0, 0, 0) == 2",
        "assert middle_point(-3, -3, -3, 0, 0, 0, 3, 3, 3) == 2",
        "assert middle_point(-5, -5, -5, 0, 0, 0, 5, 5, 5) == 2",
        "assert middle_point(-10, -10, -10, -5, -5, -5, 0, 0, 0) == 2",
        "assert middle_point(5, 5, 5, 15, 15, 15, 10, 10, 10) == 3",
        "assert middle_point(1, 1, 1, 2, 2, 2, 1, 1, 1) == 2"
    ],
    "3": [
        "assert middle_point(-10, -10, -10, -5, -5, -5, -7, -7, -7) == 3",
        "assert middle_point(1, 2, 3, 4, 5, 6, 2, 3, 4) == 3",
        "assert middle_point(0, 0, 0, 10, 10, 10, 5, 5, 5) == 3",
        "assert middle_point(-10, -10, -10, -5, -5, -5, 0, 0, 0) == 2",
        "assert middle_point(100, 100, 100, 50, 50, 50, 75, 75, 75) == 3",
        "assert middle_point(-1, -1, -1, 0, 0, 0, -0.5, -0.5, -0.5) == 3",
        "assert middle_point(0, 0, 0, 5, 5, 5, -5, -5, -5) == 1",
        "assert middle_point(-1, 0, 1, 0, 0, 0, 1, 0, -1) == 2"
    ]
}