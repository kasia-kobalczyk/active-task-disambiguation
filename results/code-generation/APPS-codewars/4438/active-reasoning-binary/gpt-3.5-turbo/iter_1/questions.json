{
    "0": [
        "assert middle_point(2, 2, 2, 5, 5, 5, 3, 3, 3) == 2",
        "assert middle_point(0, 0, 0, 10, 10, 10, 5, 5, 5) == 5",
        "assert middle_point(3, 3, 3, 2, 2, 2, 1, 1, 1) == 2",
        "assert middle_point(1, 1, 1, 4, 4, 4, 2, 2, 2) == 2",
        "assert middle_point(2, 2, 2, 1, 1, 1, 3, 3, 3) == 1",
        "assert middle_point(1, 1, 1, 3, 3, 3, 2, 2, 2) == 3",
        "assert middle_point(2, 2, 2, 3, 3, 3, 1, 1, 1) == 1",
        "assert middle_point(1, 1, 1, 2, 2, 2, 3, 3, 3) == 2",
        "assert middle_point(5, 5, 5, 7, 7, 7, 3, 3, 3) == 5"
    ],
    "1": [
        "assert middle_point(0, 0, 0, 1, 2, 3, 2, 4, 6) == 1",
        "assert middle_point(0, 0, 0, 2, 4, 6, 4, 8, 12) == 2",
        "assert middle_point(-10, 0, 10, 10, 0, -10, 0, 0, 0) == 3",
        "assert middle_point(0, 0, 0, -1, -1, -1, 1, 1, 1) == 1",
        "assert middle_point(-1, 0, 1, 0, 0, 0, 1, 0, -1) == 1",
        "assert middle_point(-2, -2, -2, 0, 0, 0, 4, 4, 4) == 3",
        "assert middle_point(0, 0, 0, -1, -2, -3, 1, 2, 3) == 1",
        "assert middle_point(-1, -1, -1, 1, 1, 1, 2, 2, 2) == 3",
        "assert middle_point(2, 2, 2, 5, 5, 5, 8, 8, 8) == 1",
        "assert middle_point(1, 1, 1, 2, 2, 2, 3, 3, 3) == 2"
    ],
    "2": [
        "assert middle_point(1, 1, 1, 2, 2, 2, 3, 3, 3) == 3",
        "assert middle_point(0, 1, 0, 0, 0, 0, 0, 0, 1) == 2",
        "assert middle_point(1,2,3,4,5,6,7,8,9) == 2",
        "assert middle_point(0,0,0,0,1,0,0,2,0) == 3",
        "assert middle_point(1,1,1,2,2,2,0,0,0) == 1",
        "assert middle_point(-10, -10, -10, 0, 0, 0, 10, 10, 10) == 2",
        "assert middle_point(1, 0, 0, 0, 0, 0, 0, 0, 1) == 2",
        "assert middle_point(0, 0, 0, 10, 0, 0, 5, 0, 0) == 3",
        "assert middle_point(-1,-1,-1,0,0,0,1,1,1) == 2"
    ],
    "3": [
        "assert middle_point(0, 1, 0, 0, 0, 0, 0, 0, 1) == 2",
        "assert middle_point(-1, -1, -1, 0, 0, 0, 1, 1, 1) == 2",
        "assert middle_point(-10, -10, -10, -5, -5, -5, -8, -8, -8) == 3",
        "assert middle_point(-5, -5, -5, 0, 0, 0, 5, 5, 5) == 2",
        "assert middle_point(-10, -10, -10, 0, 0, 0, 10, 10, 10) == 2",
        "assert middle_point(1, 0, 0, 0, 0, 0, 0, 0, 1) == 2",
        "assert middle_point(0, 0, 0, 10, 0, 0, 5, 0, 0) == 3",
        "assert middle_point(0, 0, 0, 0, 0, 0, 0, 0, 0) == 2"
    ]
}