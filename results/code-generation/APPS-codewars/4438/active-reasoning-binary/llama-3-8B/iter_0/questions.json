{
    "0": [
        "assert middle_point(-5, -10, -15, -10, -20, -25, -5, -15, -25) == 2"
    ],
    "1": [
        "assert middle_point(2, 3, 4, 2, 3, 4, 3, 4, 5) == 3",
        "assert middle_point(-5, 2, 3, -3, 1, 2, 0, 0, 0) == 2",
        "assert middle_point(-1, -2, -3, 0, 0, 0, 1, 2, 3) == 2",
        "assert middle_point(0, 0, 0, 0, 0, 0, 5, 5, 5) == 1"
    ],
    "2": [
        "assert middle_point(-5, 2, 3, -3, 1, 2, 0, 0, 0) == 2",
        "assert middle_point(-1, -2, -3, 0, 0, 0, 1, 2, 3) == 2",
        "assert middle_point(0, 0, 0, 0, 0, 0, 5, 5, 5) == 1"
    ],
    "3": [
        "assert middle_point(-3, 1, 2, -1, 0, 1, 0, 0, 0) == 3",
        "assert middle_point(1, 2, 3, 4, 5, 6, 2, 3, 4) == 3",
        "assert middle_point(-2, -1, 0, -1, 0, 1, 0, 1, 2) == 2",
        "assert middle_point(2, 3, 4, -2, -3, -4, 0, 0, 0) == 1",
        "assert middle_point(-1, 0, 1, 0, 0, 0, 1, 0, 1) == 1",
        "assert middle_point(0, 0, 0, 0, 0, 0, 1, 1, 1) == 1",
        "assert middle_point(-5, 2, 3, -3, 1, 2, -1, 1, 2) == 1",
        "assert middle_point(-10, 10, 10, -10, -10, -10, 0, 0, 0) == 2"
    ]
}