{
    "0": [
        "assert big_primefac_div(100) == [5, 50]",
        "assert big_primefac_div(997) == []",
        "assert big_primefac_div(-1800) == [5, 900]",
        "assert big_primefac_div(1969) == [179, 179]",
        "assert big_primefac_div(-1800.00) == [5, 900]"
    ],
    "1": [
        "assert big_primefac_div(1969) == [179, 179]",
        "assert big_primefac_div(100) == [5, 50]",
        "assert big_primefac_div(-1800) == [5, 900]",
        "assert big_primefac_div(-1800.1) == \"The number has a decimal part. No Results\"",
        "assert big_primefac_div(-1800.00) == [5, 900]"
    ],
    "2": [
        "assert big_primefac_div(100) == [5, 50], \"Test Case 1 Failed\"",
        "assert big_primefac_div(-1800) == [5, 900], \"Test Case 4 Failed\"",
        "assert big_primefac_div(100) == [5, 50]",
        "assert big_primefac_div(997) == [], \"Test Case 3 Failed\"",
        "assert big_primefac_div(1969) == [179, 179], \"Test Case 2 Failed\"",
        "assert big_primefac_div(-1800) == [5, 900]",
        "assert big_primefac_div(-1800.1) == \"The number has a decimal part. No Results\"",
        "assert big_primefac_div(-1800.00) == [5, 900], \"Test Case 5 Failed\"",
        "assert big_primefac_div(-1800.00) == [5, 900]"
    ],
    "3": [
        "assert big_primefac_div(-90) == [3, 30], \"Test Case 4 Failed\"",
        "assert big_primefac_div(2) == []",
        "assert big_primefac_div(75) == [5, 15], \"Test Case 3 Failed\"",
        "assert big_primefac_div(55) == [11, 5], \"Test Case 2 Failed\"",
        "assert big_primefac_div(15) == [5,3]",
        "assert big_primefac_div(20) == [5, 10], \"Test Case 1 Failed\""
    ]
}