{
    "0": [
        "assert big_primefac_div(100) == [5, 50]",
        "assert big_primefac_div(1969) == [179, 179]",
        "assert big_primefac_div(-1800) == [5, 900]",
        "assert big_primefac_div(-1800.00) == [5, 900]",
        "assert big_primefac_div(997) == []"
    ],
    "1": [
        "assert big_primefac_div(-1800) == [5, 900]",
        "assert big_primefac_div(-1800.1) == \"The number has a decimal part. No Results\"",
        "assert big_primefac_div(179 * 179) == [179, 179]",
        "assert big_primefac_div(2) == []",
        "assert big_primefac_div(-1800.00) == [5, 900]"
    ],
    "2": [
        "assert big_primefac_div(-997) == []",
        "assert big_primefac_div(-1969.0) == [179, 179]",
        "assert big_primefac_div(100.0) == [5, 50]",
        "assert big_primefac_div(-1800.123) == \"The number has a decimal part. No Results\"",
        "assert big_primefac_div(-100) == [5, 50]",
        "assert big_primefac_div(23) == []",
        "assert big_primefac_div(-1800.000) == [5, 900]",
        "assert big_primefac_div(125) == [5, 25]"
    ],
    "3": [
        "assert big_primefac_div(36.0) == [3, 12]",
        "assert big_primefac_div(13) == []",
        "assert big_primefac_div(1.234) == \"The number has a decimal part. No Results\"",
        "assert big_primefac_div(0.123) == \"The number has a decimal part. No Results\"",
        "assert big_primefac_div(-1001) == []",
        "assert big_primefac_div(-25) == [5, 5]",
        "assert big_primefac_div(1200.0) == [5, 600]",
        "assert big_primefac_div(0) == []"
    ]
}