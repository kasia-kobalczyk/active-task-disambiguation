{
    "0": [
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother + ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = []\n        else:\n            mothers[person.upper()].append(person)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = []\n        else:\n            mothers[person.upper()].append(person)\n    result = []\n    for mother, children in sorted(mothers.items()):\n        result.append(mother)\n        result.extend(sorted(children))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for key in sorted(mothers.keys()):\n        result += key + ''.join(sorted(mothers[key]))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = []\n    for mother in sorted(mothers.keys()):\n        result.append(mother)\n        result.extend(sorted(mothers[mother]))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = []\n        else:\n            mothers[person.upper()].append(person)\n    result = []\n    for mother in sorted(mothers.keys()):\n        result.append(mother)\n        result.extend(sorted(mothers[mother]))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = person.lower() * dancing_brigade.count(person.lower())\n    return ''.join(sorted(mothers.keys() + mothers.values(), key=lambda x: x.upper()))",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mother_child_dict = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mother_child_dict[char] = []\n        else:\n            mother = char.upper()\n            if mother in mother_child_dict:\n                mother_child_dict[mother].append(char)\n            else:\n                mother_child_dict[mother] = [char]\n    result = ''\n    for mother in sorted(mother_child_dict.keys()):\n        result += mother\n        result += ''.join(sorted(mother_child_dict[mother]))\n    return result",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother + ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = []\n    for mother, children in sorted(mothers.items()):\n        result.append(mother)\n        result.extend(sorted(children))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = ''\n    for char in dancing_brigade:\n        if char.islower():\n            mothers[char.upper()] += char\n    result = ''\n    for mother in sorted(mothers.keys()):\n        result += mother + mothers[mother]\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = []\n        else:\n            mothers[person.upper()].append(person)\n    result = \"\"\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for mother in sorted(mothers.keys()):\n        result += mother + ''.join(sorted(mothers[mother]))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += \"\".join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = []\n    for mother in sorted(mothers.keys()):\n        result.append(mother)\n        result.extend(sorted(mothers[mother]))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = ''\n        else:\n            mothers[person.upper()] += person\n    result = ''\n    for mother in sorted(mothers.keys()):\n        result += mother + mothers[mother]\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mother_child_dict = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mother_child_dict[char] = []\n        else:\n            mother = char.upper()\n            if mother in mother_child_dict:\n                mother_child_dict[mother].append(char)\n            else:\n                return \"\"\n    result = \"\"\n    for mother in sorted(mother_child_dict.keys()):\n        result += mother\n        result += \"\".join(sorted(mother_child_dict[mother]))\n    return result",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = []\n    for mother, children in sorted(mothers.items()):\n        result.append(mother)\n        result.extend(sorted(children))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother + ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = ''\n    for char in dancing_brigade:\n        if char.islower():\n            mothers[char.upper()] += char\n    result = ''\n    for mother in sorted(mothers.keys()):\n        result += mother + mothers[mother]\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for mother in sorted(mothers.keys()):\n        result += mother + ''.join(sorted(mothers[mother]))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = []\n        else:\n            mothers[person.upper()].append(person)\n    result = \"\"\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += \"\".join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = []\n    for mother in sorted(mothers.keys()):\n        result.append(mother)\n        result.extend(sorted(mothers[mother]))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for mother in sorted(mothers.keys()):\n        result += mother + \"\".join(sorted(mothers[mother]))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = ''\n        else:\n            mothers[person.upper()] += person\n    result = ''\n    for mother in sorted(mothers.keys()):\n        result += mother + mothers[mother]\n    return result",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = []\n    for mother, children in sorted(mothers.items()):\n        result.append(mother)\n        result.extend(sorted(children))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in mothers.items():\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for mother in sorted(mothers.keys()):\n        result += mother + ''.join(sorted(mothers[mother]))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for person in dancing_brigade:\n        if person.isupper():\n            mothers[person] = []\n        else:\n            mothers[person.upper()].append(person)\n    result = \"\"\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = ''\n    for char in dancing_brigade:\n        if char.islower():\n            mothers[char.upper()] += char\n    result = ''\n    for mother in sorted(mothers.keys()):\n        result += mother\n        result += mothers[mother]\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = \"\"\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += \"\".join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother\n        result += ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = ''\n    for mother, children in sorted(mothers.items()):\n        result += mother + ''.join(sorted(children))\n    return result",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char.upper()].append(char)\n    result = []\n    for mother in sorted(mothers.keys()):\n        result.append(mother)\n        result.extend(sorted(mothers[mother]))\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def find_children(dancing_brigade):\n    mother_child_dict = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mother_child_dict[char] = []\n        else:\n            mother = chr(ord(char) - 32)\n            mother_child_dict[mother].append(char)\n    result = \"\"\n    for mother in sorted(mother_child_dict.keys()):\n        result += mother\n        result += \"\".join(sorted(mother_child_dict[mother]))\n    return result",
            "logp": null
        }
    ]
}