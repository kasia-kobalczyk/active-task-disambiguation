{
    "0": {
        "0": [
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            for k in range(i, j):\n                result += dancing_brigade[k]\n            i = j\n        i += 1\n    return result",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))"
        ],
        "1": [
            "def find_children(dancing_brigade):\n    result = ''\n    i = 0\n    while i < len(dancing_brigade):\n        if dancing_brigade[i].isupper():\n            result += dancing_brigade[i]\n            i += 1\n            j = i\n            while j < len(dancing_brigade) and dancing_brigade[j].islower():\n                j += 1\n            result += dancing_brigade[i:j]\n            i = j\n        else:\n            i += 1\n    return result",
            "def find_children(dancing_brigade):\n    letters = list(dancing_brigade)\n    brigade = []\n    temp = ''\n    for letter in letters:\n        if letter.isupper():\n            if temp:\n                brigade.append(temp)\n                temp = ''\n            brigade.append(letter)\n        else:\n            temp += letter\n    if temp:\n        brigade.append(temp)\n    return ''.join(brigade)",
            "def find_children(dancing_brigade):\n    result = \"\"\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char[0]].append(char)\n    for key in sorted(mothers.keys()):\n        result += key\n        result += ''.join(sorted(mothers[key]))\n    return result"
        ],
        "2": [],
        "3": [],
        "4": []
    },
    "1": {
        "0": [
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    brigade = list(dancing_brigade)\n    mothers = []\n    children = []\n    for i in range(len(bridege)):\n        if brigade[i].isupper():\n            mothers.append(bridege[i])\n        else:\n            children.append(bridege[i])\n    return \"\".join(sorted(mothers) + sorted(children))",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()"
        ],
        "1": [
            "def find_children(dancing_brigade):\n    letters = list(dancing_brigade)\n    brigade = []\n    temp = ''\n    for letter in letters:\n        if letter.isupper():\n            if temp:\n                brigade.append(temp)\n                temp = ''\n            brigade.append(letter)\n        else:\n            temp += letter\n    if temp:\n        brigade.append(temp)\n    return ''.join(brigade)",
            "def find_children(dancing_brigade):\n    result = \"\"\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char[0]].append(char)\n    for key in sorted(mothers.keys()):\n        result += key\n        result += ''.join(sorted(mothers[key]))\n    return result",
            "def find_children(dancing_brigade):\n    mothers = sorted(list(set([i for i in dancing_brigade if i.isupper()])))\n    result = ''\n    for mother in mothers:\n        result += mother\n        for child in sorted([i for i in dancing_brigade if i.islower() and i in mother.lower()]):\n            result += child\n    return result"
        ],
        "2": [],
        "3": [],
        "4": [
            "def find_children(dancing_brigade):\n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    return \"\".join([m + c for m, c in zip(mothers, children)] + mothers[len(children):])"
        ]
    },
    "2": {
        "0": [
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    result = ''\n    for mother, child in zip(mothers, children):\n        result += mother + child\n    return result.join()",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result",
            "def find_children(dancing_brigade): \n    result = ''\n    mother_and_child = ''\n    for char in dancing_brigade:\n        if char.isupper():\n            result += char\n            mother_and_child = ''\n        else:\n            mother_and_child += char\n        result += mother_and_child\n    return result"
        ],
        "1": [
            "def find_children(dancing_brigade):\n    letters = list(dancing_brigade)\n    brigade = []\n    temp = ''\n    for letter in letters:\n        if letter.isupper():\n            if temp:\n                brigade.append(temp)\n                temp = ''\n            brigade.append(letter)\n        else:\n            temp += letter\n    if temp:\n        brigade.append(temp)\n    return ''.join(brigade)",
            "def find_children(dancing_brigade):\n    result = \"\"\n    mothers = {}\n    for char in dancing_brigade:\n        if char.isupper():\n            mothers[char] = []\n        else:\n            mothers[char[0]].append(char)\n    for key in sorted(mothers.keys()):\n        result += key\n        result += ''.join(sorted(mothers[key]))\n    return result",
            "def find_children(dancing_brigade):\n    mothers = sorted(list(set([i for i in dancing_brigade if i.isupper()])))\n    result = ''\n    for mother in mothers:\n        result += mother\n        for child in sorted([i for i in dancing_brigade if i.islower() and i in mother.lower()]):\n            result += child\n    return result"
        ],
        "2": [
            "def find_children(dancing_brigade): \n    mothers = sorted([ch for ch in set(dancing_brigade) if ch.isupper()])\n    children = [ch for ch in dancing_brigade if ch.islower()]\n    return ''.join([m + ''.join([c for c in children if c == m.lower()]) for m in mothers])"
        ],
        "3": [
            "def find_children(dancing_brigade): \n    mothers = sorted([ch for ch in set(dancing_brigade) if ch.isupper()])\n    children = [ch for ch in dancing_brigade if ch.islower()]\n    return ''.join([m + ''.join([c for c in children if c == m.lower()]) for m in mothers])"
        ],
        "4": [
            "def find_children(dancing_brigade):\n    mothers = sorted([char for char in dancing_brigade if char.isupper()])\n    children = sorted([char for char in dancing_brigade if char.islower()])\n    return \"\".join([m + c for m, c in zip(mothers, children)] + mothers[len(children):])",
            "def find_children(dancing_brigade):\n    result = \"\"\n    mothers = list(set([char.upper() for char in dancing_brigade]))\n    mothers.sort()\n    children = [char for char in dancing_brigade if char.islower()]\n    children.sort()\n    for mother in mothers:\n        children_of_mother = [char for char in children if char == mother.lower()]\n        result += mother\n        result += ''.join(sorted(children_of_mother))\n    return result"
        ]
    }
}