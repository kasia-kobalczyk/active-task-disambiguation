{
    "0": {
        "0": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c = x.find('C')\n    m = x.find('m')\n    d = x.find('D')\n    \n    if c == -1 or m == -1 or d == -1:\n        return 'boring without all three'\n    \n    if abs(c - m) <= j:\n        if min(c, m) < d < max(c, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    m_index = x.find('m')\n    D_index = x.find('D')\n\n    if C_index == -1 or m_index == -1 or D_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if D_index > min(C_index, m_index) and D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat - mouse)\n    \n    if distance <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_index = x.find('C')\n    d_index = x.find('D')\n    m_index = x.find('m')\n    \n    if c_index == -1 or d_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    c_m_distance = abs(c_index - m_index)\n    \n    if c_m_distance <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    \n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    cat_mouse_distance = abs(cat_index - mouse_index)\n\n    if dog_index > min(cat_index, mouse_index) and dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    elif cat_mouse_distance <= j:\n        return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index > mouse_index) or (cat_index < dog_index < mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_idx = x.find('C')\n    mouse_idx = x.find('m')\n    dog_idx = x.find('D')\n    \n    if cat_idx == -1 or mouse_idx == -1 or dog_idx == -1:\n        return 'boring without all three'\n    \n    if abs(cat_idx - mouse_idx) <= j:\n        if (cat_idx > mouse_idx and cat_idx > dog_idx) or (cat_idx < mouse_idx and cat_idx < dog_idx):\n            return 'Caught!'\n        else:\n            return 'Protected!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    animals = {'C': None, 'D': None, 'm': None}\n    for i, char in enumerate(x):\n        if char in animals:\n            animals[char] = i\n    if None in animals.values():\n        return 'boring without all three'\n    cat, dog, mouse = animals['C'], animals['D'], animals['m']\n    if cat < mouse:\n        cat, mouse = mouse, cat\n    if dog is not None and dog > min(cat, mouse) and dog < max(cat, mouse):\n        return 'Protected!'\n    if abs(cat - mouse) <= j:\n        return 'Caught!'\n    else:\n        return 'Escaped!'"
        ],
        "1": [
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    elif min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    else:\n        return 'Caught!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > mouse_index and cat_index > dog_index) or (cat_index < mouse_index and cat_index < dog_index):\n            return 'Caught!'\n        else:\n            return 'Protected!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    cat_mouse_distance = abs(cat_index - mouse_index)\n\n    if cat_mouse_distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    cat_distance = abs(C_index - m_index)\n\n    if cat_distance <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if 'D' in x[min(cat_index, mouse_index)+1:max(cat_index, mouse_index)]:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    distance = abs(c_index - m_index)\n    if distance <= j:\n        if 'D' in x[min(c_index, m_index):max(c_index, m_index)] and c_index != d_index and m_index != d_index:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_index = x.find('C')\n    d_index = x.find('D')\n    m_index = x.find('m')\n    \n    if c_index == -1 or d_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    c_m_distance = abs(c_index - m_index)\n    \n    if c_m_distance <= j:\n        if d_index == -1 or (min(c_index, m_index) < d_index < max(c_index, m_index)):\n            return 'Protected!'\n        return 'Caught!'\n    return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if dog_index > min(cat_index, mouse_index) and dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    elif distance <= j:\n        return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) <= j and (min(cat_index, mouse_index) <= dog_index <= max(cat_index, mouse_index)):\n            return 'Protected!'\n        elif abs(cat_index - mouse_index) <= j:\n            return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    \n    if abs(cat_index - mouse_index) <= j:\n        if dog_index < min(cat_index, mouse_index) and dog_index > max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    cat_mouse_distance = abs(cat_index - mouse_index)\n\n    if dog_index != -1:\n        cat_dog_distance = abs(cat_index - dog_index)\n        dog_mouse_distance = abs(dog_index - mouse_index)\n        if cat_dog_distance < cat_mouse_distance and dog_mouse_distance < cat_mouse_distance:\n            return 'Protected!'\n\n    if cat_mouse_distance <= j:\n        return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat = x.index('C')\n    dog = x.index('D')\n    mouse = x.index('m')\n    if cat < mouse and dog < mouse:\n        if mouse - cat <= j:\n            return 'Caught!'\n        elif mouse - dog <= j:\n            return 'Protected!'\n        else:\n            return 'Escaped!'\n    elif cat > mouse and dog > mouse:\n        if cat - mouse <= j:\n            return 'Caught!'\n        elif dog - mouse <= j:\n            return 'Protected!'\n        else:\n            return 'Escaped!'\n    elif cat < mouse and dog > mouse:\n        if mouse - cat <= j and dog > mouse:\n            return 'Caught!'\n        else:\n            return 'Protected!'\n    elif cat > mouse and dog < mouse:\n        if cat - mouse <= j and dog < mouse:\n            return 'Caught!'\n        else:\n            return 'Protected!'"
        ],
        "2": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    m_index = x.find('m')\n    D_index = x.find('D')\n    \n    if C_index == -1 or m_index == -1 or D_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    m_index = x.find('m')\n    D_index = x.find('D')\n\n    if C_index == -1 or m_index == -1 or D_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c = x.find('C')\n    m = x.find('m')\n    d = x.find('D')\n    \n    if c == -1 or m == -1 or d == -1:\n        return 'boring without all three'\n    \n    if abs(c - m) <= j:\n        if min(c, m) < d < max(c, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat - mouse)\n    \n    if distance <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c, d, m = x.index('C'), x.index('D'), x.index('m')\n    if abs(c - m) <= j:\n        if min(c, m) < d < max(c, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index)):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    \n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index)):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C - m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n\n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if (cat_index < dog_index and mouse_index < dog_index) or (cat_index > dog_index and mouse_index > dog_index):\n                return 'Caught!'\n            else:\n                return 'Protected!'\n        else:\n            return 'Escaped!'"
        ],
        "3": [
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    m_index = x.find('m')\n    D_index = x.find('D')\n    \n    if C_index == -1 or m_index == -1 or D_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    m = x.find('m')\n    D = x.find('D')\n\n    if C == -1 or m == -1 or D == -1:\n        return 'boring without all three'\n\n    if abs(C - m) <= j:\n        if min(C, m) < D < max(C, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c = x.find('C')\n    m = x.find('m')\n    d = x.find('D')\n    if c == -1 or m == -1 or d == -1:\n        return 'boring without all three'\n    elif abs(c - m) <= j:\n        if min(c, m) < d < max(c, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    m_index = x.find('m')\n    D_index = x.find('D')\n\n    if C_index == -1 or m_index == -1 or D_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if D_index > min(C_index, m_index) and D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if 'D' in x[min(cat_index, mouse_index)+1:max(cat_index, mouse_index)]:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        \n        if abs(c_index - m_index) <= j:\n            if min(c_index, m_index) < d_index < max(c_index, m_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    \n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat - mouse)\n    \n    if distance <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_idx = x.find('C')\n    mouse_idx = x.find('m')\n    dog_idx = x.find('D')\n    \n    if cat_idx == -1 or mouse_idx == -1 or dog_idx == -1:\n        return 'boring without all three'\n    \n    if abs(cat_idx - mouse_idx) <= j:\n        if min(cat_idx, mouse_idx) < dog_idx < max(cat_idx, mouse_idx):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_idx = x.find('C')\n    d_idx = x.find('D')\n    m_idx = x.find('m')\n\n    if c_idx == -1 or d_idx == -1 or m_idx == -1:\n        return 'boring without all three'\n\n    if abs(c_idx - m_idx) <= j:\n        if min(c_idx, m_idx) < d_idx < max(c_idx, m_idx):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index < mouse_index) or (mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index > mouse_index) or (cat_index < dog_index < mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C-m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n\n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    \n    if dog_index > min(cat_index, mouse_index) and dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    \n    return 'Caught!'"
        ],
        "4": [
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if D_index > min(C_index, m_index) and D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    m = x.find('m')\n    D = x.find('D')\n\n    if C == -1 or m == -1 or D == -1:\n        return 'boring without all three'\n\n    if abs(C - m) <= j:\n        if min(C, m) < D < max(C, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c = x.find('C')\n    m = x.find('m')\n    d = x.find('D')\n    if c == -1 or m == -1 or d == -1:\n        return 'boring without all three'\n    elif abs(c - m) <= j:\n        if min(c, m) < d < max(c, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    \n    if (cat_index > mouse_index and dog_index > mouse_index and dog_index < cat_index) or (cat_index < mouse_index and dog_index < mouse_index and dog_index > cat_index):\n        return 'Protected!'\n    \n    return 'Caught!'",
            "def cat_mouse(x, j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c, d, m = x.index('C'), x.index('D'), x.index('m')\n    if c < m:\n        if m - c <= j:\n            if d < c or d > m:\n                return 'Caught!'\n            else:\n                return 'Protected!'\n        else:\n            return 'Escaped!'\n    else:\n        if c - m <= j:\n            if d > c or d < m:\n                return 'Caught!'\n            else:\n                return 'Protected!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c = x.index('C')\n    d = x.index('D')\n    m = x.index('m')\n    if abs(c-m) <= j:\n        if (c < d and d < m) or (m < d and d < c):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index < mouse_index) or (mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_idx = x.find('C')\n    d_idx = x.find('D')\n    m_idx = x.find('m')\n\n    if c_idx == -1 or d_idx == -1 or m_idx == -1:\n        return 'boring without all three'\n\n    if abs(c_idx - m_idx) <= j:\n        if min(c_idx, m_idx) < d_idx < max(c_idx, m_idx):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) <= j and (min(cat_index, mouse_index) <= dog_index <= max(cat_index, mouse_index)):\n            return 'Protected!'\n        elif abs(cat_index - mouse_index) <= j:\n            return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    \n    if abs(c_index - m_index) > j:\n        return 'Escaped!'\n    elif (c_index < m_index and d_index > c_index and d_index < m_index) or (m_index < c_index and d_index < c_index and d_index > m_index):\n        return 'Protected!'\n    else:\n        return 'Caught!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index > mouse_index) or (cat_index < dog_index < mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if D_index > min(C_index, m_index) and D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C-m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n\n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    \n    if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    \n    return 'Caught!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) > j:\n            return 'Escaped!'\n        elif (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'"
        ]
    },
    "1": {
        "0": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    \n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    cat_mouse_distance = abs(cat_index - mouse_index)\n\n    if dog_index > min(cat_index, mouse_index) and dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    elif cat_mouse_distance <= j:\n        return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index > mouse_index) or (cat_index < dog_index < mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_idx = x.find('C')\n    mouse_idx = x.find('m')\n    dog_idx = x.find('D')\n    \n    if cat_idx == -1 or mouse_idx == -1 or dog_idx == -1:\n        return 'boring without all three'\n    \n    if abs(cat_idx - mouse_idx) <= j:\n        if (cat_idx > mouse_idx and cat_idx > dog_idx) or (cat_idx < mouse_idx and cat_idx < dog_idx):\n            return 'Caught!'\n        else:\n            return 'Protected!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    animals = {'C': '', 'D': '', 'm': ''}\n    for i, char in enumerate(x):\n        if char in animals:\n            animals[char] = i\n    if '' in animals.values():\n        return 'boring without all three'\n    cat, dog, mouse = animals['C'], animals['D'], animals['m']\n    if abs(cat - mouse) <= j:\n        if dog < min(cat, mouse) and dog > max(cat, mouse):\n            return 'Protected!'\n        return 'Caught!'\n    return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and cat_index < dog_index < mouse_index) or (mouse_index < cat_index and mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    D = x.index('D')\n    m = x.index('m')\n    if abs(C - m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C_index = x.index('C')\n    m_index = x.index('m')\n    D_index = x.index('D')\n    if abs(m_index - C_index) <= j:\n        if min(m_index, C_index) < D_index < max(m_index, C_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    x_list = list(x)\n    cat_index = -1\n    dog_index = -1\n    mouse_index = -1\n    \n    for i in range(len(x_list)):\n        if x_list[i] == 'C':\n            cat_index = i\n        elif x_list[i] == 'D':\n            dog_index = i\n        elif x_list[i] == 'm':\n            mouse_index = i\n            \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and cat_index < dog_index < mouse_index) or (mouse_index < cat_index and mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_pos = x.index('C')\n        mouse_pos = x.index('m')\n        dog_pos = x.index('D')\n        if abs(cat_pos - mouse_pos) <= j:\n            if (cat_pos < dog_pos < mouse_pos) or (mouse_pos < dog_pos < cat_pos):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'"
        ],
        "1": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if (c_index < d_index < m_index) or (m_index < d_index < c_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) <= j and (min(cat_index, mouse_index) <= dog_index <= max(cat_index, mouse_index)):\n            return 'Protected!'\n        elif abs(cat_index - mouse_index) <= j:\n            return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index and dog_index < mouse_index) or (cat_index < dog_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat = x.index('C')\n    dog = x.index('D')\n    mouse = x.index('m')\n    if cat < mouse and dog < mouse:\n        if mouse - cat <= j:\n            return 'Caught!'\n        elif mouse - dog <= j:\n            return 'Protected!'\n        else:\n            return 'Escaped!'\n    elif cat > mouse and dog > mouse:\n        if cat - mouse <= j:\n            return 'Caught!'\n        elif dog - mouse <= j:\n            return 'Protected!'\n        else:\n            return 'Escaped!'\n    elif cat < mouse and dog > mouse:\n        if mouse - cat <= j and dog > mouse:\n            return 'Caught!'\n        else:\n            return 'Protected!'\n    elif cat > mouse and dog < mouse:\n        if cat - mouse <= j and dog < mouse:\n            return 'Caught!'\n        else:\n            return 'Protected!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index)):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if 'D' in x[min(cat_index, mouse_index):max(cat_index, mouse_index)]:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n\n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    x_list = list(x)\n    cat_index = -1\n    dog_index = -1\n    mouse_index = -1\n    \n    for i in range(len(x_list)):\n        if x_list[i] == 'C':\n            cat_index = i\n        elif x_list[i] == 'D':\n            dog_index = i\n        elif x_list[i] == 'm':\n            mouse_index = i\n            \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'"
        ],
        "2": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index)):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    \n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if dog_index > min(cat_index, mouse_index) and dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    elif distance <= j:\n        return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index > mouse_index) or (cat_index < dog_index < mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index)):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C-m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n\n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_index = x.find('C')\n    m_index = x.find('m')\n    d_index = x.find('D')\n\n    if c_index == -1 or m_index == -1 or d_index == -1:\n        return 'boring without all three'\n\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        if abs(c_index - m_index) <= j:\n            if min(c_index, m_index) < d_index < max(c_index, m_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c, d, m = x.index('C'), x.index('D'), x.index('m')\n    if abs(c-m) <= j:\n        if min(c,m) < d < max(c,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    D = x.find('D')\n    m = x.find('m')\n    \n    if C == -1 or D == -1 or m == -1:\n        return 'boring without all three'\n    \n    cat_to_mouse = abs(m - C)\n    \n    if cat_to_mouse <= j:\n        if min(C, m) < D < max(C, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'"
        ],
        "3": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        \n        if abs(c_index - m_index) <= j:\n            if min(c_index, m_index) < d_index < max(c_index, m_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index < mouse_index) or (mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_idx = x.find('C')\n    d_idx = x.find('D')\n    m_idx = x.find('m')\n\n    if c_idx == -1 or d_idx == -1 or m_idx == -1:\n        return 'boring without all three'\n\n    if abs(c_idx - m_idx) <= j:\n        if min(c_idx, m_idx) < d_idx < max(c_idx, m_idx):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    \n    if abs(c_index - m_index) > j:\n        return 'Escaped!'\n    elif 'D' in x[min(c_index, m_index):max(c_index, m_index)]:\n        return 'Protected!'\n    else:\n        return 'Caught!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index > mouse_index) or (cat_index < dog_index < mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if D_index > min(C_index, m_index) and D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C-m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n\n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    \n    if dog_index > min(cat_index, mouse_index) and dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    \n    return 'Caught!'",
            "def cat_mouse(x,j):\n    x_list = list(x)\n    cat_index = -1\n    dog_index = -1\n    mouse_index = -1\n    \n    for i in range(len(x_list)):\n        if x_list[i] == 'C':\n            cat_index = i\n        elif x_list[i] == 'D':\n            dog_index = i\n        elif x_list[i] == 'm':\n            mouse_index = i\n            \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > mouse_index and cat_index > dog_index) or (cat_index < mouse_index and cat_index < dog_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_pos = x.find('C')\n    D_pos = x.find('D')\n    m_pos = x.find('m')\n    \n    if C_pos == -1 or D_pos == -1 or m_pos == -1:\n        return 'boring without all three'\n    \n    if abs(C_pos - m_pos) <= j:\n        if min(C_pos, m_pos) < D_pos < max(C_pos, m_pos):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if 'D' in x[min(cat_index, mouse_index):max(cat_index, mouse_index)]:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        x_list = list(x)\n        C_index = x_list.index('C')\n        m_index = x_list.index('m')\n        D_index = x_list.index('D')\n        if abs(C_index - m_index) <= j:\n            if min(C_index, m_index) < D_index < max(C_index, m_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    D = x.find('D')\n    m = x.find('m')\n    \n    if C == -1 or D == -1 or m == -1:\n        return 'boring without all three'\n    \n    cat_to_mouse = abs(m - C)\n    \n    if cat_to_mouse <= j:\n        if min(C, m) < D < max(C, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'"
        ],
        "4": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_idx = x.find('C')\n    d_idx = x.find('D')\n    m_idx = x.find('m')\n\n    if c_idx == -1 or d_idx == -1 or m_idx == -1:\n        return 'boring without all three'\n\n    if abs(c_idx - m_idx) <= j:\n        if min(c_idx, m_idx) < d_idx < max(c_idx, m_idx):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c = x.index('C')\n    d = x.index('D')\n    m = x.index('m')\n    if abs(c-m) <= j:\n        if (c < d and d < m) or (m < d and d < c):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    distance = abs(cat_index - mouse_index)\n\n    if distance <= j:\n        if (cat_index < dog_index < mouse_index) or (mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) <= j and (min(cat_index, mouse_index) <= dog_index <= max(cat_index, mouse_index)):\n            return 'Protected!'\n        elif abs(cat_index - mouse_index) <= j:\n            return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    \n    if abs(c_index - m_index) > j:\n        return 'Escaped!'\n    elif (c_index < m_index and d_index > c_index and d_index < m_index) or (m_index < c_index and d_index < c_index and d_index > m_index):\n        return 'Protected!'\n    else:\n        return 'Caught!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index > mouse_index) or (cat_index < dog_index < mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if D_index > min(C_index, m_index) and D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C - m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n\n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    \n    if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    \n    return 'Caught!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) > j:\n            return 'Escaped!'\n        elif (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'",
            "def cat_mouse(x,j):\n    x_list = list(x)\n    cat_index = -1\n    dog_index = -1\n    mouse_index = -1\n    \n    for i in range(len(x_list)):\n        if x_list[i] == 'C':\n            cat_index = i\n        elif x_list[i] == 'D':\n            dog_index = i\n        elif x_list[i] == 'm':\n            mouse_index = i\n            \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if dog_index > min(cat_index, mouse_index) and dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_pos = x.find('C')\n    D_pos = x.find('D')\n    m_pos = x.find('m')\n    \n    if C_pos == -1 or D_pos == -1 or m_pos == -1:\n        return 'boring without all three'\n    \n    if abs(C_pos - m_pos) <= j:\n        if min(C_pos, m_pos) < D_pos < max(C_pos, m_pos):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        if abs(c_index - m_index) <= j:\n            if (c_index < d_index and d_index < m_index) or (m_index < d_index and d_index < c_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if 'D' in x[min(cat_index, mouse_index):max(cat_index, mouse_index)]:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    D = x.find('D')\n    m = x.find('m')\n    \n    if C == -1 or D == -1 or m == -1:\n        return 'boring without all three'\n    \n    cat_to_mouse = abs(m - C)\n    \n    if cat_to_mouse <= j:\n        if min(C, m) < D < max(C, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'"
        ]
    },
    "2": {
        "0": [
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and cat_index < dog_index < mouse_index) or (mouse_index < cat_index and mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    D = x.index('D')\n    m = x.index('m')\n    if abs(C - m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C_index = x.index('C')\n    m_index = x.index('m')\n    D_index = x.index('D')\n    if abs(m_index - C_index) <= j:\n        if min(m_index, C_index) < D_index < max(m_index, C_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    x_list = list(x)\n    cat_index = -1\n    dog_index = -1\n    mouse_index = -1\n    \n    for i in range(len(x_list)):\n        if x_list[i] == 'C':\n            cat_index = i\n        elif x_list[i] == 'D':\n            dog_index = i\n        elif x_list[i] == 'm':\n            mouse_index = i\n            \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and cat_index < dog_index < mouse_index) or (mouse_index < cat_index and mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_pos = x.index('C')\n        mouse_pos = x.index('m')\n        dog_pos = x.index('D')\n        if abs(cat_pos - mouse_pos) <= j:\n            if (cat_pos < dog_pos < mouse_pos) or (mouse_pos < dog_pos < cat_pos):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n    \n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_pos = x.find('C')\n    D_pos = x.find('D')\n    m_pos = x.find('m')\n    \n    if C_pos == -1 or D_pos == -1 or m_pos == -1:\n        return 'boring without all three'\n    \n    if abs(C_pos - m_pos) <= j:\n        if min(C_pos, m_pos) < D_pos < max(C_pos, m_pos):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_pos = x.find('C')\n    dog_pos = x.find('D')\n    mouse_pos = x.find('m')\n    \n    if cat_pos == -1 or dog_pos == -1 or mouse_pos == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_pos - mouse_pos)\n    \n    if distance <= j:\n        if min(cat_pos, mouse_pos) < dog_pos < max(cat_pos, mouse_pos):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if cat_index < mouse_index:\n        distance = mouse_index - cat_index\n    else:\n        distance = cat_index - mouse_index\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c, d, m = x.index('C'), x.index('D'), x.index('m')\n    if abs(c-m) <= j:\n        if min(c,m) < d < max(c,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        \n        if abs(c_index - m_index) <= j:\n            if (c_index < d_index < m_index) or (m_index < d_index < c_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    D = x.find('D')\n    m = x.find('m')\n    \n    if C == -1 or D == -1 or m == -1:\n        return 'boring without all three'\n    \n    if abs(C - m) <= j:\n        if (min(C, m) < D < max(C, m)):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'"
        ],
        "1": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index)):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if 'D' in x[min(cat_index, mouse_index):max(cat_index, mouse_index)]:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n\n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    x = list(x)\n    cat_index = dog_index = mouse_index = -1\n    for i, elem in enumerate(x):\n        if elem == 'C':\n            cat_index = i\n        elif elem == 'D':\n            dog_index = i\n        elif elem == 'm':\n            mouse_index = i\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if dog_index < min(cat_index, mouse_index) and dog_index > max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if 'D' in x[min(cat_index, mouse_index):max(cat_index, mouse_index)]:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        \n        if abs(c_index - m_index) <= j:\n            if 'D' in x[min(c_index, m_index):max(c_index, m_index)]:\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    D = x.find('D')\n    m = x.find('m')\n    \n    if C == -1 or D == -1 or m == -1:\n        return 'boring without all three'\n    \n    cat_to_mouse = abs(C - m)\n    \n    if cat_to_mouse <= j:\n        if min(C, m) < D < max(C, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'"
        ],
        "2": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index)):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C-m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n\n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n\n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    \n    if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    \n    return 'Caught!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if (cat_index < dog_index and mouse_index < dog_index) or (cat_index > dog_index and mouse_index > dog_index):\n                return 'Caught!'\n            else:\n                return 'Protected!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        if abs(c_index - m_index) <= j:\n            if min(c_index, m_index) < d_index < max(c_index, m_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_pos = x.find('C')\n    D_pos = x.find('D')\n    m_pos = x.find('m')\n    \n    if C_pos == -1 or D_pos == -1 or m_pos == -1:\n        return 'boring without all three'\n    \n    if abs(C_pos - m_pos) <= j:\n        if min(C_pos, m_pos) < D_pos < max(C_pos, m_pos):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if dog_index < min(cat_index, mouse_index) and dog_index > max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c, d, m = x.index('C'), x.index('D'), x.index('m')\n    if abs(c-m) <= j:\n        if min(c,m) < d < max(c,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    D = x.find('D')\n    m = x.find('m')\n    \n    if C == -1 or D == -1 or m == -1:\n        return 'boring without all three'\n    \n    cat_to_mouse = abs(m - C)\n    \n    if cat_to_mouse <= j:\n        if min(C, m) < D < max(C, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_index = x.find('C')\n    m_index = x.find('m')\n    d_index = x.find('D')\n    \n    if c_index == -1 or m_index == -1 or d_index == -1:\n        return 'boring without all three'\n    \n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C_index = x.index('C')\n    m_index = x.index('m')\n    D_index = x.index('D')\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    dog_index = x.index('D')\n    mouse_index = x.index('m')\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and cat_index < dog_index < mouse_index) or (mouse_index < cat_index and mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if (c_index < d_index and m_index < d_index) or (c_index > d_index and m_index > d_index):\n            return 'Caught!'\n        else:\n            return 'Protected!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > mouse_index and cat_index > dog_index) or (cat_index < mouse_index and cat_index < dog_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    dog_index = x.index('D')\n    mouse_index = x.index('m')\n    cat_mouse_distance = abs(cat_index - mouse_index)\n    cat_dog_distance = abs(cat_index - dog_index)\n    dog_mouse_distance = abs(dog_index - mouse_index)\n    if cat_mouse_distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'"
        ],
        "3": [
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if D_index > min(C_index, m_index) and D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C-m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    mouse_index = x.find('m')\n    dog_index = x.find('D')\n    \n    if cat_index == -1 or mouse_index == -1 or dog_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    mouse = x.find('m')\n    dog = x.find('D')\n\n    if cat == -1 or mouse == -1 or dog == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    \n    if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    \n    return 'Caught!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        mouse_index = x.index('m')\n        dog_index = x.index('D')\n        \n        if abs(cat_index - mouse_index) <= j:\n            if (cat_index < dog_index and mouse_index < dog_index) or (cat_index > dog_index and mouse_index > dog_index):\n                return 'Caught!'\n            else:\n                return 'Protected!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    x_list = list(x)\n    cat_index = -1\n    dog_index = -1\n    mouse_index = -1\n    \n    for i in range(len(x_list)):\n        if x_list[i] == 'C':\n            cat_index = i\n        elif x_list[i] == 'D':\n            dog_index = i\n        elif x_list[i] == 'm':\n            mouse_index = i\n            \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index < mouse_index and cat_index < dog_index < mouse_index) or (mouse_index < cat_index and mouse_index < dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        if abs(c_index - m_index) <= j:\n            if min(c_index, m_index) < d_index < max(c_index, m_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    m = x.find('m')\n    D = x.find('D')\n    \n    if C == -1 or m == -1 or D == -1:\n        return 'boring without all three'\n    \n    distance = abs(C - m)\n    \n    if distance <= j:\n        if min(C, m) < D < max(C, m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_pos = x.find('C')\n    D_pos = x.find('D')\n    m_pos = x.find('m')\n    \n    if C_pos == -1 or D_pos == -1 or m_pos == -1:\n        return 'boring without all three'\n    \n    if abs(C_pos - m_pos) <= j:\n        if min(C_pos, m_pos) < D_pos < max(C_pos, m_pos):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if 'D' in x[min(cat_index, mouse_index):max(cat_index, mouse_index)]:\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'"
        ],
        "4": [
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if (cat_index < dog_index and dog_index < mouse_index) or (mouse_index < dog_index and dog_index < cat_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C = x.index('C')\n    m = x.index('m')\n    D = x.index('D')\n    if abs(C - m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n\n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n\n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n    \n    if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n    \n    return 'Caught!'",
            "def cat_mouse(x,j):\n    x_list = list(x)\n    cat_index = -1\n    dog_index = -1\n    mouse_index = -1\n    \n    for i in range(len(x_list)):\n        if x_list[i] == 'C':\n            cat_index = i\n        elif x_list[i] == 'D':\n            dog_index = i\n        elif x_list[i] == 'm':\n            mouse_index = i\n            \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n        \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    else:\n        cat_index = x.index('C')\n        dog_index = x.index('D')\n        mouse_index = x.index('m')\n        \n        if abs(cat_index - mouse_index) > j:\n            return 'Escaped!'\n        elif (cat_index < mouse_index and dog_index > cat_index and dog_index < mouse_index) or (cat_index > mouse_index and dog_index < cat_index and dog_index > mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    \n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    distance = abs(cat_index - mouse_index)\n    \n    if distance <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat = x.find('C')\n    dog = x.find('D')\n    mouse = x.find('m')\n    \n    if cat == -1 or dog == -1 or mouse == -1:\n        return 'boring without all three'\n    \n    if abs(cat - mouse) <= j:\n        if min(cat, mouse) < dog < max(cat, mouse):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_pos = x.find('C')\n    D_pos = x.find('D')\n    m_pos = x.find('m')\n    \n    if C_pos == -1 or D_pos == -1 or m_pos == -1:\n        return 'boring without all three'\n    \n    if abs(C_pos - m_pos) <= j:\n        if min(C_pos, m_pos) < D_pos < max(C_pos, m_pos):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C = x.find('C')\n    D = x.find('D')\n    m = x.find('m')\n    \n    if C == -1 or D == -1 or m == -1:\n        return 'boring without all three'\n    \n    if abs(C - m) <= j:\n        if min(C,m) < D < max(C,m):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    else:\n        c_index = x.index('C')\n        m_index = x.index('m')\n        d_index = x.index('D')\n        if abs(c_index - m_index) <= j:\n            if (c_index < d_index and d_index < m_index) or (m_index < d_index and d_index < c_index):\n                return 'Protected!'\n            else:\n                return 'Caught!'\n        else:\n            return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    c, d, m = x.index('C'), x.index('D'), x.index('m')\n    if abs(c-m) > j:\n        return 'Escaped!'\n    if (c < m and d > c and d < m) or (c > m and d < m and d > c):\n        return 'Protected!'\n    return 'Caught!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    dog_index = x.index('D')\n    mouse_index = x.index('m')\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    dog_index = x.index('D')\n    mouse_index = x.index('m')\n    if abs(cat_index - mouse_index) <= j:\n        if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    C_index = x.index('C')\n    m_index = x.index('m')\n    D_index = x.index('D')\n    if abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    c_index = x.find('C')\n    d_index = x.find('D')\n    m_index = x.find('m')\n    \n    if c_index == -1 or d_index == -1 or m_index == -1:\n        return 'boring without all three'\n    \n    if abs(c_index - m_index) <= j:\n        if min(c_index, m_index) < d_index < max(c_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n    \n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n    \n    if abs(cat_index - mouse_index) <= j:\n        if dog_index > min(cat_index, mouse_index) and dog_index < max(cat_index, mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    C_index = x.find('C')\n    D_index = x.find('D')\n    m_index = x.find('m')\n    if C_index == -1 or D_index == -1 or m_index == -1:\n        return 'boring without all three'\n    elif abs(C_index - m_index) <= j:\n        if min(C_index, m_index) < D_index < max(C_index, m_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'm' not in x or 'D' not in x:\n        return 'boring without all three'\n    c_index = x.index('C')\n    m_index = x.index('m')\n    d_index = x.index('D')\n    if abs(c_index - m_index) <= j:\n        if (c_index < d_index < m_index) or (m_index < d_index < c_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    mouse_index = x.index('m')\n    dog_index = x.index('D')\n    if abs(cat_index - mouse_index) <= j:\n        if (cat_index > dog_index and dog_index > mouse_index) or (cat_index < dog_index and dog_index < mouse_index):\n            return 'Protected!'\n        else:\n            return 'Caught!'\n    else:\n        return 'Escaped!'",
            "def cat_mouse(x, j):\n    cat_index = x.find('C')\n    dog_index = x.find('D')\n    mouse_index = x.find('m')\n\n    if cat_index == -1 or dog_index == -1 or mouse_index == -1:\n        return 'boring without all three'\n\n    if abs(cat_index - mouse_index) > j:\n        return 'Escaped!'\n\n    if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n        return 'Protected!'\n\n    return 'Caught!'",
            "def cat_mouse(x,j):\n    if 'C' not in x or 'D' not in x or 'm' not in x:\n        return 'boring without all three'\n    cat_index = x.index('C')\n    dog_index = x.index('D')\n    mouse_index = x.index('m')\n    cat_mouse_distance = abs(cat_index - mouse_index)\n    cat_dog_distance = abs(cat_index - dog_index)\n    dog_mouse_distance = abs(dog_index - mouse_index)\n    if min(cat_index, mouse_index) < dog_index < max(cat_index, mouse_index):\n        if cat_mouse_distance <= j:\n            return 'Protected!'\n        else:\n            return 'Escaped!'\n    else:\n        if cat_mouse_distance <= j:\n            return 'Caught!'\n        else:\n            return 'Escaped!'"
        ]
    }
}