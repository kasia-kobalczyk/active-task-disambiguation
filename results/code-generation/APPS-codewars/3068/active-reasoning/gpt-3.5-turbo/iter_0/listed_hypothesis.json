{
    "0": [
        {
            "content": "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n\n    result = ''\n    for char in st:\n        if char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char in 'co':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            new_char = chr(ord(char) + 9)\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    \n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    new_string = \"\"\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                new_string += 'v'\n            elif char == 'e':\n                new_string += 'a'\n            elif char == 'i':\n                new_string += 'e'\n            elif char == 'o':\n                new_string += 'o'\n            elif char == 'u':\n                new_string += 'i'\n        elif char in consonants:\n            if char == 'b':\n                new_string += 'k'\n            elif char == 'c':\n                new_string += 'c'\n            elif char == 'd':\n                new_string += 'a'\n            elif char == 'f':\n                new_string += 'o'\n            elif char == 'g':\n                new_string += 'p'\n            elif char == 'h':\n                new_string += 'q'\n            elif char == 'j':\n                new_string += 'r'\n            elif char == 'k':\n                new_string += 's'\n            elif char == 'l':\n                new_string += 't'\n            elif char == 'm':\n                new_string += 'u'\n            elif char == 'n':\n                new_string += 'w'\n            elif char == 'p':\n                new_string += 'x'\n            elif char == 'q':\n                new_string += 'y'\n            elif char == 'r':\n                new_string += 'z'\n            elif char == 's':\n                new_string += 'b'\n            elif char == 't':\n                new_string += 'c'\n            elif char == 'v':\n                new_string += 'd'\n            elif char == 'w':\n                new_string += 'f'\n            elif char == 'x':\n                new_string += 'g'\n            elif char == 'y':\n                new_string += 'h'\n            elif char == 'z':\n                new_string += 'j'\n        else:\n            new_string += char\n    return new_string",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    new_string = \"\"\n    \n    for char in st:\n        if char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in \"code\":\n                new_char = char\n        elif char in vowels:\n            if char == 'e':\n                new_char = chr((ord(char) - ord('a') - 4) % 26 + ord('a'))\n                if new_char in \"code\":\n                    new_char = char\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') - 3) % 26 + ord('a'))\n                if new_char in \"code\":\n                    new_char = char\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') - 1) % 26 + ord('a'))\n                if new_char in \"code\":\n                    new_char = char\n            else:\n                new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n                if new_char in \"code\":\n                    new_char = char\n        else:\n            new_char = char\n            \n        new_string += new_char\n    \n    return new_string",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = 'aeiu'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'u'\n            elif char == 'i':\n                result += 'o'\n            elif char == 'u':\n                result += 'i'\n        elif char in consonants:\n            if char == 'b':\n                result += 'c'\n            elif char == 'c':\n                result += 'd'\n            elif char == 'd':\n                result += 'e'\n            elif char == 'o':\n                result += 'n'\n            else:\n                result += chr(ord(char) + 9)\n        else:\n            result += char\n    \n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = \"\"\n    for char in st:\n        if char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char) + 26)\n            result += new_char\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char) - 26)\n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n            result += new_char\n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n\n    for char in st:\n        if char == 'c' or char == 'o':\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char == 'c' or new_char == 'o' or new_char == 'd' or new_char == 'e':\n                result += char\n            else:\n                result += new_char\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char == 'c' or new_char == 'o' or new_char == 'd' or new_char == 'e':\n                result += char\n            else:\n                result += new_char\n\n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = [chr(i) for i in range(ord('a'), ord('z')+1) if chr(i) not in vowels]\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = index - 5\n            if new_index < 0:\n                new_index += len(vowels)\n            new_char = vowels[new_index]\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = index + 9\n            if new_index >= len(consonants):\n                new_index -= len(consonants)\n            new_char = consonants[new_index]\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'u'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'e'\n            elif char == 'o':\n                result += 'e'\n            elif char == 'u':\n                result += 'i'\n        elif char in consonants:\n            if char == 'b':\n                result += 'k'\n            elif char == 'c':\n                result += 'b'\n            elif char == 'd':\n                result += 'a'\n            elif char == 'e':\n                result += 'd'\n            elif char == 'f':\n                result += 'o'\n            elif char == 'g':\n                result += 'f'\n            elif char == 'h':\n                result += 'q'\n            elif char == 'i':\n                result += 'h'\n            elif char == 'j':\n                result += 'm'\n            elif char == 'k':\n                result += 'j'\n            elif char == 'l':\n                result += 'x'\n            elif char == 'm':\n                result += 'l'\n            elif char == 'n':\n                result += 'w'\n            elif char == 'p':\n                result += 's'\n            elif char == 'q':\n                result += 'p'\n            elif char == 'r':\n                result += 'n'\n            elif char == 's':\n                result += 'r'\n            elif char == 't':\n                result += 'c'\n            elif char == 'v':\n                result += 't'\n            elif char == 'w':\n                result += 'g'\n            elif char == 'x':\n                result += 'v'\n            elif char == 'y':\n                result += 'z'\n            elif char == 'z':\n                result += 'y'\n        else:\n            result += char\n    \n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char) - 5\n            if index < 0:\n                index += len(vowels)\n            new_char = vowels[index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char) + 9\n            if index >= len(consonants):\n                index -= len(consonants)\n            new_char = consonants[index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for c in st:\n        if c in ['c', 'o']:\n            result += chr(ord(c) - 1)\n        elif c == 'd':\n            result += chr(ord(c) - 3)\n        elif c == 'e':\n            result += chr(ord(c) - 4)\n        elif c in vowels:\n            result += chr((ord(c) - 5 - ord('a')) % 26 + ord('a'))\n        else:\n            result += chr((ord(c) + 9 - ord('a')) % 26 + ord('a'))\n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = 'aeiu'\n    result = ''\n    \n    for char in st:\n        if char in ['c', 'o']:\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char.isalpha():\n            if char in vowels:\n                new_char = chr(ord(char) - 5)\n                if new_char < 'a':\n                    new_char = chr(ord(new_char) + 26)\n            else:\n                new_char = chr(ord(char) + 9)\n                if new_char > 'z':\n                    new_char = chr(ord(new_char) - 26)\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    \n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    result = \"\"\n    for char in st:\n        if char in ['c', 'o']:\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char.isalpha() and char.lower() not in ['a', 'e', 'i', 'o', 'u']:\n            result += chr((ord(char) - 97 + 9) % 26 + 97)\n        elif char.isalpha() and char.lower() in ['a', 'e', 'i', 'o', 'u']:\n            result += chr((ord(char) - 97 - 5) % 26 + 97)\n        else:\n            result += char\n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_st = \"\"\n    \n    for char in st:\n        if char in 'co':\n            new_char = chr(ord(char) - 1)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char == 'd':\n            new_char = chr(ord(char) - 3)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char == 'e':\n            new_char = chr(ord(char) - 4)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in vowels:\n            new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        else:\n            new_st += char\n    \n    return new_st",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    result = ''\n    for c in st:\n        if c == 'c' or c == 'o':\n            result += chr(ord(c) - 1)\n        elif c == 'd':\n            result += chr(ord(c) - 3)\n        elif c == 'e':\n            result += chr(ord(c) - 4)\n        elif c in 'bcdfghjklmnpqrstvwxyz':\n            result += chr((ord(c) - 97 + 9) % 26 + 97)\n        elif c in 'aiu':\n            result += chr((ord(c) - 97 - 5) % 26 + 97)\n        else:\n            result += c\n    return result",
            "logp": null
        },
        {
            "content": "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n    for char in st:\n        if char in ['c', 'o']:\n            new_char = chr(ord(char) - 1)\n        elif char == 'd':\n            new_char = chr(ord(char) - 3)\n        elif char == 'e':\n            new_char = chr(ord(char) - 4)\n        elif char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n        result += new_char\n    return result",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def vowel_back(st):\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    vowels = 'aiu'\n    result = ''\n    for char in st:\n        if char in 'code':\n            if char == 'c' or char == 'o':\n                result += chr(ord(char) - 1)\n            elif char == 'd':\n                result += chr(ord(char) - 3)\n            elif char == 'e':\n                result += chr(ord(char) - 4)\n        elif char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in vowels:\n            new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n    return result",
            "logp": null
        }
    ],
    "3": []
}