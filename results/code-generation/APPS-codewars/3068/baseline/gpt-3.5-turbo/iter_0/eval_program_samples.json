{
    "0": {
        "0": [
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n\n    result = ''\n    for char in st:\n        if char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char in 'co':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            new_char = chr(ord(char) + 9)\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    new_string = \"\"\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                new_string += 'v'\n            elif char == 'e':\n                new_string += 'a'\n            elif char == 'i':\n                new_string += 'e'\n            elif char == 'o':\n                new_string += 'o'\n            elif char == 'u':\n                new_string += 'i'\n        elif char in consonants:\n            if char == 'b':\n                new_string += 'k'\n            elif char == 'c':\n                new_string += 'c'\n            elif char == 'd':\n                new_string += 'a'\n            elif char == 'f':\n                new_string += 'o'\n            elif char == 'g':\n                new_string += 'p'\n            elif char == 'h':\n                new_string += 'q'\n            elif char == 'j':\n                new_string += 'r'\n            elif char == 'k':\n                new_string += 's'\n            elif char == 'l':\n                new_string += 't'\n            elif char == 'm':\n                new_string += 'u'\n            elif char == 'n':\n                new_string += 'w'\n            elif char == 'p':\n                new_string += 'x'\n            elif char == 'q':\n                new_string += 'y'\n            elif char == 'r':\n                new_string += 'z'\n            elif char == 's':\n                new_string += 'b'\n            elif char == 't':\n                new_string += 'c'\n            elif char == 'v':\n                new_string += 'd'\n            elif char == 'w':\n                new_string += 'f'\n            elif char == 'x':\n                new_string += 'g'\n            elif char == 'y':\n                new_string += 'h'\n            elif char == 'z':\n                new_string += 'j'\n        else:\n            new_string += char\n    return new_string",
            "def vowel_back(st):\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    new_string = \"\"\n    \n    for char in st:\n        if char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in \"code\":\n                new_char = char\n        elif char in vowels:\n            if char == 'e':\n                new_char = chr((ord(char) - ord('a') - 4) % 26 + ord('a'))\n                if new_char in \"code\":\n                    new_char = char\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') - 3) % 26 + ord('a'))\n                if new_char in \"code\":\n                    new_char = char\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') - 1) % 26 + ord('a'))\n                if new_char in \"code\":\n                    new_char = char\n            else:\n                new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n                if new_char in \"code\":\n                    new_char = char\n        else:\n            new_char = char\n            \n        new_string += new_char\n    \n    return new_string",
            "def vowel_back(st):\n    vowels = 'aeiu'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'u'\n            elif char == 'i':\n                result += 'o'\n            elif char == 'u':\n                result += 'i'\n        elif char in consonants:\n            if char == 'b':\n                result += 'c'\n            elif char == 'c':\n                result += 'd'\n            elif char == 'd':\n                result += 'e'\n            elif char == 'o':\n                result += 'n'\n            else:\n                result += chr(ord(char) + 9)\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = \"\"\n    for char in st:\n        if char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char) + 26)\n            result += new_char\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char) - 26)\n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n            result += new_char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            \n            if new_char in 'code':\n                new_char = char\n            \n            result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            \n            if new_char in 'code':\n                new_char = char\n            \n            result += new_char\n        else:\n            result += char\n            \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = [chr(i) for i in range(ord('a'), ord('z') + 1) if chr(i) not in vowels]\n    \n    new_st = ''\n    for char in st:\n        if char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char in ['a', 'e', 'i', 'o', 'u']:\n                new_st += new_char\n            else:\n                new_st += char\n        elif char in consonants:\n            new_char = chr(ord(char) + 9)\n            if new_char in ['c', 'd', 'e', 'o']:\n                new_st += char\n            else:\n                new_st += new_char\n        else:\n            new_st += char\n    \n    return new_st",
            "def vowel_back(st):\n    vowels = {'a', 'e', 'i', 'o', 'u'}\n    exceptions = {'c', 'o'}\n    \n    result = \"\"\n    for char in st:\n        if char in vowels and char not in exceptions:\n            new_char = chr(ord(char) - 5)\n            if new_char < 'a':\n                new_char = chr(ord('z') - (ord('a') - ord(new_char)) + 1)\n            if new_char in exceptions:\n                new_char = char\n        elif char.isalpha():\n            new_char = chr(ord(char) + 9)\n            if new_char > 'z':\n                new_char = chr(ord('a') + (ord(new_char) - ord('z')) - 1)\n            if new_char in exceptions:\n                new_char = char\n            elif new_char == 'd':\n                new_char = chr(ord(new_char) - 3)\n            elif new_char == 'e':\n                new_char = chr(ord(new_char) - 4)\n        else:\n            new_char = char\n        result += new_char\n    \n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_string = ''\n    for char in st:\n        if char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_string += char\n            else:\n                new_string += new_char\n        elif char in vowels:\n            new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n            if new_char in 'code':\n                new_string += char\n            else:\n                new_string += new_char\n        else:\n            new_string += char\n    return new_string",
            "def vowel_back(st):\n    # create a dictionary to store the mapping of vowels and their back positions\n    vowel_back_mapping = {'a': 'v', 'e': 'a', 'i': 'e', 'o': 'n', 'u': 'o'}\n    \n    # create a dictionary to store the mapping of consonants and their forward positions\n    consonant_forward_mapping = {'b': 'k', 'c': 'b', 'd': 'a', 'f': 'o', 'g': 'p', 'h': 'q', 'j': 'k', 'k': 't', 'l': 'm', 'm': 'n', 'n': 'w', 'p': 't', 'q': 'r', 'r': 's', 's': 'y', 't': 'j', 'v': 's', 'w': 'r', 'x': 'y', 'y': 'z', 'z': 'a'}\n    \n    # initialize an empty string to store the result\n    result = ''\n    \n    # iterate over each character in the input string\n    for char in st:\n        # if the character is a vowel\n        if char in vowel_back_mapping:\n            # move the vowel back by 5 positions through the alphabet\n            new_char = vowel_back_mapping[char]\n            \n            # if the new character is 'c', 'o', 'd', or 'e', revert it back to its original value\n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n        # if the character is a consonant\n        else:\n            # move the consonant forward by 9 positions through the alphabet\n            new_char = consonant_forward_mapping[char]\n            \n            # if the new character is 'c', 'o', 'd', or 'e', revert it back to its original value\n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n        \n        # append the new character to the result string\n        result += new_char\n    \n    # return the result string\n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n\n    for char in st:\n        if char == 'c' or char == 'o':\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char == 'c' or new_char == 'o' or new_char == 'd' or new_char == 'e':\n                result += char\n            else:\n                result += new_char\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char == 'c' or new_char == 'o' or new_char == 'd' or new_char == 'e':\n                result += char\n            else:\n                result += new_char\n\n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = [chr(i) for i in range(ord('a'), ord('z')+1) if chr(i) not in vowels]\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = index - 5\n            if new_index < 0:\n                new_index += len(vowels)\n            new_char = vowels[new_index]\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = index + 9\n            if new_index >= len(consonants):\n                new_index -= len(consonants)\n            new_char = consonants[new_index]\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'u'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'e'\n            elif char == 'o':\n                result += 'e'\n            elif char == 'u':\n                result += 'i'\n        elif char in consonants:\n            if char == 'b':\n                result += 'k'\n            elif char == 'c':\n                result += 'b'\n            elif char == 'd':\n                result += 'a'\n            elif char == 'e':\n                result += 'd'\n            elif char == 'f':\n                result += 'o'\n            elif char == 'g':\n                result += 'f'\n            elif char == 'h':\n                result += 'q'\n            elif char == 'i':\n                result += 'h'\n            elif char == 'j':\n                result += 'w'\n            elif char == 'k':\n                result += 'j'\n            elif char == 'l':\n                result += 'x'\n            elif char == 'm':\n                result += 'l'\n            elif char == 'n':\n                result += 'y'\n            elif char == 'p':\n                result += 'm'\n            elif char == 'q':\n                result += 'z'\n            elif char == 'r':\n                result += 'n'\n            elif char == 's':\n                result += 'r'\n            elif char == 't':\n                result += 's'\n            elif char == 'v':\n                result += 't'\n            elif char == 'w':\n                result += 'g'\n            elif char == 'x':\n                result += 'v'\n            elif char == 'y':\n                result += 'p'\n            elif char == 'z':\n                result += 'c'\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char) - 5\n            if index < 0:\n                index += len(vowels)\n            new_char = vowels[index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char) + 9\n            if index >= len(consonants):\n                index -= len(consonants)\n            new_char = consonants[index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = \"aeiou\"\n    result = \"\"\n    \n    for char in st:\n        if char in vowels:\n            if char == \"a\":\n                result += \"v\"\n            elif char == \"e\":\n                result += \"a\"\n            elif char == \"i\":\n                result += \"e\"\n            elif char == \"o\":\n                result += \"i\"\n            elif char == \"u\":\n                result += \"o\"\n        elif char == \"c\":\n            result += \"b\"\n        elif char == \"d\":\n            result += \"a\"\n        elif char == \"o\":\n            result += \"n\"\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    new_str = \"\"\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = index - 5\n            if new_index < 0:\n                new_index += len(vowels)\n            new_char = vowels[new_index]\n            if new_char in \"code\":\n                new_char = char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = index + 9\n            if new_index >= len(consonants):\n                new_index -= len(consonants)\n            new_char = consonants[new_index]\n            if new_char in \"code\":\n                new_char = char\n        else:\n            new_char = char\n        new_str += new_char\n    return new_str",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = [chr(x) for x in range(ord('a'), ord('z')+1) if chr(x) not in vowels]\n    \n    result = \"\"\n    for char in st:\n        if char in consonants:\n            new_char = chr(ord(char)+9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char)-26)\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n            result += new_char\n        else:\n            new_char = chr(ord(char)-5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char)+26)\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n            result += new_char\n            \n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_st = ''\n    for char in st:\n        if char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char) + 26)\n        elif char in consonants:\n            new_char = chr(ord(char) + 9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char) - 26)\n            if new_char in 'code':\n                new_char = char\n        else:\n            new_char = char\n        new_st += new_char\n    return new_st",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'r'\n            elif char == 'i':\n                result += 'n'\n            elif char == 'o':\n                result += 'c'\n            elif char == 'u':\n                result += 'y'\n        elif char in consonants:\n            if char == 'b':\n                result += 'a'\n            elif char == 'c':\n                result += 'b'\n            elif char == 'd':\n                result += 'a'\n            else:\n                index = consonants.index(char)\n                result += consonants[(index + 9) % 21]\n        else:\n            result += char\n    return result"
        ],
        "1": [
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for c in st:\n        if c in ['c', 'o']:\n            result += chr(ord(c) - 1)\n        elif c == 'd':\n            result += chr(ord(c) - 3)\n        elif c == 'e':\n            result += chr(ord(c) - 4)\n        elif c in vowels:\n            result += chr((ord(c) - 5 - ord('a') + 26) % 26 + ord('a'))\n        else:\n            result += chr((ord(c) + 9 - ord('a')) % 26 + ord('a'))\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiu'\n    result = ''\n    \n    for char in st:\n        if char in ['c', 'o']:\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char.isalpha():\n            if char in vowels:\n                new_char = chr(ord(char) - 5)\n                if new_char < 'a':\n                    new_char = chr(ord(new_char) + 26)\n            else:\n                new_char = chr(ord(char) + 9)\n                if new_char > 'z':\n                    new_char = chr(ord(new_char) - 26)\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = []\n    for ch in st:\n        if ch in ['c', 'o']:\n            result.append(chr(ord(ch) - 1))\n        elif ch == 'd':\n            result.append(chr(ord(ch) - 3))\n        elif ch == 'e':\n            result.append(chr(ord(ch) - 4))\n        elif ch.isalpha():\n            if ch not in vowels:\n                result.append(chr((ord(ch) - 97 + 9) % 26 + 97))\n            else:\n                result.append(chr((ord(ch) - 97 - 5) % 26 + 97))\n        else:\n            result.append(ch)\n    return ''.join(result)",
            "def vowel_back(st):\n    result = \"\"\n    for char in st:\n        if char in ['c', 'o']:\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char.isalpha() and char.lower() not in ['a', 'e', 'i', 'o', 'u']:\n            result += chr((ord(char) - 97 + 9) % 26 + 97)\n        elif char.isalpha() and char.lower() in ['a', 'e', 'i', 'o', 'u']:\n            result += chr((ord(char) - 97 - 5) % 26 + 97)\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_st = \"\"\n    \n    for char in st:\n        if char in 'co':\n            new_char = chr(ord(char) - 1)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char == 'd':\n            new_char = chr(ord(char) - 3)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char == 'e':\n            new_char = chr(ord(char) - 4)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in vowels:\n            new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        else:\n            new_st += char\n    \n    return new_st",
            "def vowel_back(st):\n    vowels = 'aeiu'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'u'\n            elif char == 'u':\n                result += 'y'\n        elif char in consonants:\n            if char == 'z':\n                result += 'c'\n            elif char == 'o':\n                result += 'l'\n            elif char == 'd':\n                result += 'a'\n            elif char == 'c':\n                result += 'b'\n            else:\n                result += chr(ord(char) + 9)\n    return result\n\nprint(vowel_back(\"apple\"))",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for char in st:\n        if char in 'co':\n            result += chr(ord(char)-1)\n        elif char == 'd':\n            result += chr(ord(char)-3)\n        elif char == 'e':\n            result += chr(ord(char)-4)\n        elif char in vowels:\n            result += chr((ord(char)-5-ord('a')) % 26 + ord('a'))\n        else:\n            result += chr((ord(char)+9-ord('a')) % 26 + ord('a'))\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_string = ''\n    \n    for char in st:\n        if char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n            new_string += new_char\n        elif char in vowels:\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            else:\n                new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            new_string += new_char\n        else:\n            new_string += char\n    \n    return new_string",
            "def vowel_back(st):\n    new_st = ''\n    for letter in st:\n        if letter in 'co':\n            new_st += chr(ord(letter)-1)\n        elif letter == 'd':\n            new_st += chr(ord(letter)-3)\n        elif letter == 'e':\n            new_st += chr(ord(letter)-4)\n        elif letter in 'aeiou':\n            new_st += chr((ord(letter)-5-ord('a'))%26+ord('a'))\n        else:\n            new_st += chr((ord(letter)+9-ord('a'))%26+ord('a'))\n    return new_st",
            "def vowel_back(st):\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    vowels = 'aeiou'\n    new_st = ''\n    \n    for char in st:\n        if char in ['c', 'o']:\n            new_st += alphabet[alphabet.index(char) - 1]\n        elif char == 'd':\n            new_st += alphabet[alphabet.index(char) - 3]\n        elif char == 'e':\n            new_st += alphabet[alphabet.index(char) - 4]\n        elif char in vowels:\n            new_st += alphabet[alphabet.index(char) - 5]\n        else:\n            new_st += alphabet[(alphabet.index(char) + 9) % 26]\n    \n    return new_st"
        ],
        "2": [],
        "3": [
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    new_string = \"\"\n    for char in st:\n        if char in ['c', 'o']:\n            new_string += chr(ord(char) - 1)\n        elif char == 'd':\n            new_string += chr(ord(char) - 3)\n        elif char == 'e':\n            new_string += chr(ord(char) - 4)\n        elif char.isalpha():\n            if char in vowels:\n                new_char = chr(ord(char) - 5)\n                if new_char < 'a':\n                    new_char = chr(ord(new_char) + 26)\n            else:\n                new_char = chr(ord(char) + 9)\n                if new_char > 'z':\n                    new_char = chr(ord(new_char) - 26)\n            if new_char in ['c', 'o', 'd', 'e']:\n                new_string += char\n            else:\n                new_string += new_char\n        else:\n            new_string += char\n    return new_string"
        ],
        "4": []
    },
    "1": {
        "0": [
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n\n    for char in st:\n        if char == 'c' or char == 'o':\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char == 'c' or new_char == 'o' or new_char == 'd' or new_char == 'e':\n                result += char\n            else:\n                result += new_char\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char == 'c' or new_char == 'o' or new_char == 'd' or new_char == 'e':\n                result += char\n            else:\n                result += new_char\n\n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = [chr(i) for i in range(ord('a'), ord('z')+1) if chr(i) not in vowels]\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = index - 5\n            if new_index < 0:\n                new_index += len(vowels)\n            new_char = vowels[new_index]\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = index + 9\n            if new_index >= len(consonants):\n                new_index -= len(consonants)\n            new_char = consonants[new_index]\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'u'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'e'\n            elif char == 'o':\n                result += 'e'\n            elif char == 'u':\n                result += 'i'\n        elif char in consonants:\n            if char == 'b':\n                result += 'k'\n            elif char == 'c':\n                result += 'b'\n            elif char == 'd':\n                result += 'a'\n            elif char == 'e':\n                result += 'd'\n            elif char == 'f':\n                result += 'o'\n            elif char == 'g':\n                result += 'f'\n            elif char == 'h':\n                result += 'q'\n            elif char == 'i':\n                result += 'h'\n            elif char == 'j':\n                result += 'w'\n            elif char == 'k':\n                result += 'j'\n            elif char == 'l':\n                result += 'x'\n            elif char == 'm':\n                result += 'l'\n            elif char == 'n':\n                result += 'y'\n            elif char == 'p':\n                result += 'm'\n            elif char == 'q':\n                result += 'z'\n            elif char == 'r':\n                result += 'n'\n            elif char == 's':\n                result += 'r'\n            elif char == 't':\n                result += 's'\n            elif char == 'v':\n                result += 't'\n            elif char == 'w':\n                result += 'g'\n            elif char == 'x':\n                result += 'v'\n            elif char == 'y':\n                result += 'p'\n            elif char == 'z':\n                result += 'c'\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char) - 5\n            if index < 0:\n                index += len(vowels)\n            new_char = vowels[index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char) + 9\n            if index >= len(consonants):\n                index -= len(consonants)\n            new_char = consonants[index]\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = \"aeiou\"\n    result = \"\"\n    \n    for char in st:\n        if char in vowels:\n            if char == \"a\":\n                result += \"v\"\n            elif char == \"e\":\n                result += \"a\"\n            elif char == \"i\":\n                result += \"e\"\n            elif char == \"o\":\n                result += \"i\"\n            elif char == \"u\":\n                result += \"o\"\n        elif char == \"c\":\n            result += \"b\"\n        elif char == \"d\":\n            result += \"a\"\n        elif char == \"o\":\n            result += \"n\"\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    new_str = \"\"\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = index - 5\n            if new_index < 0:\n                new_index += len(vowels)\n            new_char = vowels[new_index]\n            if new_char in \"code\":\n                new_char = char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = index + 9\n            if new_index >= len(consonants):\n                new_index -= len(consonants)\n            new_char = consonants[new_index]\n            if new_char in \"code\":\n                new_char = char\n        else:\n            new_char = char\n        new_str += new_char\n    return new_str",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = [chr(x) for x in range(ord('a'), ord('z')+1) if chr(x) not in vowels]\n    \n    result = \"\"\n    for char in st:\n        if char in consonants:\n            new_char = chr(ord(char)+9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char)-26)\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n            result += new_char\n        else:\n            new_char = chr(ord(char)-5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char)+26)\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                new_char = char\n            result += new_char\n            \n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_st = ''\n    for char in st:\n        if char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char) + 26)\n        elif char in consonants:\n            new_char = chr(ord(char) + 9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char) - 26)\n            if new_char in 'code':\n                new_char = char\n        else:\n            new_char = char\n        new_st += new_char\n    return new_st",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'r'\n            elif char == 'i':\n                result += 'n'\n            elif char == 'o':\n                result += 'c'\n            elif char == 'u':\n                result += 'y'\n        elif char in consonants:\n            if char == 'b':\n                result += 'a'\n            elif char == 'c':\n                result += 'b'\n            elif char == 'd':\n                result += 'a'\n            else:\n                index = consonants.index(char)\n                result += consonants[(index + 9) % 21]\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    \n    new_st = ''\n    \n    for ch in st:\n        if ch in vowels:\n            if ch == 'a':\n                new_st += 'v'\n            elif ch == 'e':\n                new_st += 'a'\n            else:\n                idx = vowels.index(ch)\n                new_st += vowels[idx-1]\n        elif ch in consonants:\n            if ch == 'c':\n                new_st += 'b'\n            elif ch == 'o':\n                new_st += 'n'\n            elif ch == 'd':\n                new_st += 'a'\n            else:\n                idx = consonants.index(ch)\n                new_st += consonants[(idx+9) % 21]\n        else:\n            new_st += ch\n    \n    return new_st",
            "def vowel_back(st):\n    result = \"\"\n    \n    for char in st:\n        if char in ['a', 'i', 'u']:\n            new_char = chr(ord(char) - 5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char) + 26)\n        elif char in ['c', 'o']:\n            new_char = chr(ord(char) - 1)\n        elif char == 'd':\n            new_char = chr(ord(char) - 3)\n        elif char == 'e':\n            new_char = chr(ord(char) - 4)\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char) - 26)\n                \n        result += new_char\n    \n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            \n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            \n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = (ord(char) - ord('a') - 5) % 26\n            new_char = chr(index + ord('a'))\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        elif char == 'c':\n            result += 'b'\n        elif char == 'o':\n            result += 'n'\n        elif char == 'd':\n            result += 'a'\n        elif char == 'e':\n            result += 'a'\n        else:\n            index = (ord(char) - ord('a') + 9) % 26\n            new_char = chr(index + ord('a'))\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n    \n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            new_char = chr((ord(char) - 5 - ord('a')) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n        elif char in consonants:\n            new_char = chr((ord(char) + 9 - ord('a')) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n        else:\n            new_char = char\n        result += new_char\n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    new_st = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                new_st += char\n            else:\n                new_st += new_char\n        else:\n            new_st += char\n    \n    return new_st",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    \n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        \n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        \n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = \"aeiu\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n\n    result = \"\"\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index - 5) % len(vowels)]\n            if new_char in \"code\":\n                new_char = char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 9) % len(consonants)]\n            if new_char in \"code\":\n                new_char = char\n        else:\n            new_char = char\n\n        result += new_char\n\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'e'\n            elif char == 'o':\n                result += 'i'\n            elif char == 'u':\n                result += 'o'\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    \n    result = ''\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            if char == 'e':\n                index += 4\n                if index > 25:\n                    index -= 26\n            else:\n                index -= 5\n                if index < 0:\n                    index += 26\n            if vowels[index] in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += vowels[index]\n        elif char in consonants:\n            index = consonants.index(char)\n            if char == 'c':\n                index -= 1\n                if index < 0:\n                    index += 21\n            elif char == 'o':\n                index -= 1\n                if index < 0:\n                    index += 21\n            elif char == 'd':\n                index -= 3\n                if index < 0:\n                    index += 21\n            else:\n                index += 9\n                if index > 20:\n                    index -= 21\n            if consonants[index] in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += consonants[index]\n        else:\n            result += char\n    return result"
        ],
        "1": [
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for c in st:\n        if c in ['c', 'o']:\n            result += chr(ord(c) - 1)\n        elif c == 'd':\n            result += chr(ord(c) - 3)\n        elif c == 'e':\n            result += chr(ord(c) - 4)\n        elif c in vowels:\n            result += chr((ord(c) - 5 - ord('a') + 26) % 26 + ord('a'))\n        else:\n            result += chr((ord(c) + 9 - ord('a')) % 26 + ord('a'))\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiu'\n    result = ''\n    \n    for char in st:\n        if char in ['c', 'o']:\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char.isalpha():\n            if char in vowels:\n                new_char = chr(ord(char) - 5)\n                if new_char < 'a':\n                    new_char = chr(ord(new_char) + 26)\n            else:\n                new_char = chr(ord(char) + 9)\n                if new_char > 'z':\n                    new_char = chr(ord(new_char) - 26)\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = []\n    for ch in st:\n        if ch in ['c', 'o']:\n            result.append(chr(ord(ch) - 1))\n        elif ch == 'd':\n            result.append(chr(ord(ch) - 3))\n        elif ch == 'e':\n            result.append(chr(ord(ch) - 4))\n        elif ch.isalpha():\n            if ch not in vowels:\n                result.append(chr((ord(ch) - 97 + 9) % 26 + 97))\n            else:\n                result.append(chr((ord(ch) - 97 - 5) % 26 + 97))\n        else:\n            result.append(ch)\n    return ''.join(result)",
            "def vowel_back(st):\n    result = \"\"\n    for char in st:\n        if char in ['c', 'o']:\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char.isalpha() and char.lower() not in ['a', 'e', 'i', 'o', 'u']:\n            result += chr((ord(char) - 97 + 9) % 26 + 97)\n        elif char.isalpha() and char.lower() in ['a', 'e', 'i', 'o', 'u']:\n            result += chr((ord(char) - 97 - 5) % 26 + 97)\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_st = \"\"\n    \n    for char in st:\n        if char in 'co':\n            new_char = chr(ord(char) - 1)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char == 'd':\n            new_char = chr(ord(char) - 3)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char == 'e':\n            new_char = chr(ord(char) - 4)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in vowels:\n            new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        else:\n            new_st += char\n    \n    return new_st",
            "def vowel_back(st):\n    vowels = 'aeiu'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'u'\n            elif char == 'u':\n                result += 'y'\n        elif char in consonants:\n            if char == 'z':\n                result += 'c'\n            elif char == 'o':\n                result += 'l'\n            elif char == 'd':\n                result += 'a'\n            elif char == 'c':\n                result += 'b'\n            else:\n                result += chr(ord(char) + 9)\n    return result\n\nprint(vowel_back(\"apple\"))",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for char in st:\n        if char in 'co':\n            result += chr(ord(char)-1)\n        elif char == 'd':\n            result += chr(ord(char)-3)\n        elif char == 'e':\n            result += chr(ord(char)-4)\n        elif char in vowels:\n            result += chr((ord(char)-5-ord('a')) % 26 + ord('a'))\n        else:\n            result += chr((ord(char)+9-ord('a')) % 26 + ord('a'))\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_string = ''\n    \n    for char in st:\n        if char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n            new_string += new_char\n        elif char in vowels:\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            else:\n                new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            new_string += new_char\n        else:\n            new_string += char\n    \n    return new_string",
            "def vowel_back(st):\n    new_st = ''\n    for letter in st:\n        if letter in 'co':\n            new_st += chr(ord(letter)-1)\n        elif letter == 'd':\n            new_st += chr(ord(letter)-3)\n        elif letter == 'e':\n            new_st += chr(ord(letter)-4)\n        elif letter in 'aeiou':\n            new_st += chr((ord(letter)-5-ord('a'))%26+ord('a'))\n        else:\n            new_st += chr((ord(letter)+9-ord('a'))%26+ord('a'))\n    return new_st",
            "def vowel_back(st):\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    vowels = 'aeiou'\n    new_st = ''\n    \n    for char in st:\n        if char in ['c', 'o']:\n            new_st += alphabet[alphabet.index(char) - 1]\n        elif char == 'd':\n            new_st += alphabet[alphabet.index(char) - 3]\n        elif char == 'e':\n            new_st += alphabet[alphabet.index(char) - 4]\n        elif char in vowels:\n            new_st += alphabet[alphabet.index(char) - 5]\n        else:\n            new_st += alphabet[(alphabet.index(char) + 9) % 26]\n    \n    return new_st",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            else:\n                new_char = chr(ord(char) - 5)\n                if new_char in 'code':\n                    new_char = char\n        elif char in consonants:\n            if char == 'c':\n                new_char = 'b'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'd':\n                new_char = 'a'\n            else:\n                new_char = chr((ord(char) - 97 + 9) % 26 + 97)\n                if new_char in 'code':\n                    new_char = char\n        else:\n            new_char = char\n        result += new_char\n    return result\n\nprint(vowel_back(\"apple\"))"
        ],
        "2": [],
        "3": [],
        "4": []
    },
    "2": {
        "0": [
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    \n    new_st = ''\n    \n    for ch in st:\n        if ch in vowels:\n            if ch == 'a':\n                new_st += 'v'\n            elif ch == 'e':\n                new_st += 'a'\n            else:\n                idx = vowels.index(ch)\n                new_st += vowels[idx-1]\n        elif ch in consonants:\n            if ch == 'c':\n                new_st += 'b'\n            elif ch == 'o':\n                new_st += 'n'\n            elif ch == 'd':\n                new_st += 'a'\n            else:\n                idx = consonants.index(ch)\n                new_st += consonants[(idx+9) % 21]\n        else:\n            new_st += ch\n    \n    return new_st",
            "def vowel_back(st):\n    result = \"\"\n    \n    for char in st:\n        if char in ['a', 'i', 'u']:\n            new_char = chr(ord(char) - 5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char) + 26)\n        elif char in ['c', 'o']:\n            new_char = chr(ord(char) - 1)\n        elif char == 'd':\n            new_char = chr(ord(char) - 3)\n        elif char == 'e':\n            new_char = chr(ord(char) - 4)\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char) - 26)\n                \n        result += new_char\n    \n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            \n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            \n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = (ord(char) - ord('a') - 5) % 26\n            new_char = chr(index + ord('a'))\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        elif char == 'c':\n            result += 'b'\n        elif char == 'o':\n            result += 'n'\n        elif char == 'd':\n            result += 'a'\n        elif char == 'e':\n            result += 'a'\n        else:\n            index = (ord(char) - ord('a') + 9) % 26\n            new_char = chr(index + ord('a'))\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n    \n    return result",
            "def vowel_back(st):\n    new_string = \"\"\n    vowels = \"aeiou\"\n    for char in st:\n        if char not in vowels:\n            # Move consonants forward 9 places\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n        else:\n            # Move vowels back 5 places\n            new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n\n        if new_char in \"code\":\n            # Revert the character back to its original value\n            new_char = char\n\n        new_string += new_char\n\n    return new_string",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    new_st = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            \n            if new_char in ['c', 'o', 'd', 'e']:\n                new_st += char\n            else:\n                new_st += new_char\n        else:\n            new_st += char\n    \n    return new_st",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    \n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            \n            if vowels[new_index] in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += vowels[new_index]\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            \n            if consonants[new_index] in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += consonants[new_index]\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = \"aeiu\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n\n    result = \"\"\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index - 5) % len(vowels)]\n            if new_char in \"code\":\n                new_char = char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 9) % len(consonants)]\n            if new_char in \"code\":\n                new_char = char\n        else:\n            new_char = char\n\n        result += new_char\n\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'e'\n            elif char == 'o':\n                result += 'i'\n            elif char == 'u':\n                result += 'o'\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    \n    result = ''\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            if char == 'e':\n                index += 4\n                if index > 25:\n                    index -= 26\n            else:\n                index -= 5\n                if index < 0:\n                    index += 26\n            if vowels[index] in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += vowels[index]\n        elif char in consonants:\n            index = consonants.index(char)\n            if char == 'c':\n                index -= 1\n                if index < 0:\n                    index += 21\n            elif char == 'o':\n                index -= 1\n                if index < 0:\n                    index += 21\n            elif char == 'd':\n                index -= 3\n                if index < 0:\n                    index += 21\n            else:\n                index += 9\n                if index > 20:\n                    index -= 21\n            if consonants[index] in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += consonants[index]\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result = \"\"\n\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            if new_char in \"code\":\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            if new_char in \"code\":\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n\n    return result",
            "def vowel_back(st):\n    result = \"\"\n    for letter in st:\n        if letter in \"aeiou\":\n            if letter == \"a\":\n                result += \"v\"\n            elif letter == \"e\":\n                result += \"d\"\n            elif letter == \"i\":\n                result += \"c\"\n            elif letter == \"o\":\n                result += \"b\"\n            elif letter == \"u\":\n                result += \"a\"\n        else:\n            if letter == \"c\":\n                result += \"c\"\n            elif letter == \"d\":\n                result += \"e\"\n            elif letter == \"o\":\n                result += \"o\"\n            else:\n                ascii_value = ord(letter) + 9\n                if ascii_value > ord(\"z\"):\n                    ascii_value = ord(\"a\") + (ascii_value - ord(\"z\")) - 1\n                result += chr(ascii_value)\n    return result",
            "def vowel_back(st):\n    result = \"\"\n    for char in st:\n        if char == 'c' or char == 'o':\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char in ['a', 'i', 'u']:\n            result += chr((ord(char) - 5 - ord('a')) % 26 + ord('a'))\n        elif char in ['b', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']:\n            result += chr((ord(char) + 9 - ord('a')) % 26 + ord('a'))\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = \"aeiou\"\n    new_string = \"\"\n    \n    for char in st:\n        if char in vowels:\n            if char == \"a\":\n                new_string += \"v\"\n            elif char == \"e\":\n                new_string += \"d\"\n            elif char == \"i\":\n                new_string += \"u\"\n            elif char == \"o\":\n                new_string += \"c\"\n            elif char == \"u\":\n                new_string += \"t\"\n        else:\n            new_char = ord(char) + 9\n            if new_char > ord(\"z\"):\n                new_char = new_char - ord(\"z\") + ord(\"a\") - 1\n            new_string += chr(new_char)\n    \n    return new_string",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for char in st:\n        if char in vowels:\n            index = ord(char) - 5\n            if index < 97:\n                index += 26\n            new_char = chr(index)\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n        else:\n            index = ord(char) + 9\n            if index > 122:\n                index -= 26\n            new_char = chr(index)\n            if new_char in 'code':\n                result += char\n            else:\n                result += new_char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'e'\n            elif char == 'o':\n                result += 'u'\n            elif char == 'u':\n                result += 'o'\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    new_string = \"\"\n    vowels = \"aeiou\"\n    \n    for char in st:\n        if char in vowels:\n            new_char = chr(ord(char) - 5)\n            if new_char < 'a':\n                new_char = chr(ord(new_char) + 26)\n                \n            if new_char in \"code\":\n                new_char = char\n                \n            new_string += new_char\n        else:\n            new_char = chr(ord(char) + 9)\n            if new_char > 'z':\n                new_char = chr(ord(new_char) - 26)\n                \n            if new_char in \"code\":\n                new_char = char\n                \n            new_string += new_char\n    \n    return new_string",
            "def vowel_back(st):\n    vowels = {'a', 'e', 'i', 'o', 'u'}\n    consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n    result = ''\n    \n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'u'\n            elif char == 'o':\n                result += 'c'\n            elif char == 'u':\n                result += 'i'\n        elif char in consonants:\n            if char == 'b':\n                result += 'k'\n            elif char == 'c':\n                result += 'b'\n            elif char == 'd':\n                result += 'g'\n            elif char == 'f':\n                result += 'o'\n            elif char == 'g':\n                result += 'd'\n            elif char == 'h':\n                result += 'q'\n            elif char == 'j':\n                result += 'v'\n            elif char == 'k':\n                result += 'e'\n            elif char == 'l':\n                result += 'r'\n            elif char == 'm':\n                result += 's'\n            elif char == 'n':\n                result += 'x'\n            elif char == 'p':\n                result += 'w'\n            elif char == 'q':\n                result += 'y'\n            elif char == 'r':\n                result += 'n'\n            elif char == 's':\n                result += 'c'\n            elif char == 't':\n                result += 'f'\n            elif char == 'v':\n                result += 'j'\n            elif char == 'w':\n                result += 'p'\n            elif char == 'x':\n                result += 'm'\n            elif char == 'y':\n                result += 'h'\n            elif char == 'z':\n                result += 't'\n        else:\n            result += char\n    \n    return result",
            "def vowel_back(st):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = [chr(x) for x in range(ord('a'), ord('z')+1) if chr(x) not in vowels]\n    result = \"\"\n    for char in st:\n        if char in vowels:\n            index = vowels.index(char)\n            new_index = (index - 5) % len(vowels)\n            new_char = vowels[new_index]\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        elif char in consonants:\n            index = consonants.index(char)\n            new_index = (index + 9) % len(consonants)\n            new_char = consonants[new_index]\n            if new_char in ['c', 'o', 'd', 'e']:\n                result += char\n            else:\n                result += new_char\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result = \"\"\n    \n    for char in st:\n        if char in vowels:\n            if char == \"a\":\n                result += \"z\"\n            else:\n                result += chr(ord(char) - 5)\n        elif char in consonants:\n            if char == \"c\" or char == \"o\":\n                result += chr(ord(char) + 1)\n            elif char == \"d\":\n                result += chr(ord(char) + 3)\n            elif char == \"e\":\n                result += chr(ord(char) + 4)\n            else:\n                result += chr(ord(char) + 9)\n        else:\n            result += char\n    \n    return result"
        ],
        "1": [
            "def vowel_back(st):\n    result = \"\"\n    for char in st:\n        if char in ['c', 'o']:\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char.isalpha() and char.lower() not in ['a', 'e', 'i', 'o', 'u']:\n            result += chr((ord(char) - 97 + 9) % 26 + 97)\n        elif char.isalpha() and char.lower() in ['a', 'e', 'i', 'o', 'u']:\n            result += chr((ord(char) - 97 - 5) % 26 + 97)\n        else:\n            result += char\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_st = \"\"\n    \n    for char in st:\n        if char in 'co':\n            new_char = chr(ord(char) - 1)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char == 'd':\n            new_char = chr(ord(char) - 3)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char == 'e':\n            new_char = chr(ord(char) - 4)\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        elif char in vowels:\n            new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n            if new_char in 'code':\n                new_st += char\n            else:\n                new_st += new_char\n        else:\n            new_st += char\n    \n    return new_st",
            "def vowel_back(st):\n    vowels = 'aeiu'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                result += 'v'\n            elif char == 'e':\n                result += 'a'\n            elif char == 'i':\n                result += 'u'\n            elif char == 'u':\n                result += 'y'\n        elif char in consonants:\n            if char == 'z':\n                result += 'c'\n            elif char == 'o':\n                result += 'l'\n            elif char == 'd':\n                result += 'a'\n            elif char == 'c':\n                result += 'b'\n            else:\n                result += chr(ord(char) + 9)\n    return result\n\nprint(vowel_back(\"apple\"))",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for char in st:\n        if char in 'co':\n            result += chr(ord(char)-1)\n        elif char == 'd':\n            result += chr(ord(char)-3)\n        elif char == 'e':\n            result += chr(ord(char)-4)\n        elif char in vowels:\n            result += chr((ord(char)-5-ord('a')) % 26 + ord('a'))\n        else:\n            result += chr((ord(char)+9-ord('a')) % 26 + ord('a'))\n    return result",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    new_string = ''\n    \n    for char in st:\n        if char in consonants:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n            new_string += new_char\n        elif char in vowels:\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            else:\n                new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            new_string += new_char\n        else:\n            new_string += char\n    \n    return new_string",
            "def vowel_back(st):\n    new_st = ''\n    for letter in st:\n        if letter in 'co':\n            new_st += chr(ord(letter)-1)\n        elif letter == 'd':\n            new_st += chr(ord(letter)-3)\n        elif letter == 'e':\n            new_st += chr(ord(letter)-4)\n        elif letter in 'aeiou':\n            new_st += chr((ord(letter)-5-ord('a'))%26+ord('a'))\n        else:\n            new_st += chr((ord(letter)+9-ord('a'))%26+ord('a'))\n    return new_st",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    result = ''\n    for char in st:\n        if char in vowels:\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            else:\n                new_char = chr(ord(char) - 5)\n                if new_char in 'code':\n                    new_char = char\n        elif char in consonants:\n            if char == 'c':\n                new_char = 'b'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'd':\n                new_char = 'a'\n            else:\n                new_char = chr((ord(char) - 97 + 9) % 26 + 97)\n                if new_char in 'code':\n                    new_char = char\n        else:\n            new_char = char\n        result += new_char\n    return result\n\nprint(vowel_back(\"apple\"))",
            "def vowel_back(st):\n    vowels = 'aeiou'\n    result = ''\n    for char in st:\n        if char in 'co':\n            result += chr(ord(char) - 1)\n        elif char == 'd':\n            result += chr(ord(char) - 3)\n        elif char == 'e':\n            result += chr(ord(char) - 4)\n        elif char in vowels:\n            result += chr((ord(char) - 5 - ord('a')) % 26 + ord('a'))\n        else:\n            result += chr((ord(char) + 9 - ord('a')) % 26 + ord('a'))\n    return result"
        ],
        "2": [],
        "3": [],
        "4": []
    }
}