{
    "0": [
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            result.append(new_char)\n        else:\n            if char == 'c' or char == 'o':\n                new_char = chr(((ord(char) - ord('a') - 1) % 26) + ord('a'))\n            elif char == 'd':\n                new_char = chr(((ord(char) - ord('a') - 3) % 26) + ord('a'))\n            elif char == 'e':\n                new_char = chr(((ord(char) - ord('a') - 4) % 26) + ord('a'))\n            else:\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n            \n            if new_char in 'code':\n                new_char = char\n            \n            result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - 97 - 1) % 26 + 97)\n            elif char == 'd':\n                new_char = chr((ord(char) - 97 - 3) % 26 + 97)\n            elif char == 'e':\n                new_char = chr((ord(char) - 97 - 4) % 26 + 97)\n            elif char == 'o':\n                new_char = chr((ord(char) - 97 - 1) % 26 + 97)\n            else:\n                new_char = chr((ord(char) - 97 + 9) % 26 + 97)\n        \n        if new_char in 'code':\n            result.append(char)\n        else:\n            result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'o':\n                result.append('n')\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            if new_char in 'code':\n                new_char = char\n            result.append(new_char)\n        else:\n            if char == 'c' or char == 'o':\n                new_char = chr((ord(char) - ord('a') + 25) % 26 + ord('a'))\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 23) % 26 + ord('a'))\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 22) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n            result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            if new_char in 'code':\n                new_char = char\n        else:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n        result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        else:\n            new_char = chr(((ord(char) - 97 + 9) % 26) + 97)\n            if new_char in 'code':\n                new_char = char\n\n        result.append(new_char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        else:\n            if char == 'c':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'o':\n                result.append('n')\n            elif char == 'd':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'e':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            else:\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 25) % 26 + ord('a'))\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') + 25) % 26 + ord('a'))\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 23) % 26 + ord('a'))\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 22) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n        \n        if new_char in 'code':\n            new_char = char\n        \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n            else:\n                result.append(char)\n        elif char.isalpha():\n            if char == 'c' or char == 'o':\n                new_char = chr((ord(char) - ord('a') - 1) % 26 + ord('a'))\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') - 3) % 26 + ord('a'))\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') - 4) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n\n            if new_char in 'code':\n                result.append(char)\n            else:\n                result.append(new_char)\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    def shift(c):\n        if c in 'aeiou':\n            if c == 'a': return 'z'\n            if c == 'e': return 'a'\n            if c == 'i': return 'd'\n            if c == 'o': return 'n'\n            if c == 'u': return 'p'\n            return chr(((ord(c) - ord('a') - 5) % 26) + ord('a'))\n        elif c in 'bcdfghjklmnpqrstvwxyz':\n            if c == 'c': return 'b'\n            if c == 'd': return 'a'\n            if c == 'o': return 'n'\n            return chr(((ord(c) - ord('a') + 9) % 26) + ord('a'))\n        return c\n\n    return ''.join(shift(c) for c in st)\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            result.append(new_char)\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            \n            result.append(new_char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        elif char in 'bcdfghjklmnpqrstvwxyz':\n            if char == 'c':\n                new_char = chr(((ord(char) - ord('a') - 1) % 26) + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'o':\n                new_char = chr(((ord(char) - ord('a') - 1) % 26) + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'd':\n                new_char = chr(((ord(char) - ord('a') - 3) % 26) + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'e':\n                new_char = chr(((ord(char) - ord('a') - 4) % 26) + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            else:\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n        else:\n            new_char = char\n            \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n            else:\n                result.append(char)\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            else:\n                new_char = char\n        else:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n                \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            if new_char in 'code':\n                new_char = char\n        else:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n        result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            new_char = chr((ord(char) - ord('a') - 5) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n        elif char in 'bcdfghjklmnpqrstvwxyz':\n            if char == 'c' or char == 'o':\n                new_char = chr((ord(char) - ord('a') + 25) % 26 + ord('a'))\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') - 3) % 26 + ord('a'))\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') - 4) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n        else:\n            new_char = char\n        \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        else:\n            if char == 'c':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'o':\n                result.append('n')\n            elif char == 'd':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'e':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            else:\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') - 1) % 26 + ord('a'))\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') - 1) % 26 + ord('a'))\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') - 3) % 26 + ord('a'))\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') - 4) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n        \n        if new_char in 'code':\n            new_char = char\n        \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        elif char in 'bcdfghjklmnpqrstvwxyz':\n            if char == 'c':\n                new_char = chr(((ord(char) - 97 - 1) % 26) + 97)\n            elif char == 'o':\n                new_char = chr(((ord(char) - 97 - 1) % 26) + 97)\n            elif char == 'd':\n                new_char = chr(((ord(char) - 97 - 3) % 26) + 97)\n            elif char == 'e':\n                new_char = chr(((ord(char) - 97 - 4) % 26) + 97)\n            else:\n                new_char = chr(((ord(char) - 97 + 9) % 26) + 97)\n\n            if new_char in 'code':\n                result.append(char)\n            else:\n                result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    def shift(c):\n        if c in 'aeiou':\n            if c == 'a': return 'z'\n            if c == 'e': return 'a'\n            if c == 'i': return 'd'\n            if c == 'o': return 'n'\n            if c == 'u': return 'p'\n            return c\n        elif c in 'cd':\n            return chr((ord(c) - ord('a') - (3 if c == 'd' else 1)) % 26 + ord('a'))\n        elif c == 'e':\n            return 'a'\n        elif c == 'o':\n            return 'n'\n        elif c == 'y':\n            return 'y'\n        else:\n            return chr((ord(c) - ord('a') + 9) % 26 + ord('a'))\n\n    return ''.join(shift(c) for c in st)\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            result.append(new_char)\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            \n            result.append(new_char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        elif char in 'bcdfghjklmnpqrstvwxyz':\n            if char == 'c':\n                new_char = chr(((ord(char) - ord('a') - 1) % 26) + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'o':\n                new_char = chr(((ord(char) - ord('a') - 1) % 26) + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'd':\n                new_char = chr(((ord(char) - ord('a') - 3) % 26) + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'e':\n                new_char = chr(((ord(char) - ord('a') - 4) % 26) + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            else:\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n        else:\n            new_char = char\n            \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'o':\n                result.append('n')\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            else:\n                new_char = char\n        else:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n                \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            result.append(new_char)\n        else:\n            if char == 'c':\n                new_char = chr(((ord(char) - 97 - 1) % 26) + 97)\n            elif char == 'o':\n                new_char = chr(((ord(char) - 97 - 1) % 26) + 97)\n            elif char == 'd':\n                new_char = chr(((ord(char) - 97 - 3) % 26) + 97)\n            elif char == 'e':\n                new_char = chr(((ord(char) - 97 - 4) % 26) + 97)\n            else:\n                new_char = chr(((ord(char) - 97 + 9) % 26) + 97)\n            if new_char in 'code':\n                result.append(char)\n            else:\n                result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - 97 - 1) % 26 + 97)\n                if new_char in 'coed':\n                    new_char = char\n            elif char == 'o':\n                new_char = chr((ord(char) - 97 - 1) % 26 + 97)\n                if new_char in 'coed':\n                    new_char = char\n            elif char == 'd':\n                new_char = chr((ord(char) - 97 - 3) % 26 + 97)\n                if new_char in 'coed':\n                    new_char = char\n            elif char == 'e':\n                new_char = chr((ord(char) - 97 - 4) % 26 + 97)\n                if new_char in 'coed':\n                    new_char = char\n            else:\n                new_char = chr((ord(char) - 97 + 9) % 26 + 97)\n        \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        else:\n            if char == 'c':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'o':\n                result.append('n')\n            elif char == 'd':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'e':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            else:\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 25) % 26 + ord('a'))\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') + 25) % 26 + ord('a'))\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 23) % 26 + ord('a'))\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 22) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n        \n        if new_char in 'code':\n            new_char = char\n        \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        elif char in 'bcdfghjklmnpqrstvwxyz':\n            new_char = chr((ord(char) - 97 + 9) % 26 + 97)\n            if new_char in 'code':\n                result.append(char)\n            else:\n                result.append(new_char)\n        else:\n            result.append(char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    def shift(c):\n        if c in 'aeiou':\n            if c == 'a': return 'v'\n            if c == 'e': return 'a'\n            if c == 'i': return 'd'\n            if c == 'o': return 'n'\n            if c == 'u': return 'p'\n            return c\n        elif c in 'bcdfghjklmnpqrstvwxyz':\n            new_char = chr((ord(c) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                return c\n            return new_char\n        return c\n\n    return ''.join(shift(c) for c in st)\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            result.append(new_char)\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    new_char = char\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            \n            result.append(new_char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        elif char.isalpha():\n            if char in 'c':\n                new_char = chr((ord(char) - 1 - ord('a') + 26) % 26 + ord('a'))\n            elif char in 'o':\n                new_char = chr((ord(char) - 1 - ord('a') + 26) % 26 + ord('a'))\n            elif char in 'd':\n                new_char = chr((ord(char) - 3 - ord('a') + 26) % 26 + ord('a'))\n            elif char in 'e':\n                new_char = chr((ord(char) - 4 - ord('a') + 26) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) + 9 - ord('a')) % 26 + ord('a'))\n                \n            if new_char in 'code':\n                new_char = char\n                \n        else:\n            new_char = char\n            \n        result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        else:\n            if char == 'c':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'o':\n                result.append('n')\n            elif char == 'd':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'e':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            else:\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            else:\n                new_char = char\n        else:\n            new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            if new_char in 'code':\n                new_char = char\n                \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            result.append(new_char)\n        else:\n            if char == 'c':\n                new_char = chr(((ord(char) - 97 + 9) % 26) + 97)\n                if new_char in 'co':\n                    new_char = char\n            elif char == 'o':\n                new_char = chr(((ord(char) - 97 + 9) % 26) + 97)\n                if new_char in 'co':\n                    new_char = char\n            elif char == 'd':\n                new_char = chr(((ord(char) - 97 - 3) % 26) + 97)\n                if new_char in 'code':\n                    new_char = char\n            elif char == 'e':\n                new_char = chr(((ord(char) - 97 - 4) % 26) + 97)\n                if new_char in 'code':\n                    new_char = char\n            else:\n                new_char = chr(((ord(char) - 97 + 9) % 26) + 97)\n            result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n            else:\n                new_char = char\n            \n            if new_char in 'code':\n                new_char = char\n            \n            result.append(new_char)\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n\n            if new_char in 'code':\n                new_char = char\n            \n            result.append(new_char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        else:\n            if char == 'c':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'o':\n                result.append('n')\n            elif char == 'd':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            elif char == 'e':\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n            else:\n                new_char = chr(((ord(char) - ord('a') + 9) % 26) + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    \n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                new_char = 'v'\n            elif char == 'e':\n                new_char = 'a'\n            elif char == 'i':\n                new_char = 'd'\n            elif char == 'o':\n                new_char = 'n'\n            elif char == 'u':\n                new_char = 'p'\n        else:\n            if char == 'c':\n                new_char = chr((ord(char) - ord('a') + 25) % 26 + ord('a'))\n            elif char == 'o':\n                new_char = chr((ord(char) - ord('a') + 25) % 26 + ord('a'))\n            elif char == 'd':\n                new_char = chr((ord(char) - ord('a') + 23) % 26 + ord('a'))\n            elif char == 'e':\n                new_char = chr((ord(char) - ord('a') + 22) % 26 + ord('a'))\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n        \n        if new_char in 'code':\n            new_char = char\n        \n        result.append(new_char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        elif char in 'bcdfghjklmnpqrstvwxyz':\n            new_char = chr((ord(char) - 97 + 9) % 26 + 97)\n            if new_char in 'code':\n                result.append(char)\n            else:\n                result.append(new_char)\n        else:\n            result.append(char)\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef vowel_back(st):\n    result = []\n    for char in st:\n        if char in 'aeiou':\n            if char == 'a':\n                result.append('v')\n            elif char == 'e':\n                result.append('a')\n            elif char == 'i':\n                result.append('d')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'u':\n                result.append('p')\n        else:\n            if char == 'c':\n                result.append('l')\n            elif char == 'o':\n                result.append('n')\n            elif char == 'd':\n                result.append('g')\n            elif char == 'e':\n                result.append('a')\n            else:\n                new_char = chr((ord(char) - ord('a') + 9) % 26 + ord('a'))\n                if new_char in 'code':\n                    result.append(char)\n                else:\n                    result.append(new_char)\n    return ''.join(result)\n```",
            "logp": null
        }
    ]
}