{
    "0": {
        "0": [
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for char in s:\n        temp = s.replace(char, '')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True"
        ],
        "1": [
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        new_string = s[:i] + s[i+1:]\n        if new_string == new_string[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False"
        ],
        "2": [
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s): \n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = ''\n        word = ''.join(temp)\n        if word == word[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False"
        ],
        "3": [
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False"
        ],
        "4": []
    },
    "1": {
        "0": [
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s): \n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n            \n    count_odd = 0\n    for count in char_count.values():\n        if count % 2 != 0:\n            count_odd += 1\n        if count_odd > 1:\n            return False\n            \n    return True",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False"
        ],
        "1": [
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s): \n    for i in range(len(s)): \n        t = s[:i] + s[i+1] + s[i] + s[i+1:] \n        if t == t[::-1]: \n            return True \n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + \"*\" + s[i+1:]\n        if t == t[::-1]:\n            return True\n    return False"
        ],
        "2": [
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False"
        ],
        "3": [
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False"
        ],
        "4": []
    },
    "2": {
        "0": [
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)",
            "def solve(s): \n    first = second = False \n    for i in range(len(s) // 2): \n        if s[i] != s[-i - 1]:\n            first = True \n            if s[i] != s[-i - 1]:\n                second = True \n    return not (first or second)"
        ],
        "1": [
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False"
        ],
        "2": [
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:] + s[i]\n        if t == t[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        temp = list(s)\n        temp[i] = temp[i].replace(temp[i],'*')\n        if temp == temp[::-1]:\n            return True\n    return False"
        ],
        "3": [
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s):\n    s = s.lower()\n    for i in range(len(s)):\n        left, right = s[:i], s[i+1:]\n        if left + right == (left + right)[::-1]:\n            return True\n    return False",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True",
            "def solve(s): \n    left, right = 0, len(s) - 1\n    changed = 0\n    while left < right:\n        if s[left] != s[right]:\n            if changed > 1:\n                return False\n            if s[left + 1] == s[right]:\n                left += 1\n            elif s[left] == s[right - 1]:\n                right -= 1\n            else:\n                changed += 1\n                left += 1\n        else:\n            left += 1\n            right -= 1\n    return True"
        ],
        "4": []
    }
}