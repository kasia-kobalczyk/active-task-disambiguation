{
    "0": [
        {
            "content": "def solve(s):\n    l, r = 0, len(s) - 1\n    count = 0\n    while l < r:\n        if s[l] != s[r]:\n            count += 1\n            if count > 1:\n                return False\n        l += 1\n        r -= 1\n    return count <= 1",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            count += 1\n        if count > 1:\n            return False\n    return count == 1 or (len(s) % 2 == 1 and count == 0)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left, right = 0, len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        if count > 1:\n            return False\n        left += 1\n        right -= 1\n    return count == 1 or (count == 0 and len(s) % 2 == 0)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left = 0\n    right = len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        if count > 1:\n            return False\n        left += 1\n        right -= 1\n    return count == 1 or (count == 0 and len(s) % 2 == 1)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left, right = 0, len(s) - 1\n    diff = 0\n    while left < right:\n        if s[left] != s[right]:\n            diff += 1\n            if diff > 1:\n                return False\n        left += 1\n        right -= 1\n    return diff == 1 or (diff == 0 and len(s) % 2 == 0)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            count += 1\n        if count > 1:\n            return False\n    return count == 1 or (count == 0 and len(s) % 2 == 1)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    l, r = 0, len(s) - 1\n    diff = 0\n    while l < r:\n        if s[l] != s[r]:\n            diff += 1\n        l += 1\n        r -= 1\n    return diff <= 1",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left = 0\n    right = len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        if count > 1:\n            return False\n        left += 1\n        right -= 1\n    return count == 1 or (count == 0 and len(s) % 2 == 1)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left, right = 0, len(s) - 1\n    changed = False\n    while left < right:\n        if s[left] != s[right]:\n            if changed:\n                return False\n            changed = True\n        left += 1\n        right -= 1\n    return True",
            "logp": null
        },
        {
            "content": "def solve(s):\n    if len(s) <= 1:\n        return False\n    left, right = 0, len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n            if count > 1:\n                return False\n        left += 1\n        right -= 1\n    return count == 1",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def solve(s):\n    left, right = 0, len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        if count > 1:\n            return 0\n        left += 1\n        right -= 1\n    return 1 if count == 1 else 0",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            count += 1\n        if count > 1:\n            return 0\n    return 1 if count == 1 else 0",
            "logp": null
        },
        {
            "content": "def solve(s):\n    if s == s[::-1]:\n        return 0\n    for i in range(len(s)):\n        t = s[:i] + s[i+1:]\n        if t == t[::-1]:\n            return 1\n    return 0",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            count += 1\n    return count == 1",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            count += 1\n        if count > 1:\n            return 0\n    return 1 if count == 1 else 0",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left = 0\n    right = len(s) - 1\n    count = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        left += 1\n        right -= 1\n\n    return count == 1",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-1 - i]:\n            count += 1\n    return count == 1 or (count == 0 and len(s) % 2 == 1)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    for i in range(len(s)):\n        t = list(s)\n        t[i] = 'x'\n        if t == t[::-1]:\n            return 1\n    if s == s[::-1]:\n        return 0\n    return 0",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left = 0\n    right = len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        if count > 1:\n            return 0\n        left += 1\n        right -= 1\n    return 1 if count == 1 else 0",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left, right = 0, len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        if count > 1:\n            return False\n        left += 1\n        right -= 1\n    return count == 1 or (count == 0 and len(s) % 2 == 1)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left = 0\n    right = len(s) - 1\n    count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n            if count > 1:\n                return False\n        left += 1\n        right -= 1\n    \n    if count == 1:\n        return True\n    elif len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-1 - i]:\n            count += 1\n    return count == 1 or (count == 0 and len(s) % 2 != 0)",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def solve(s):\n    n = len(s)\n    left, right = 0, n - 1\n    diff = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            diff += 1\n        if diff > 1:\n            return 0\n        left += 1\n        right -= 1\n        \n    if n % 2 == 0 and diff == 1:\n        return True\n    elif n % 2 != 0 and diff == 0:\n        return True\n    elif diff == 1:\n        return 1\n    else:\n        return 0",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            count += 1\n    if count > 1:\n        return 0\n    elif count == 1:\n        return 1\n    else:\n        if len(s) % 2 == 0:\n            return 0\n        else:\n            return True",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left, right = 0, len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        left += 1\n        right -= 1\n    return count == 1 or (count == 0 and len(s) % 2 != 0)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    l, r = 0, len(s) - 1\n    count = 0\n    while l < r:\n        if s[l] != s[r]:\n            count += 1\n        if count > 1:\n            return False\n        l += 1\n        r -= 1\n    return count == 1 or (count == 0 and len(s) % 2 == 1)",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left, right = 0, len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        if count > 1:\n            return 0\n        left += 1\n        right -= 1\n    if count == 1:\n        return 1\n    return False if len(s) % 2 == 0 else True",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            count += 1\n    if count == 1 or (count == 0 and len(s) % 2 == 1):\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def solve(s):\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i] != s[-1 - i]:\n            count += 1\n    if count > 1:\n        return False\n    else:\n        return count == 1 or len(s) % 2 == 1",
            "logp": null
        },
        {
            "content": "def solve(s):\n    left, right = 0, len(s) - 1\n    count = 0\n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        if count > 1:\n            return False\n        left += 1\n        right -= 1\n    return count == 1 or (count == 0 and len(s) % 2 == 1)",
            "logp": null
        }
    ]
}