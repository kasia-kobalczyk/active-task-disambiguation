{
    "0": [
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n        \n        if mismatch_count > 1:\n            return False\n            \n    return mismatch_count == 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    mismatches = 0\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n    \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n    \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n\n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    count = 0\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        left += 1\n        right -= 1\n    \n    return count == 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    mismatches = 0\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n    \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n        \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    mismatch_count = 0\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n        \n        if mismatch_count > 1:\n            return False\n            \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n            if mismatch_count > 1:\n                return False\n        left += 1\n        right -= 1\n\n    return mismatch_count == 1\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef solve(s):\n    l = 0\n    r = len(s) - 1\n    mismatches = 0\n    \n    while l < r:\n        if s[l] != s[r]:\n            mismatches += 1\n        l += 1\n        r -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n\n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    count = 0\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        left += 1\n        right -= 1\n    \n    return count == 1 or (count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n    \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n        \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n\n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    mismatches = 0\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n    \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n    \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef solve(s):\n    l = 0\n    r = len(s) - 1\n    mismatches = 0\n    \n    while l < r:\n        if s[l] != s[r]:\n            mismatches += 1\n        l += 1\n        r -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n\n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n        \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    count = 0\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        if s[left] != s[right]:\n            count += 1\n        left += 1\n        right -= 1\n    \n    return count == 1 or (count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n    \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n\n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    l, r = 0, len(s) - 1\n    mismatch_count = 0\n\n    while l < r:\n        if s[l] != s[r]:\n            mismatch_count += 1\n        l += 1\n        r -= 1\n\n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n    \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n    \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n        \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n    \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    differences = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            differences += 1\n        left += 1\n        right -= 1\n        \n    return differences == 1 or (differences == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n    \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n\n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    mismatches = 0\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n        \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatch_count = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n    \n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    differences = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            differences += 1\n        left += 1\n        right -= 1\n    \n    return differences == 1 or (differences == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatch_count = 0\n\n    while left < right:\n        if s[left] != s[right]:\n            mismatch_count += 1\n        left += 1\n        right -= 1\n\n    return mismatch_count == 1 or (mismatch_count == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left = 0\n    right = len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n        \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef solve(s):\n    left, right = 0, len(s) - 1\n    mismatches = 0\n    \n    while left < right:\n        if s[left] != s[right]:\n            mismatches += 1\n        left += 1\n        right -= 1\n    \n    return mismatches == 1 or (mismatches == 0 and len(s) % 2 == 1)\n```",
            "logp": null
        }
    ]
}