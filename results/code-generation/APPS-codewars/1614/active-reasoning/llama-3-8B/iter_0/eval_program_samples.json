{
    "0": {
        "0": [
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    winner = {\"Red\": False, \"Yellow\": False}\n    for piece in pieces_positions:\n        column, color = piece[0], piece[3]\n        for line in LINES:\n            for position in line:\n                if position[0] == column:\n                    if (position[1], color) in [(position[1], color-1), (position[1], color+1)] and (position[1], color) in [(position[1]-1, color), (position[1]+1, color)]:\n                        winner[color] = True\n    if winner[\"Red\"]:\n        return \"Red\"\n    elif winner[\"Yellow\"]:\n        return \"Yellow\"\n    else:\n        return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    for col in COLUMNS:\n        column = [pos for pos in pieces_positions if pos.startswith(col)]\n        if len(set([pos.split('_')[1] for pos in column])) == 1:\n            return 'Yellow' if column[0].split('_')[1] == 'Yellow' else 'Red'\n    return 'Draw' if len(set([pos.split('_')[1] for pos in pieces_positions])) == 1 else 'Unknown'"
        ],
        "1": [],
        "2": [],
        "3": [],
        "4": []
    },
    "1": {
        "0": [
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "def who_is_winner(pieces_positions):\n    pieces_position_dict = {pos.split('_')[1]: pos.split('_')[0] for pos in pieces_positions}\n    for line in LINES:\n        for pos in line:\n            if all(pieces_position_dict[pos].split('_')[1] == piece for piece in [pieces_position_dict[p] for p in line]):\n                return 'Yellow' if piece == 'Yellow' else 'Red'\n    return 'Draw'",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")"
        ],
        "1": [
            "```\ndef who_is_winner(pieces_positions):\n    player_one = 'Red'\n    player_two = 'Yellow'\n    player_one_stack = [0] * len(COLUMNS)\n    player_two_stack = [0] * len(COLUMNS)\n\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[-3:]\n        if color == player_one:\n            player_one_stack[COLUMNS.index(column)] += 1\n        elif color == player_two:\n            player_two_stack[COLUMNS.index(column)] += 1\n\n        for line in LINES:\n            for cell in line:\n                column, row = cell\n                column_index = COLUMNS.index(column)\n                if player_one_stack[column_index] >= 4:\n                    return player_one\n                elif player_two_stack[column_index] >= 4:\n                    return player_two\n\n    if sum(player_one_stack) >= 42 or sum(player_two_stack) >= 42:\n        return 'Draw'\n\n    return 'Game is not over yet'"
        ],
        "2": [],
        "3": [],
        "4": []
    },
    "2": {
        "0": [
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "```\ndef who_is_winner(pieces_positions):\n    winner = None\n    positions = {}\n    for piece in pieces_positions:\n        position, color = piece[0], piece[3:]\n        if position not in positions:\n            positions[position] = color\n        else:\n            if positions[position] != color:\n                winner = \"Draw\"\n                break\n    for line in LINES:\n        for pos in line:\n            color = positions.get(pos[0], None)\n            if color and color != positions.get(pos[1], None) and color != positions.get(pos[2], None) and color != positions.get(pos[3], None):\n                winner = color\n                break\n        if winner:\n            break\n    return \"Yellow\" if winner == \"Yellow\" else (\"Red\" if winner == \"Red\" else \"Draw\")",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\"",
            "def who_is_winner(pieces_positions):\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[2:]\n        current_row = 5\n        while current_row >= 0 and column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            current_row -= 1\n            column = COLUMNS[COLUMNS.index(column) - 1]\n        if column not in [f\"{c}_{color}\" for c in COLUMNS]:\n            continue\n        for line in LINES:\n            if all((c, str(5 - current_row)) in line for c in line if f\"{c}_{color}\" in [f\"{c}_{color}\" for c in COLUMNS]):\n                return color\n    return \"Draw\""
        ],
        "1": [
            "```\ndef who_is_winner(pieces_positions):\n    player_one = 'Red'\n    player_two = 'Yellow'\n    player_one_stack = [0] * len(COLUMNS)\n    player_two_stack = [0] * len(COLUMNS)\n\n    for piece in pieces_positions:\n        column = piece[0]\n        color = piece[-3:]\n        if color == player_one:\n            player_one_stack[COLUMNS.index(column)] += 1\n        elif color == player_two:\n            player_two_stack[COLUMNS.index(column)] += 1\n\n        for line in LINES:\n            for cell in line:\n                column, row = cell\n                if player_one_stack[COLUMNS.index(column)] >= 4:\n                    return player_one\n                if player_two_stack[COLUMNS.index(column)] >= 4:\n                    return player_two\n\n    if sum(player_one_stack) == sum(player_two_stack) == 42:\n        return 'Draw'\n    return 'Yellow' if sum(player_two_stack) > sum(player_one_stack) else 'Red'"
        ],
        "2": [],
        "3": [],
        "4": []
    }
}