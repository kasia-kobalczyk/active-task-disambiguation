{
    "0": [
        {
            "content": "def get_score(n):\n    return 50 * n * (n + 1)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    score = n * 50 + (n-1) * (n-1) * 50\n    return score",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    score = n * 50 + (n * (n-1) * 25)\n    return score",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n * 50)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + (n - 1) * (n - 1) * 100",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def get_score(n):\n    return n * 50 + n * (n - 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n**2 + n) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n+1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n+1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def get_score(n):\n    return (n**2 + n) * 25\n\n#The pattern in the given numbers is the square of n multiplied by 25.",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    score = n * (n + 1) * 25\n    return score\n\nprint(get_score(5)) # 750\nprint(get_score(6)) # 1050",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n**2 + n) * 25",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n < 1:\n        return None\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        }
    ]
}