{
    "0": {
        "0": [
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):",
            "def get_score(n):",
            "def get_score(n):",
            "def get_score(n):",
            "def get_score(n):",
            "def get_score(n):",
            "def get_score(n):",
            "def get_score(n):",
            "def get_score(n):",
            "def get_score(n):"
        ],
        "1": [
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2"
        ],
        "2": [],
        "3": [],
        "4": []
    },
    "1": {
        "0": [
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    if n < 1:\n        return None\n    elif n == 1:\n        return 50\n    else:\n        return get_score(n-1) * 3 + 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50"
        ],
        "1": [
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2"
        ],
        "2": [
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2"
        ],
        "3": [
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2"
        ],
        "4": []
    },
    "2": {
        "0": [
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return n * 100 - 50",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2"
        ],
        "1": [
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2"
        ],
        "2": [
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2"
        ],
        "3": [
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2",
            "def get_score(n):\n    return (n * (n + 1) * 50) // 2"
        ],
        "4": []
    }
}