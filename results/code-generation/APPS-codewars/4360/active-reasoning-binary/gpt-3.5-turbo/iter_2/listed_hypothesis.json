{
    "0": [
        {
            "content": "def get_score(n):\n    return n * (n * 50)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n == 1:\n        return 50\n    else:\n        return (n * 100) + (n-1) * (n-2) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n*(n+1)*50)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n * 100 + 50)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return 50 * n * (n + 1)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n == 1:\n        return 50\n    elif n == 2:\n        return 150\n    elif n == 3:\n        return 300\n    elif n == 4:\n        return 500\n    elif n == 5:\n        return 750\n    else:\n        return None",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 if n > 0 else None",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return 50 * n * (n + 1)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 * (n + 1)",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + (n * (n-1) // 2 * 50)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*50",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n * 50)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n+1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return 50 * n ** 2",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1)) * 25",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def get_score(n):\n    return n * 50 + (n-1) * (n-1) * 50",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + n * (n - 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n+1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n <= 0:\n        return 0\n    return n * 50 + (n * (n - 1) * 50) // 2\n\nprint(get_score(1))  # 50\nprint(get_score(2))  # 150\nprint(get_score(3))  # 300\nprint(get_score(4))  # 500\nprint(get_score(5))  # 750",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n == 1:\n        return 50\n    elif n == 2:\n        return 150\n    else:\n        return (n * 100) + 50",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n <= 0:\n        return None\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + (n * (n - 1) // 2) * 50\n\nassert get_score(1) == 50\nassert get_score(2) == 150\nassert get_score(3) == 300\nassert get_score(4) == 500\nassert get_score(5) == 750",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def get_score(n):\n    return (n * (n + 1) // 2) * 50",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) // 2) * 50\n\nprint(get_score(1)) # should print 50\nprint(get_score(2)) # should print 150\nprint(get_score(3)) # should print 300\nprint(get_score(4)) # should print 500\nprint(get_score(5)) # should print 750\nprint(get_score(6)) # should print 1050\nprint(get_score(7)) # should print 1400",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n < 1:\n        return 0\n    else:\n        return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1)) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + (n-1) * n * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*50 + (n-1)*n*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + (n - 1) * (n * 25)",
            "logp": null
        }
    ]
}