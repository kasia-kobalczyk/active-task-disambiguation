{
    "0": [
        {
            "content": "def get_score(n):\n    return 50 * n * (n + 1)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    score = n * 50 + (n-1) * (n-1) * 50\n    return score",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    score = n * 50 + (n * (n-1) * 25)\n    return score",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n * 50)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + (n - 1) * (n - 1) * 100",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def get_score(n):\n    return n * 50 + (n - 1) * n * 50 // 2\n\nprint(get_score(1))\nprint(get_score(2))\nprint(get_score(3))\nprint(get_score(4))\nprint(get_score(5))",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n**2 + n) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n+1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + (n * (n-1) // 2 * 50)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*50 + (n-1)*n*50/2\n",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1)) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n+1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def get_score(n):\n    if n == 1:\n        return 50\n    else:\n        return 50 * n + get_score(n-1)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n**2 + n) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n ** 2 + n) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n+1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n <= 0:\n        return 0\n    return n * 50 + (n * (n - 1) * 50) // 2\n\nprint(get_score(5))  # 750\nprint(get_score(2))  # 150",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def get_score(n):\n    if n == 1:\n        return 50\n    else:\n        return 50 * n + get_score(n-1)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n * (n + 1) * 25)",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n**2 + n) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return (n ** 2 + n) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * 50 + n * (n - 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n*(n+1)*25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n+1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    return n * (n + 1) * 25",
            "logp": null
        },
        {
            "content": "def get_score(n):\n    if n <= 0:\n        return 0\n    return n * 50 + (n * (n - 1) * 50) // 2\n\nprint(get_score(5))  # 750\nprint(get_score(2))  # 150",
            "logp": null
        }
    ]
}