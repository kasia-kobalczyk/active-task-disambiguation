{
    "0": {
        "0": [
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def generate_number():\n        i = val + 1\n        while True:\n            if i % 3 == 0 and unique_digits(i):\n                yield i\n            i += 1\n\n    for num in generate_number():\n        if num > val:\n            return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\""
        ],
        "1": [
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\""
        ],
        "2": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\""
        ],
        "3": [
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    def is_valid(num):\n        return unique_digits(num) and num % 3 == 0 and num % 2 != 0 and num > val\n\n    num = val + 1\n    while True:\n        if is_valid(num):\n            return num\n        num += 1\n        if num % 3 != 0:\n            continue\n        if not unique_digits(num):\n            continue\n        if num % 2 == 0:\n            continue\n        if num <= val:\n            continue\n        return num\n    return \"There is no possible number that fulfills those requirements\""
        ],
        "4": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 == 1 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\""
        ]
    },
    "1": {
        "0": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\""
        ],
        "1": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while not (unique_digits(i) and i % 2 != 0 and i % 3 == 0):\n        i += 1\n    return i if i % 3 == 0 else \"There is no possible number that fulfills those requirements\""
        ],
        "2": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        elif val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\""
        ],
        "3": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\""
        ],
        "4": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\""
        ]
    },
    "2": {
        "0": [
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 10**9):\n        if i % 3 == 0 and unique_digits(i) and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 3\n        if val % 2 != 0 and unique_digits(val):\n            return val\n        elif val % 2 == 0:\n            continue\n        else:\n            return \"There is no possible number that fulfills those requirements\""
        ],
        "1": [
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    for i in range(val + 1, 2 * val + 1):\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n    return \"There is no possible number that fulfills those requirements\""
        ],
        "2": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    i = val + 1\n    while True:\n        if unique_digits(i) and i % 3 == 0 and i % 2 != 0:\n            return i\n        i += 1\n    return \"There is no possible number that fulfills those requirements\""
        ],
        "3": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1"
        ],
        "4": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and unique_digits(val) and val % 2 != 0:\n            if val == val:\n                return val\n            else:\n                return str(val)\n        elif val >= 10000000000:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    while True:\n        if unique_digits(val + 1) and (val + 1) % 2 != 0 and (val + 1) % 3 == 0:\n            return val + 1\n        elif val + 1 > 10000000000:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1"
        ]
    }
}