{
    "0": {
        "0": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 2 != 0 and val % 3 == 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 2 != 0 and val % 3 == 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    next_num = val + 1\n    while True:\n        if unique_digits(next_num) and next_num % 3 == 0 and next_num % 2 != 0:\n            return next_num\n        next_num += 1\n        if next_num > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 10**9:  # assuming we are working with 32-bit integers\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9: \n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val"
        ],
        "1": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**10: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**10: \n            return \"There is no possible number that fulfills those requirements\""
        ],
        "2": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**10 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\""
        ],
        "3": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 2 != 0 and val % 3 == 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            if val > 9999999999:\n                return \"There is no possible number that fulfills those requirements\"\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    if val < 0:\n        return \"There is no possible number that fulfills those requirements\"\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**18:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\""
        ],
        "4": [
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            if val > 9999999999:\n                return \"There is no possible number that fulfills those requirements\"\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 10**9:  # assuming we are working with 10 digit numbers\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if not unique_digits(val):\n            val += 1\n            continue\n        return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 != 0:\n            continue\n        if val % 2 != 1:\n            continue\n        if not unique_digits(val):\n            continue\n        return val\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\""
        ]
    },
    "1": {
        "0": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9: \n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9: \n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)"
        ],
        "1": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**10: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**10: \n            return \"There is no possible number that fulfills those requirements\""
        ],
        "2": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 == 1 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if not unique_digits(val):\n            val += 1\n            continue\n        return val\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\""
        ],
        "3": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    if val < 0:\n        return \"There is no possible number that fulfills those requirements\"\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**18:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\""
        ],
        "4": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    if val < 0:\n        return \"There is no possible number that fulfills those requirements\"\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 2 != 0 and val % 3 == 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**18:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if not unique_digits(val):\n            val += 1\n            continue\n        return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 != 0:\n            continue\n        if val % 2 != 1:\n            continue\n        if not unique_digits(val):\n            continue\n        return val\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9223372036854775807: # maximum limit for integer in Python\n            return \"There is no possible number that fulfills those requirements\""
        ]
    },
    "2": {
        "0": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9: \n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**9: \n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**9: \n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        elif val < 10**9:\n            return val\n        else:\n            return \"There is no possible number that fulfills those requirements\""
        ],
        "1": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**10: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**10: \n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**10:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if not unique_digits(val):\n            val += 1\n            continue\n        return val\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\""
        ],
        "2": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\" if val > 10**9 else next_numb(val)",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 10**10: \n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if not unique_digits(val):\n            val += 1\n            continue\n        return val\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\""
        ],
        "3": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"\n        val += 1",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**18:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 2 != 0 and val % 3 == 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    if val > 10**9:  # Assuming maximum possible value is 10^9\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 == 0:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\""
        ],
        "4": [
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 10**18:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if not unique_digits(val):\n            val += 1\n            continue\n        return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 != 0:\n            continue\n        if val % 2 != 1:\n            continue\n        if not unique_digits(val):\n            continue\n        return val\n    if val > 10**9:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if not unique_digits(val):\n            val += 1\n            continue\n        return val\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 10**9: \n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0:\n            val += 1\n            continue\n        if val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if unique_digits(val) and val % 3 == 0 and val % 2 != 0:\n            return val\n        val += 1\n        if val > 9223372036854775807: # maximum limit for integer in Python\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            return val\n    return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    while True:\n        val += 1\n        if val % 3 == 0 and val % 2 != 0 and unique_digits(val):\n            return val\n        if val > 9999999999:\n            return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1:\n            val += 1\n            continue\n        if unique_digits(val):\n            return val\n        val += 1\n    if val > 9999999999:\n        return \"There is no possible number that fulfills those requirements\"",
            "def next_numb(val):\n    val += 1\n    while True:\n        if val % 3 != 0 or val % 2 != 1 or not unique_digits(val):\n            val += 1\n        else:\n            if val > 9999999999:\n                return \"There is no possible number that fulfills those requirements\"\n            return val"
        ]
    }
}