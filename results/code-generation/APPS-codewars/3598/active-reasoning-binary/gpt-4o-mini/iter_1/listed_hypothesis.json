{
    "0": [
        {
            "content": "```python\ndef plane_seat(a):\n    if not (1 <= int(a[:-1]) <= 60) or a[-1] not in \"ABCDEFGHIK\":\n        return 'No Seat!!'\n    \n    section = int(a[:-1])\n    letter = a[-1]\n    \n    if section <= 20:\n        location = \"Front\"\n    elif section <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    \n    if letter in \"ABC\":\n        cluster = \"Left\"\n    elif letter in \"DEF\":\n        cluster = \"Middle\"\n    else:\n        cluster = \"Right\"\n        \n    return f\"{location}-{cluster}\"\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if not (1 <= a[:-1] <= 60) or a[-1] not in 'ABCDEFGHJKLM':\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number <= 20:\n        section = 'Front'\n    elif number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if not (1 <= a[:-1] <= 60) or a[-1] not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number <= 20:\n        section = 'Front'\n    elif number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        side = 'Left'\n    elif letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f'{section}-{side}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if not (1 <= int(a[:-1]) <= 60) or a[-1] not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    section = int(a[:-1])\n    letter = a[-1]\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        cluster = 'Left'\n    elif letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{location}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if not (1 <= int(a[:-1]) <= 60) or a[-1] not in 'ABCDEFGHJK':\n        return 'No Seat!!'\n    \n    section = int(a[:-1])\n    letter = a[-1]\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        side = 'Left'\n    elif letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f'{location}-{side}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if not (1 <= a[0] <= 60) or a[1] not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    section = 'Front' if a[0] <= 20 else 'Middle' if a[0] <= 40 else 'Back'\n    cluster = 'Left' if a[1] in 'ABC' else 'Middle' if a[1] in 'DEF' else 'Right'\n    \n    return f'{section}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) != 2 or not a[0].isdigit() or not a[1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter in 'IJ' or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        section = 'Front'\n    elif number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if not (1 <= int(a[:-1]) <= 60) or a[-1] not in 'ABCDEFGHJKLM':\n        return 'No Seat!!'\n    \n    section = int(a[:-1])\n    letter = a[-1]\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        cluster = 'Left'\n    elif letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f\"{location}-{cluster}\"\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) != 2 or not a[0].isdigit() or a[0] == '0' or not a[1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        side = 'Left'\n    elif seat_letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f'{location}-{side}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) != 2 or not a[0].isdigit() or a[0] == '0' or not (1 <= int(a[0]) <= 60) or a[1] not in 'ABCDEFGHJK':\n        return 'No Seat!!'\n    \n    seat_num = int(a[0])\n    seat_letter = a[1]\n    \n    if seat_num <= 20:\n        section = 'Front'\n    elif seat_num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f\"{section}-{cluster}\"\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in 'ABC':\n        position = 'Left'\n    elif seat_letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n\n    if seat_number < 1 or seat_number > 60 or seat_letter not in 'ABCDEFGHJK':\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n\n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n\n    return f'{location}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter not in \"ABCDEFGHK\":\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = \"Front\"\n    elif seat_number <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    \n    if seat_letter in \"ABC\":\n        cluster = \"Left\"\n    elif seat_letter in \"DEF\":\n        cluster = \"Middle\"\n    else:\n        cluster = \"Right\"\n    \n    return f\"{location}-{cluster}\"\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n\n    if seat_number < 1 or seat_number > 60 or seat_letter not in \"ABCDEFGHK\":\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        position = 'Front'\n    elif seat_number <= 40:\n        position = 'Middle'\n    else:\n        position = 'Back'\n\n    if seat_letter in \"ABC\":\n        location = 'Left'\n    elif seat_letter in \"DEF\":\n        location = 'Middle'\n    else:\n        location = 'Right'\n\n    return f\"{position}-{location}\"\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHJK':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        section = 'Front'\n    elif number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        cluster = 'Left'\n    elif letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{section}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "def plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if 1 <= number <= 20:\n        position = 'Front'\n    elif 21 <= number <= 40:\n        position = 'Middle'\n    else:\n        position = 'Back'\n    \n    if letter in 'ABC':\n        side = 'Left'\n    elif letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f\"{position}-{side}\"",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n\n    if seat_number < 1 or seat_number > 60 or seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n\n    if seat_letter in 'ABC':\n        return f'{location}-Left'\n    elif seat_letter in 'DEF':\n        return f'{location}-Middle'\n    else:\n        return f'{location}-Right'\n```",
            "logp": null
        },
        {
            "content": "def plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        location = 'Front'\n    elif number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        side = 'Left'\n    elif letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f'{location}-{side}'",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if 1 <= number <= 20:\n        section = 'Front'\n    elif 21 <= number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter not in 'ABCDEFGHJK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        side = 'Left'\n    elif seat_letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f\"{location}-{side}\"\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHIKL':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        section = 'Front'\n    elif number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        cluster = 'Left'\n    elif letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{section}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if 1 <= seat_number <= 20:\n        section = 'Front'\n    elif 21 <= seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{section}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "def plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter not in 'ABCDEFGHJK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        position = 'Front'\n    elif seat_number <= 40:\n        position = 'Middle'\n    else:\n        position = 'Back'\n    \n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{position}-{cluster}'",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n\n    if number < 1 or number > 60 or letter not in \"ABCDEFGHK\":\n        return 'No Seat!!'\n\n    if 1 <= number <= 20:\n        location = 'Front'\n    elif 21 <= number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n\n    if letter in \"ABC\":\n        cluster = 'Left'\n    elif letter in \"DEF\":\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n\n    return f'{location}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if number < 1 or number > 60 or letter in 'IJ' or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if 1 <= number <= 20:\n        section = 'Front'\n    elif 21 <= number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter in 'IJ' or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        location = 'Front'\n    elif number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        cluster = 'Left'\n    elif letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{location}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2:\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if 1 <= number <= 20:\n        section = 'Front'\n    elif 21 <= number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in 'IJ':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    elif seat_letter in 'GH':\n        cluster = 'Right'\n    else:\n        cluster = 'Right'  # G-K are all right, but there's no overlap\n    \n    return f'{section}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHJK':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        location = 'Front'\n    elif number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        side = 'Left'\n    elif letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f\"{location}-{side}\"\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if number < 1 or number > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    \n    if 1 <= number <= 20:\n        section = 'Front'\n    elif 21 <= number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f\"{section}-{position}\"\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n\n    if seat_number < 1 or seat_number > 60 or seat_letter in 'IJ' or seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n        \n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n        \n    return f'{location}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n\n    if seat_number < 1 or seat_number > 60 or seat_letter in 'IJ' or seat_letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n\n    if seat_letter in 'ABC':\n        position = 'Left'\n    elif seat_letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n\n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2:\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n\n    if number < 1 or number > 60 or letter not in 'ABCDEFGHJKLM':\n        return 'No Seat!!'\n\n    if number <= 20:\n        location = 'Front'\n    elif number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n\n    if letter in 'ABC':\n        side = 'Left'\n    elif letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n\n    return f\"{location}-{side}\"\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in 'IJ':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in 'ABC':\n        position = 'Left'\n    elif seat_letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n\n    if number < 1 or number > 60 or letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        section = 'Front'\n    elif number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n\n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n\n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n\n    if seat_number < 1 or seat_number > 60 or seat_letter not in 'ABCDEFGHJK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in 'ABC':\n        position = 'Left'\n    elif seat_letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f'{section}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n\n    if number < 1 or number > 60 or letter not in \"ABCDEFGHJK\":\n        return 'No Seat!!'\n    \n    if 1 <= number <= 20:\n        section = 'Front'\n    elif 21 <= number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    \n    return f\"{section}-{position}\"\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        location = 'Front'\n    elif number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        side = 'Left'\n    elif letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f'{location}-{side}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in 'IJ' or seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{location}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2:\n        return 'No Seat!!'\n    \n    num = int(a[:-1])\n    letter = a[-1]\n\n    if num < 1 or num > 60 or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n\n    if num <= 20:\n        location = 'Front'\n    elif num <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        position = 'Left'\n    elif letter in 'DEF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n\n    return f'{location}-{position}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2:\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter not in 'ABCDEFGHJKLM':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        location = 'Front'\n    elif number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        side = 'Left'\n    elif letter in 'DEF':\n        side = 'Middle'\n    else:\n        side = 'Right'\n    \n    return f'{location}-{side}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in 'IJ' or seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n        \n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n        \n    return f'{location}-{cluster}'\n```",
            "logp": null
        },
        {
            "content": "```python\ndef plane_seat(a):\n    if len(a) < 2 or not a[:-1].isdigit() or not a[-1].isalpha():\n        return 'No Seat!!'\n    \n    number = int(a[:-1])\n    letter = a[-1]\n    \n    if number < 1 or number > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIJK':\n        return 'No Seat!!'\n    \n    if number <= 20:\n        location = 'Front'\n    elif number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        seat_type = 'Left'\n    elif letter in 'DEF':\n        seat_type = 'Middle'\n    else:\n        seat_type = 'Right'\n    \n    return f'{location}-{seat_type}'\n```",
            "logp": null
        }
    ]
}