{
    "0": {
        "0": [
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if a > 60 or (a < 1 or a % 10 > 6) or (a < 21 and (ord('I') <= ord(str(a % 10)[0]) <= ord('K'))) or (a > 20 and a % 10 < 4):\n        return 'No Seat!!'\n    if a < 21:\n        return str(a) + '-' + 'Front-' + 'Left' if a % 10 < 3 else 'Front-' + 'Right'\n    if a < 41:\n        return str(a) + '-' + 'Middle-' + 'Left' if a % 10 < 4 else 'Middle-' + 'Right'\n    return str(a) + '-' + 'Back-' + 'Left' if a % 10 < 4 else 'Back-' + 'Right'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'"
        ],
        "1": [],
        "2": [],
        "3": [
            "def plane_seat(a):\n    if not a[:1].isdigit() or not a[1:].isalpha() or len(a) != 3:\n        return \"No Seat!!\"\n    if int(a[:1]) < 1 or int(a[:1]) > 60:\n        return \"No Seat!!\"\n    section = \"Front\" if int(a[:1]) <= 20 else \"Middle\" if int(a[:1]) <= 40 else \"Back\"\n    if a[1] in [\"I\", \"J\"]:\n        return \"No Seat!!\"\n    letter = a[1].upper()\n    if letter == \"A\" or letter == \"B\" or letter == \"C\":\n        return \"{}-Left\".format(section)\n    if letter == \"D\" or letter == \"E\" or letter == \"F\":\n        return \"{}-Middle\".format(section)\n    return \"{}-Right\".format(section)"
        ],
        "4": []
    },
    "1": {
        "0": [
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 3:\n        return 'No Seat!!'\n    section = int(a[0])\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    letter = a[1]\n    if letter in ['I', 'J']:\n        return 'No Seat!!'\n    if section < 21:\n        return f'Front-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    elif section < 41:\n        return f'Middle-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'\n    else:\n        return f'Back-{{\"Left\" if \"ABC\".index(letter) < 3 else \"Right\"} *}'",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include 'I' for the sake of simplicity but remember it's omitted in real life\n    elif number <= 30:\n        seat_letter = 'K'\n    else:\n        return 'No Seat!!'\n    return '{}-{}'.format(plane_section, '{}{}'.format(seat_letter, 'Left' if 'ABC'.find(seat_letter) < 3 else 'Right'))"
        ],
        "1": [],
        "2": [],
        "3": [
            "def plane_seat(a):\n    if not a[:1].isdigit() or not a[1:].isalpha() or len(a) != 3:\n        return \"No Seat!!\"\n    if int(a[:1]) < 1 or int(a[:1]) > 60:\n        return \"No Seat!!\"\n    section = \"Front\" if int(a[:1]) <= 20 else \"Middle\" if int(a[:1]) <= 40 else \"Back\"\n    if a[1] in [\"I\", \"J\"]:\n        return \"No Seat!!\"\n    letter = a[1].upper()\n    if letter == \"A\" or letter == \"B\" or letter == \"C\":\n        return \"{}-Left\".format(section)\n    if letter == \"D\" or letter == \"E\" or letter == \"F\":\n        return \"{}-Middle\".format(section)\n    return \"{}-Right\".format(section)"
        ],
        "4": []
    },
    "2": {
        "0": [
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60:\n        return 'No Seat!!'\n    plane = (a//20)+1\n    if plane < 3:\n        plane_section = 'Front'\n    elif plane < 5:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n    number = a % 20\n    if number <= 3:\n        seat_letter = 'A'\n    elif number <= 6:\n        seat_letter = 'B'\n    elif number <= 9:\n        seat_letter = 'C'\n    elif number <= 12:\n        seat_letter = 'D'\n    elif number <= 15:\n        seat_letter = 'E'\n    elif number <= 18:\n        seat_letter = 'F'\n    elif number <= 21:\n        seat_letter = 'G'\n    elif number <= 24:\n        seat_letter = 'H'\n    elif number <= 27:\n        seat_letter = 'I'  # we include I as it's present in the problem statement\n    elif number <= 30:\n        seat_letter = 'K'  # if we include J here, we will not have K left, hence handled it separately\n    else:\n        seat_letter = 'K'\n    return '{}-{}'.format(plane_section, seat_letter if seat_letter != 'I' and seat_letter != 'J' else 'Left')",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat",
            "def plane_seat(a):\n    if a > 60 or a < 1:\n        return 'No Seat!!'\n    section = \"Front\" if a < 21 else \"Middle\" if 21 <= a < 41 else \"Back\"\n    if a < 21:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    elif 21 <= a < 41:\n        letter_to_cluster = {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    else:\n        letter_to_cluster = {'A': 'Right', 'B': 'Right', 'C': 'Right', 'D': 'Right', 'E': 'Right', 'F': 'Right', 'G': 'Right', 'H': 'Right', 'I': '', 'J': '', 'K': 'Right'}\n    seat = f'{section}-{letter_to_cluster[a%26+65]}'\n    return seat"
        ],
        "1": [],
        "2": [],
        "3": [
            "def plane_seat(a):\n    if not a[:1].isdigit() or not a[1:].isalpha() or len(a) != 3:\n        return \"No Seat!!\"\n    if int(a[:1]) < 1 or int(a[:1]) > 60:\n        return \"No Seat!!\"\n    section = \"Front\" if int(a[:1]) <= 20 else \"Middle\" if int(a[:1]) <= 40 else \"Back\"\n    if a[1] in [\"I\", \"J\"]:\n        return \"No Seat!!\"\n    letter = a[1].upper()\n    if letter == \"A\" or letter == \"B\" or letter == \"C\":\n        return \"{}-Left\".format(section)\n    if letter == \"D\" or letter == \"E\" or letter == \"F\":\n        return \"{}-Middle\".format(section)\n    return \"{}-Right\".format(section)"
        ],
        "4": []
    }
}