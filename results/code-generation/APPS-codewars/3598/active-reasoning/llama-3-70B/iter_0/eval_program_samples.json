{
    "0": {
        "0": [
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{area}-{location}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return area + '-' + location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    \n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    \n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    \n    return f'{area}-{location}'",
            "def plane_seat(a):\n    if not isinstance(a, str):\n        return 'No Seat!!'\n    num, letter = a[:-1], a[-1].upper()\n    if not num.isdigit() or not 1 <= int(num) <= 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if int(num) <= 20 else 'Middle' if int(num) <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    seat_num = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_num < 1 or seat_num > 60 or seat_letter in ['I', 'J'] or (seat_letter < 'A' or seat_letter > 'K'):\n        return 'No Seat!!'\n    if seat_num <= 20:\n        location = 'Front'\n    elif seat_num <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or not 1 <= int(section) <= 60 or letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        location = 'Front'\n    elif int(section) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABCD':\n        location += '-Left'\n    elif letter in 'EFG':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if not num.isdigit() or not 1 <= int(num) <= 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    area = 'Front' if int(num) <= 20 else 'Middle' if int(num) <= 40 else 'Back'\n    position = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{area}-{position}'",
            "def plane_seat(a):\n    section = a[:-1]\n    seat = a[-1]\n    \n    if not section.isdigit() or int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    \n    if seat not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if int(section) <= 20:\n        location = 'Front'\n    elif int(section) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n        \n    if seat in 'ABC':\n        location += '-Left'\n    elif seat in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n        \n    return location",
            "def plane_seat(a):\n    section = a[:-1]\n    seat = a[-1]\n    \n    if int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    elif seat not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    else:\n        if int(section) <= 20:\n            area = 'Front'\n        elif int(section) <= 40:\n            area = 'Middle'\n        else:\n            area = 'Back'\n            \n        if seat in 'ABC':\n            location = 'Left'\n        elif seat in 'DEF':\n            location = 'Middle'\n        else:\n            location = 'Right'\n            \n        return area + '-' + location",
            "def plane_seat(a):\n    section = a[:-1]\n    seat = a[-1]\n    if int(section) < 1 or int(section) > 60 or (seat not in ' ABCDEFGHK'):\n        return 'No Seat!!'\n    if int(section) <= 20:\n        zone = 'Front'\n    elif int(section) <= 40:\n        zone = 'Middle'\n    else:\n        zone = 'Back'\n    if seat in ' ABC':\n        location = 'Left'\n    elif seat in ' DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{zone}-{location}'",
            "def plane_seat(a):\n    section, seat = a[:-1], a[-1]\n    if not section.isdigit() or not 'A' <= seat <= 'K' or seat in 'IJ':\n        return 'No Seat!!'\n    section = int(section)\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    location = 'Front' if section <= 20 else 'Middle' if section <= 40 else 'Back'\n    seat_location = 'Left' if 'A' <= seat <= 'C' else 'Middle' if 'D' <= seat <= 'F' else 'Right'\n    return f'{location}-{seat_location}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    if int(num) <= 20:\n        section = 'Front'\n    elif int(num) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif letter in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right')\n    return location",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 2:\n        return 'No Seat!!'\n    seat_number = a[0]\n    seat_letter = a[1]\n    if not seat_number.isdigit() or int(seat_number) < 1 or int(seat_number) > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if int(seat_number) <= 20:\n        location = 'Front'\n    elif int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if not seat_number.isdigit() or int(seat_number) < 1 or int(seat_number) > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    if int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1].upper()\n    \n    if not seat_number.isdigit() or int(seat_number) > 60:\n        return 'No Seat!!'\n    \n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if int(seat_number) <= 20:\n        location = 'Front'\n    elif int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    num = int(''.join(filter(str.isdigit, a)))\n    let = ''.join(filter(str.isalpha, a))\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if let not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if let in 'ABC':\n        location = 'Left'\n    elif let in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return section + '-' + location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha():\n        return 'No Seat!!'\n    if int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        location = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return '{}-{}'.format(section, location)",
            "def plane_seat(a):\n    num, lett = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or lett not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    loc = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    side = 'Left' if lett in 'AC' else 'Middle' if lett in 'DF' else 'Right'\n    return '{}-{}'.format(loc, side)"
        ],
        "1": [
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    section_location = 'Front' if section <= 20 else 'Middle' if section <= 40 else 'Back'\n    letter_location = 'Left' if letter in ['A', 'B', 'C'] else 'Middle' if letter in ['D', 'E', 'F'] else 'Right'\n    return f'{section_location}-{letter_location}'",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or not 1 <= int(section) <= 60 or letter in 'IJ':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        location = 'Front'\n    elif int(section) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    \n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    \n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    \n    return f'{area}-{location}'",
            "def plane_seat(a):\n    seat_num = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_num < 1 or seat_num > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n    else:\n        if seat_num <= 20:\n            location = 'Front'\n        elif seat_num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if seat_letter in ['A', 'B', 'C']:\n            location += '-Left'\n        elif seat_letter in ['D', 'E', 'F']:\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60 or letter in 'IJ':\n        return \"No Seat!!\"\n    section = \"Front\" if int(num) <= 20 else \"Middle\" if int(num) <= 40 else \"Back\"\n    location = \"Left\" if letter in 'ABC' else \"Middle\" if letter in 'DEF' else \"Right\"\n    return f\"{section}-{location}\"",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60:\n        return \"No Seat!!\"\n    if letter in 'IJ':\n        return \"No Seat!!\"\n    section = 'Front' if int(num) <= 20 else 'Middle' if int(num) <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f\"{section}-{cluster}\"",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        plane_section = 'Front'\n    elif section <= 40:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n        \n    if letter in 'ABC':\n        seat_location = 'Left'\n    elif letter in 'DEF':\n        seat_location = 'Middle'\n    else:\n        seat_location = 'Right'\n        \n    return f'{plane_section}-{seat_location}'",
            "def plane_seat(a):\n    section = a[:-1]\n    seat = a[-1]\n    \n    if not section.isdigit() or int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    \n    if seat not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if int(section) <= 20:\n        location = 'Front'\n    elif int(section) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat in 'ABC':\n        location += '-Left'\n    elif seat in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1]\n    \n    if int(section) < 1 or int(section) > 60:\n        return \"No Seat!!\"\n    if letter.upper() in ['I', 'J']:\n        return \"No Seat!!\"\n    \n    section_location = 'Front' if int(section) <= 20 else 'Middle' if int(section) <= 40 else 'Back'\n    letter_location = 'Left' if letter.upper() in ['A', 'B', 'C'] else 'Middle' if letter.upper() in ['D', 'E', 'F'] else 'Right'\n    \n    return f\"{section_location}-{letter_location}\"",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1]\n    if int(section) < 1 or int(section) > 60 or (letter not in ' ABCDEFGHK'):\n        return 'No Seat!!'\n    if int(section) <= 20:\n        zone = 'Front'\n    elif int(section) <= 40:\n        zone = 'Middle'\n    else:\n        zone = 'Back'\n    if letter in ' ABC':\n        position = 'Left'\n    elif letter in 'DF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    return zone + '-' + position",
            "def plane_seat(a):\n    section, seat = a[:-1], a[-1]\n    if int(section) > 60 or seat in 'IJ':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        location = 'Front-'\n    elif int(section) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if seat in 'ABC':\n        location += 'Left'\n    elif seat in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    if section <= 20:\n        location = 'Front-'\n    elif section <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    \n    if letter in ['A', 'B', 'C']:\n        location += 'Left'\n    elif letter in ['D', 'E', 'F']:\n        location += 'Middle'\n    else:\n        location += 'Right'\n        \n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60:\n        return \"No Seat!!\"\n    if letter not in \" ABCDEFGHK\":\n        return \"No Seat!!\"\n    if section <= 20:\n        location = \"Front-\"\n    elif section <= 40:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if letter in \"ABCDEFG\":\n        location += \"Left\"\n    elif letter in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n        \n    if seat_letter in 'ABC':\n        location = 'Left'\n    elif seat_letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n        \n    return section + '-' + location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n\n    if not (1 <= num <= 60) or letter in 'IJ':\n        return 'No Seat!!'\n\n    area = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n\n    return f'{area}-{cluster}'",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    elif int(num) <= 20:\n        area = 'Front'\n    elif int(num) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{area}-{location}'",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not seat_number.isdigit():\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        position = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        position = 'Middle'\n    else:\n        position = 'Right'\n    return section + '-' + position",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or (seat_letter.upper() not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        location = 'Front-'\n    elif 21 <= int(seat_number) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if seat_letter.upper() in 'ABC':\n        location += 'Left'\n    elif seat_letter.upper() in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    \n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGKLMNOP\":\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        section = \"Front\"\n    elif num <= 40:\n        section = \"Middle\"\n    else:\n        section = \"Back\"\n    \n    if letter in \"AC\":\n        location = \"Left\"\n    elif letter in \"DF\":\n        location = \"Middle\"\n    else:\n        location = \"Right\"\n    \n    return f\"{section}-{location}\"",
            "def plane_seat(a):\n    sections = {'1-20': 'Front', '21-40': 'Middle', '41-60': 'Back'}\n    clusters = {'A-C': 'Left', 'D-F': 'Middle', 'G-K': 'Right'}\n    try:\n        num, letter = int(a[:-1]), a[-1].upper()\n        if not 1 <= num <= 60:\n            return 'No Seat!!'\n        if letter not in 'ABCDEFGHK':\n            return 'No Seat!!'\n        for section, name in sections.items():\n            if num in range(int(section.split('-')[0]), int(section.split('-')[1]) + 1):\n                section_name = name\n                break\n        for cluster, cluster_name in clusters.items():\n            if letter in cluster:\n                cluster_name = cluster_name\n                break\n        return section_name + '-' + cluster_name\n    except ValueError:\n        return 'No Seat!!'"
        ],
        "2": [
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if not num.isdigit() or not 1 <= int(num) <= 60 or letter in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if int(num) <= 20 else 'Middle' if int(num) <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if not num.isdigit() or not 1 <= int(num) <= 60 or letter in 'IJ':\n        return 'No Seat!!'\n    if int(num) <= 20:\n        section = 'Front'\n    elif int(num) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        cluster = 'Left'\n    elif letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return section + '-' + cluster",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    elif section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif letter in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return f'{area}-{cluster}'",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if not num.isdigit() or int(num) < 1 or int(num) > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    if int(num) <= 20:\n        section = 'Front'\n    elif int(num) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        cluster = 'Left'\n    elif letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60:\n        return \"No Seat!!\"\n    if letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    if int(num) <= 20:\n        area = 'Front'\n    elif int(num) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return area + '-' + location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) > 60:\n        return \"No Seat!!\"\n    if letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter in 'ABC':\n        loc = 'Left'\n    elif letter in 'DEF':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return f\"{area}-{loc}\"",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60 or letter in 'IJ':\n        return \"No Seat!!\"\n    if int(num) <= 20:\n        zone = \"Front\"\n    elif int(num) <= 40:\n        zone = \"Middle\"\n    else:\n        zone = \"Back\"\n    if letter in 'ABC':\n        loc = \"Left\"\n    elif letter in 'DEF':\n        loc = \"Middle\"\n    else:\n        loc = \"Right\"\n    return \"{}-{}\".format(zone, loc)",
            "def plane_seat(a):\n    number = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if number < 1 or number > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    \n    if number <= 20:\n        position = 'Front'\n    elif number <= 40:\n        position = 'Middle'\n    else:\n        position = 'Back'\n    \n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    \n    return f'{position}-{location}'",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) < 1 or int(section) > 60 or letter in 'IJij':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        section_str = 'Front'\n    elif int(section) <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n    if letter.upper() in 'ABC':\n        letter_str = 'Left'\n    elif letter.upper() in 'DEF':\n        letter_str = 'Middle'\n    else:\n        letter_str = 'Right'\n    return '{}-{}'.format(section_str, letter_str)",
            "def plane_seat(a):\n    section = a[:-1]\n    seat = a[-1]\n    if int(section) < 1 or int(section) > 60 or (seat.upper() not in ' ABCDEFGHK'):\n        return 'No Seat!!'\n    else:\n        if int(section) <= 20:\n            location = 'Front-'\n        elif int(section) <= 40:\n            location = 'Middle-'\n        else:\n            location = 'Back-'\n        if seat.upper() in 'ABC':\n            location += 'Left'\n        elif seat.upper() in 'DEF':\n            location += 'Middle'\n        else:\n            location += 'Right'\n        return location",
            "def plane_seat(a):\n    section, seat = a[:-1], a[-1]\n    if int(section) > 60 or seat in 'IJ':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if seat in 'ABC':\n        location = 'Left'\n    elif seat in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return area + '-' + location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if not num.isdigit() or not 1 <= int(num) <= 60 or letter in 'IJ':\n        return 'No Seat!!'\n    if int(num) <= 20:\n        location = 'Front-'\n    elif int(num) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) > 60 or letter in 'IJ' or not 'A' <= letter <= 'K':\n        return \"No Seat!!\"\n    if int(num) <= 20:\n        location = \"Front\"\n    elif int(num) <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    if 'A' <= letter <= 'C':\n        location += \"-Left\"\n    elif 'D' <= letter <= 'F':\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    \n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        location = \"Front\"\n    elif num <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    \n    if letter in \"ABC\":\n        location += \"-Left\"\n    elif letter in \"DEF\":\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n    \n    return location",
            "def plane_seat(a):\n    num = int(''.join(filter(str.isdigit, a)))\n    letter = ''.join(filter(str.isalpha, a))\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return '{}-{}'.format(section, location)",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num > 60 or lett in ['I', 'J']:\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        section = \"Front\"\n    elif num <= 40:\n        section = \"Middle\"\n    else:\n        section = \"Back\"\n        \n    if lett in ['A', 'B', 'C']:\n        cluster = \"Left\"\n    elif lett in ['D', 'E', 'F']:\n        cluster = \"Middle\"\n    else:\n        cluster = \"Right\"\n        \n    return section + \"-\" + cluster",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not seat_number.isdigit():\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        position = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        position = 'Middle'\n    else:\n        position = 'Right'\n    return f'{section}-{position}'",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or (seat_letter.upper() not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        location = 'Front'\n    elif 21 <= int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter.upper() in 'ABC':\n        location += '-Left'\n    elif seat_letter.upper() in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if lett not in \" ABCDEFGHK\":\n        return \"No Seat!!\"\n    if num < 21:\n        location = \"Front-\"\n    elif num < 41:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if lett in \"ABCDEFG\":\n        location += \"Left\"\n    elif lett in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    let = a[-1]\n    if num > 60 or (let not in 'ABCDEFGK' and let not in 'abcdefgk'):\n        return 'No Seat!!'\n    elif num <= 20:\n        area = 'Front'\n    elif num <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if let in 'ABCabc':\n        loc = 'Left'\n    elif let in 'DFdf':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return f'{area}-{loc}'"
        ],
        "3": [
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1].upper()\n    if not num.isdigit() or not 1 <= int(num) <= 60 or letter in ['I', 'J'] or not 'A' <= letter <= 'K':\n        return 'No Seat!!'\n    location = 'Front' if int(num) <= 20 else 'Middle' if int(num) <= 40 else 'Back'\n    cluster = 'Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    number = int(a[:-1])\n    letter = a[-1]\n    if number < 1 or number > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    location = 'Front' if number <= 20 else 'Middle' if number <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if 'A' <= letter <= 'C':\n        position = 'Left'\n    elif 'D' <= letter <= 'F':\n        position = 'Middle'\n    elif 'G' <= letter <= 'K':\n        position = 'Right'\n    else:\n        return 'No Seat!!'\n    return area + '-' + position",
            "def plane_seat(a):\n    if len(a) != 2 or not a[0].isdigit() or not a[1].isalpha():\n        return 'No Seat!!'\n    num = int(a[0])\n    letter = a[1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in ['A', 'B', 'C']:\n        loc = 'Left'\n    elif letter in ['D', 'E', 'F']:\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return f'{section}-{loc}'",
            "def plane_seat(a):\n    seat_num = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_num < 1 or seat_num > 60 or seat_letter in ['I', 'J'] or seat_letter < 'A' or seat_letter > 'K':\n        return 'No Seat!!'\n    elif seat_num <= 20:\n        section = 'Front'\n    elif seat_num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter <= 'C':\n        location = 'Left'\n    elif seat_letter <= 'F':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{section}-{location}'",
            "def plane_seat(a):\n    number = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if number < 1 or number > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    \n    if number <= 20:\n        position = 'Front'\n    elif number <= 40:\n        position = 'Middle'\n    else:\n        position = 'Back'\n    \n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    \n    return f'{position}-{location}'",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1]\n    \n    if int(section) < 1 or int(section) > 60:\n        return \"No Seat!!\"\n    if letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n        \n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n        \n    return f\"{area}-{location}\"",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    \n    if int(section) > 60 or letter in ['I', 'J'] or letter < 'A' or letter > 'K':\n        return 'No Seat!!'\n    \n    if int(section) <= 20:\n        plane_section = 'Front'\n    elif int(section) <= 40:\n        plane_section = 'Middle'\n    else:\n        plane_section = 'Back'\n        \n    if 'A' <= letter <= 'C':\n        seat_cluster = 'Left'\n    elif 'D' <= letter <= 'F':\n        seat_cluster = 'Middle'\n    else:\n        seat_cluster = 'Right'\n        \n    return f'{plane_section}-{seat_cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    let = a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ' or (let < 'A' or let > 'K'):\n        return 'No Seat!!'\n    if num <= 20:\n        area = 'Front'\n    elif num <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if let in 'ABC':\n        loc = 'Left'\n    elif let in 'DEF':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return area + '-' + loc",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in 'IJ' or seat_letter < 'A' or seat_letter > 'K':\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        if seat_letter in 'ABC':\n            return 'Front-Left'\n        elif seat_letter in 'DF':\n            return 'Front-Middle'\n        else:\n            return 'Front-Right'\n    elif int(seat_number) <= 40:\n        if seat_letter in 'ABC':\n            return 'Middle-Left'\n        elif seat_letter in 'DF':\n            return 'Middle-Middle'\n        else:\n            return 'Middle-Right'\n    else:\n        if seat_letter in 'ABC':\n            return 'Back-Left'\n        elif seat_letter in 'DF':\n            return 'Back-Middle'\n        else:\n            return 'Back-Right'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    \n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        location = \"Front\"\n    elif num <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    \n    if letter in \"ABC\":\n        location += \"-Left\"\n    elif letter in \"DEF\":\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n    \n    return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return \"No Seat!!\"\n    elif int(num) <= 20:\n        area = \"Front\"\n    elif int(num) <= 40:\n        area = \"Middle\"\n    else:\n        area = \"Back\"\n    if letter in 'ABC':\n        location = \"Left\"\n    elif letter in 'DEF':\n        location = \"Middle\"\n    else:\n        location = \"Right\"\n    return area + \"-\" + location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or (seat_letter.upper() not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        location = 'Front'\n    elif 21 <= int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter.upper() in 'ABC':\n        location += '-Left'\n    elif seat_letter.upper() in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    section, seat = a[:-1], a[-1]\n    if int(section) > 60 or seat in 'IJZ':\n        return 'No Seat!!'\n    elif int(section) <= 20:\n        location = 'Front'\n    elif int(section) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat in 'ABC':\n        return location + '-Left'\n    elif seat in 'DEF':\n        return location + '-Middle'\n    else:\n        return location + '-Right'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num < 1 or num > 60 or lett in ['I', 'J'] or (lett < 'A' or lett > 'K'):\n        return 'No Seat!!'\n    \n    if num <= 20:\n        location = 'Front'\n    elif num <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if lett in ['A', 'B', 'C']:\n        location += '-Left'\n    elif lett in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n        \n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if lett not in \" ABCDEFGHK\":\n        return \"No Seat!!\"\n    if num < 21:\n        location = \"Front-\"\n    elif num < 41:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if lett in \"ABCDEFG\":\n        location += \"Left\"\n    elif lett in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front-'\n    elif section <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or (seat_letter < 'A' or seat_letter > 'K'):\n        return 'No Seat!!'\n    elif seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right')\n    return location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    if letter.upper() not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter.upper() in 'ABC':\n        location = 'Left'\n    elif letter.upper() in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{area}-{location}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    \n    if int(seat_number) < 1 or int(seat_number) > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n        \n    section = 'Front' if int(seat_number) <= 20 else 'Middle' if int(seat_number) <= 40 else 'Back'\n    cluster = 'Left' if seat_letter in 'ABC' else 'Middle' if seat_letter in 'DEF' else 'Right'\n    \n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    if len(a) != 2 or not a[0].isdigit() or int(a[0]) > 60 or not a[1].isalpha() or a[1] in ['I', 'J']:\n        return \"No Seat!!\"\n    section = \"Front\" if int(a[0]) <= 20 else \"Middle\" if int(a[0]) <= 40 else \"Back\"\n    cluster = \"Left\" if a[1] in ['A', 'B', 'C'] else \"Middle\" if a[1] in ['D', 'E', 'F'] else \"Right\"\n    return f\"{section}-{cluster}\"",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        section_str = 'Front'\n    elif section <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n        \n    if letter in 'ABCDEFG':\n        letter_str = 'Left'\n    elif letter in 'DEFG':\n        letter_str = 'Middle'\n    else:\n        letter_str = 'Right'\n        \n    return f'{section_str}-{letter_str}'"
        ],
        "4": [
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if 'A' <= letter <= 'C':\n        cluster = 'Left'\n    elif 'D' <= letter <= 'F':\n        cluster = 'Middle'\n    elif 'G' <= letter <= 'K':\n        cluster = 'Right'\n    else:\n        return 'No Seat!!'\n    return area + '-' + cluster",
            "def plane_seat(a):\n    number = int(a[:-1])\n    letter = a[-1]\n    if number < 1 or number > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    location = 'Front' if number <= 20 else 'Middle' if number <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60:\n        return \"No Seat!!\"\n    if letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    area = 'Front' if int(num) <= 20 else 'Middle' if int(num) <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f\"{area}-{cluster}\"",
            "def plane_seat(a):\n    seat_num = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_num < 1 or seat_num > 60 or seat_letter in ['I', 'J'] or seat_letter < 'A' or seat_letter > 'K':\n        return 'No Seat!!'\n    elif seat_num <= 20:\n        section = 'Front'\n    elif seat_num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter <= 'C':\n        location = 'Left'\n    elif seat_letter <= 'F':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{section}-{location}'",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) < 1 or int(section) > 60 or letter in 'IJZ' or (letter < 'A' or letter > 'K'):\n        return \"No Seat!!\"\n    if int(section) <= 20:\n        loc = 'Front'\n    elif int(section) <= 40:\n        loc = 'Middle'\n    else:\n        loc = 'Back'\n    if letter in 'ABC':\n        loc += '-Left'\n    elif letter in 'DEF':\n        loc += '-Middle'\n    else:\n        loc += '-Right'\n    return loc",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    if not section.isdigit() or int(section) > 60 or (letter not in ' ABCDEFGHK'):\n        return 'No Seat!!'\n    if int(section) <= 20:\n        loc = 'Front'\n    elif int(section) <= 40:\n        loc = 'Middle'\n    else:\n        loc = 'Back'\n    if letter in 'ABCD':\n        loc += '-Left'\n    elif letter in 'EFG':\n        loc += '-Middle'\n    else:\n        loc += '-Right'\n    return loc",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1]\n    if int(section) < 1 or int(section) > 60 or (letter not in ' ABCDEFGHK'):\n        return 'No Seat!!'\n    if int(section) <= 20:\n        zone = 'Front'\n    elif int(section) <= 40:\n        zone = 'Middle'\n    else:\n        zone = 'Back'\n    if letter in ' ABC':\n        position = 'Left'\n    elif letter in 'DF':\n        position = 'Middle'\n    else:\n        position = 'Right'\n    return f'{zone}-{position}'",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in 'IJ' or seat_letter < 'A' or seat_letter > 'K':\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        if seat_letter in 'ABC':\n            return 'Front-Left'\n        elif seat_letter in 'DF':\n            return 'Front-Middle'\n        else:\n            return 'Front-Right'\n    elif int(seat_number) <= 40:\n        if seat_letter in 'ABC':\n            return 'Middle-Left'\n        elif seat_letter in 'DF':\n            return 'Middle-Middle'\n        else:\n            return 'Middle-Right'\n    else:\n        if seat_letter in 'ABC':\n            return 'Back-Left'\n        elif seat_letter in 'DF':\n            return 'Back-Middle'\n        else:\n            return 'Back-Right'",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return \"No Seat!!\"\n    elif int(num) <= 20:\n        area = \"Front\"\n    elif int(num) <= 40:\n        area = \"Middle\"\n    else:\n        area = \"Back\"\n    if letter in 'ABC':\n        location = \"Left\"\n    elif letter in 'DEF':\n        location = \"Middle\"\n    else:\n        location = \"Right\"\n    return area + \"-\" + location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n\n    if not (1 <= num <= 60) or letter in 'IJ' or not 'A' <= letter <= 'K':\n        return 'No Seat!!'\n\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right')\n\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    \n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        location = \"Front\"\n    elif num <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    \n    if letter in \"ABC\":\n        location += \"-Left\"\n    elif letter in \"DEF\":\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n    \n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or (seat_letter.upper() not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        location = 'Front-'\n    elif 21 <= int(seat_number) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if seat_letter.upper() in 'ABC':\n        location += 'Left'\n    elif seat_letter.upper() in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if lett not in \" ABCDEFGHK\":\n        return \"No Seat!!\"\n    if num < 21:\n        location = \"Front-\"\n    elif num < 41:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if lett in \"ABCDEFG\":\n        location += \"Left\"\n    elif lett in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1].upper()\n    \n    if not seat_number.isdigit() or int(seat_number) > 60:\n        return \"No Seat!!\"\n    \n    if seat_letter not in \"ABCDFGK\":\n        return \"No Seat!!\"\n    \n    seat_location = \"\"\n    if 1 <= int(seat_number) <= 20:\n        seat_location += \"Front-\"\n    elif 21 <= int(seat_number) <= 40:\n        seat_location += \"Middle-\"\n    else:\n        seat_location += \"Back-\"\n    \n    if seat_letter in \"ABC\":\n        seat_location += \"Left\"\n    elif seat_letter in \"DF\":\n        seat_location += \"Middle\"\n    else:\n        seat_location += \"Right\"\n    \n    return seat_location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or (seat_letter < 'A' or seat_letter > 'K'):\n        return 'No Seat!!'\n    elif seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front-'\n    elif section <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right')\n    return location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) > 60 or letter in 'IJ' or letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    section = 'Front' if int(section) <= 20 else 'Middle' if int(section) <= 40 else 'Back'\n    location = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f\"{section}-{location}\"",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if 'A' <= seat_letter <= 'C':\n        location += '-Left'\n    elif 'D' <= seat_letter <= 'F':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or (seat_letter < 'A' or seat_letter > 'K'):\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n        \n    if 'A' <= seat_letter <= 'C':\n        location = 'Left'\n    elif 'D' <= seat_letter <= 'F':\n        location = 'Middle'\n    else:\n        location = 'Right'\n        \n    return f'{section}-{location}'",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        section_str = 'Front'\n    elif section <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n        \n    if letter in 'ABCDEFG':\n        letter_str = 'Left'\n    elif letter in 'DEFG':\n        letter_str = 'Middle'\n    else:\n        letter_str = 'Right'\n        \n    return section_str + '-' + letter_str",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1].upper()\n    if not section.isdigit() or int(section) > 60 or not ('A' <= letter <= 'K' and letter not in 'IJ'):\n        return 'No Seat!!'\n    section = 'Front' if int(section) <= 20 else 'Middle' if int(section) <= 40 else 'Back'\n    letter = 'Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right'\n    return f'{section}-{letter}'"
        ]
    },
    "1": {
        "0": [
            "def plane_seat(a):\n    section, seat = a[:-1], a[-1]\n    if not section.isdigit() or not 'A' <= seat <= 'K' or seat in 'IJ':\n        return 'No Seat!!'\n    section = int(section)\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    location = 'Front' if section <= 20 else 'Middle' if section <= 40 else 'Back'\n    seat_location = 'Left' if 'A' <= seat <= 'C' else 'Middle' if 'D' <= seat <= 'F' else 'Right'\n    return f'{location}-{seat_location}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    if int(num) <= 20:\n        section = 'Front'\n    elif int(num) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif letter in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right')\n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHIK'):\n        return 'No Seat!!'\n    \n    if section <= 20:\n        location = 'Front-'\n    elif section <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    \n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    \n    return location",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 2:\n        return 'No Seat!!'\n    seat_number = a[0]\n    seat_letter = a[1]\n    if not seat_number.isdigit() or int(seat_number) < 1 or int(seat_number) > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if int(seat_number) <= 20:\n        location = 'Front'\n    elif int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if not seat_number.isdigit() or int(seat_number) < 1 or int(seat_number) > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    if int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    num = int(''.join(filter(str.isdigit, a)))\n    let = ''.join(filter(str.isalpha, a))\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if let not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if let in 'ABC':\n        location = 'Left'\n    elif let in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return section + '-' + location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1].upper()\n    \n    if not seat_number.isdigit() or int(seat_number) > 60:\n        return 'No Seat!!'\n    \n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if int(seat_number) <= 20:\n        location = 'Front'\n    elif int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha():\n        return 'No Seat!!'\n    if int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        location = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return '{}-{}'.format(section, location)",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1]\n    if int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        location = 'Front-'\n    elif int(section) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if seat_number <= 20 else 'Middle' if seat_number <= 40 else 'Back'\n    cluster = 'Left' if seat_letter in 'ABC' else 'Middle' if seat_letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if not 1 <= num <= 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    section = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or letter in ['I', 'J'] or not 'A' <= letter <= 'K':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    \n    if 'A' <= letter <= 'C':\n        location = 'Left'\n    elif 'D' <= letter <= 'F':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    \n    return f'{area}-{location}'",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1]\n    if not section.isdigit() or int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDFGK':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        location = 'Front-'\n    elif int(section) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    \n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front-'\n    elif seat_number <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n        \n    if seat_letter in 'ABC':\n        location += 'Left'\n    elif seat_letter in 'DF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n        \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    elif seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    else:\n        if seat_number <= 20:\n            location = 'Front-'\n        elif seat_number <= 40:\n            location = 'Middle-'\n        else:\n            location = 'Back-'\n        \n        if seat_letter in 'ABC':\n            location += 'Left'\n        elif seat_letter in 'DF':\n            location += 'Middle'\n        else:\n            location += 'Right'\n        \n        return location",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1].upper()\n    if not section.isdigit() or not 1 <= int(section) <= 60 or letter in ['I', 'J'] or not 'A' <= letter <= 'K':\n        return 'No Seat!!'\n    elif int(section) <= 20:\n        location = 'Front'\n    elif int(section) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if 'A' <= letter <= 'C':\n        location += '-Left'\n    elif 'D' <= letter <= 'F':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    section = int(''.join(filter(str.isdigit, a)))\n    letter = ''.join(filter(str.isalpha, a)).upper()\n\n    if section < 1 or section > 60 or letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    elif section <= 20:\n        seat_location = 'Front-'\n    elif section <= 40:\n        seat_location = 'Middle-'\n    else:\n        seat_location = 'Back-'\n\n    if letter in 'ABC':\n        seat_location += 'Left'\n    elif letter in 'DEF':\n        seat_location += 'Middle'\n    else:\n        seat_location += 'Right'\n\n    return seat_location"
        ],
        "1": [
            "def plane_seat(a):\n    section, seat = a[:-1], a[-1]\n    if int(section) > 60 or seat in 'IJ':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        location = 'Front-'\n    elif int(section) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if seat in 'ABC':\n        location += 'Left'\n    elif seat in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    if section <= 20:\n        location = 'Front-'\n    elif section <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    \n    if letter in ['A', 'B', 'C']:\n        location += 'Left'\n    elif letter in ['D', 'E', 'F']:\n        location += 'Middle'\n    else:\n        location += 'Right'\n        \n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60:\n        return \"No Seat!!\"\n    if letter not in \" ABCDEFGHK\":\n        return \"No Seat!!\"\n    if section <= 20:\n        location = \"Front-\"\n    elif section <= 40:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if letter in \"ABCDEFG\":\n        location += \"Left\"\n    elif letter in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n        \n    if seat_letter in 'ABC':\n        location = 'Left'\n    elif seat_letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n        \n    return section + '-' + location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n\n    if not (1 <= num <= 60) or letter in 'IJ':\n        return 'No Seat!!'\n\n    area = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n\n    return f'{area}-{cluster}'",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    elif int(num) <= 20:\n        area = 'Front'\n    elif int(num) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{area}-{location}'",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or (seat_letter.upper() not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        location = 'Front-'\n    elif 21 <= int(seat_number) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if seat_letter.upper() in 'ABC':\n        location += 'Left'\n    elif seat_letter.upper() in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not seat_number.isdigit():\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        position = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        position = 'Middle'\n    else:\n        position = 'Right'\n    return section + '-' + position",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    \n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGKLMNOP\":\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        section = \"Front\"\n    elif num <= 40:\n        section = \"Middle\"\n    else:\n        section = \"Back\"\n    \n    if letter in \"AC\":\n        location = \"Left\"\n    elif letter in \"DF\":\n        location = \"Middle\"\n    else:\n        location = \"Right\"\n    \n    return f\"{section}-{location}\"",
            "def plane_seat(a):\n    sections = {'1-20': 'Front', '21-40': 'Middle', '41-60': 'Back'}\n    clusters = {'A-C': 'Left', 'D-F': 'Middle', 'G-K': 'Right'}\n    try:\n        num, letter = int(a[:-1]), a[-1].upper()\n        if not 1 <= num <= 60:\n            return 'No Seat!!'\n        if letter not in 'ABCDEFGHK':\n            return 'No Seat!!'\n        for section, name in sections.items():\n            if num in range(int(section.split('-')[0]), int(section.split('-')[1]) + 1):\n                section_name = name\n                break\n        for cluster, cluster_name in clusters.items():\n            if letter in cluster:\n                cluster_name = cluster_name\n                break\n        return section_name + '-' + cluster_name\n    except ValueError:\n        return 'No Seat!!'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n\n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n\n    if seat_letter in ['A', 'B', 'C']:\n        location = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location = 'Middle'\n    else:\n        location = 'Right'\n\n    return f'{section}-{location}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n        \n    location = \"\"\n    if seat_number <= 20:\n        location += \"Front-\"\n    elif seat_number <= 40:\n        location += \"Middle-\"\n    else:\n        location += \"Back-\"\n        \n    if seat_letter in \"ABC\":\n        location += \"Left\"\n    elif seat_letter in \"DEF\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n        \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    location_number = ''\n    if seat_number <= 20:\n        location_number = 'Front'\n    elif seat_number <= 40:\n        location_number = 'Middle'\n    else:\n        location_number = 'Back'\n        \n    location_letter = ''\n    if seat_letter in ['A', 'B', 'C']:\n        location_letter = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location_letter = 'Middle'\n    else:\n        location_letter = 'Right'\n        \n    return f'{location_number}-{location_letter}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n        \n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return \"No Seat!!\"\n    if letter not in ' ABCDEFGHK':\n        return \"No Seat!!\"\n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1].upper()\n    if not section.isdigit() or int(section) > 60 or not ('A' <= letter <= 'K' and letter not in 'IJ'):\n        return 'No Seat!!'\n    section_name = 'Front' if int(section) <= 20 else 'Middle' if int(section) <= 40 else 'Back'\n    letter_name = 'Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right'\n    return f'{section_name}-{letter_name}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        section_str = 'Front'\n    elif section <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n        \n    if letter in 'ABCDEFG':\n        letter_str = 'Left'\n    elif letter in 'DEFG':\n        letter_str = 'Middle'\n    else:\n        letter_str = 'Right'\n        \n    return f'{section_str}-{letter_str}'",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n\n    if section < 1 or section > 60 or letter in 'IJ':\n        return 'No Seat!!'\n\n    location = 'Front' if section <= 20 else 'Middle' if section <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter in ['A', 'B', 'C']:\n            location += '-Left'\n        elif letter in ['D', 'E', 'F']:\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n\n    if seat_number > 60 or seat_letter in ['I', 'J'] or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n\n    if 'A' <= seat_letter <= 'C':\n        position = 'Left'\n    elif 'D' <= seat_letter <= 'F':\n        position = 'Middle'\n    else:\n        position = 'Right'\n\n    return f'{location}-{position}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    area = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location = 'Left' if letter in ['A', 'B', 'C'] else 'Middle' if letter in ['D', 'E', 'F'] else 'Right'\n    return area + '-' + location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num < 1 or num > 60 or lett in ['I', 'J']:\n        return 'No Seat!!'\n    \n    section = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if lett in ['A', 'B', 'C'] else 'Middle' if lett in ['D', 'E', 'F'] else 'Right'\n    \n    return section + '-' + cluster",
            "def plane_seat(a):\n    num, let = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    side = 'Left' if let in 'ABC' else 'Middle' if let in 'DEF' else 'Right'\n    return f'{location}-{side}'",
            "def plane_seat(a):\n    sections = {'1-20': 'Front', '21-40': 'Middle', '41-60': 'Back'}\n    clusters = {'A-C': 'Left', 'D-F': 'Middle', 'G-K': 'Right'}\n    num, letter = a[:-1], a[-1].upper()\n    if int(num) > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    for section, loc in sections.items():\n        if int(num) in range(int(section.split('-')[0]), int(section.split('-')[1]) + 1):\n            for cluster, direction in clusters.items():\n                if letter in cluster:\n                    return loc + '-' + direction\n    return 'No Seat!!'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        seat_location = location + '-Left'\n    elif letter in 'DEF':\n        seat_location = location + '-Middle'\n    else:\n        seat_location = location + '-Right'\n    \n    return seat_location"
        ],
        "2": [
            "def plane_seat(a):\n    section, seat = a[:-1], a[-1]\n    if int(section) > 60 or seat in 'IJ':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if seat in 'ABC':\n        location = 'Left'\n    elif seat in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return area + '-' + location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if not num.isdigit() or not 1 <= int(num) <= 60 or letter in 'IJ':\n        return 'No Seat!!'\n    if int(num) <= 20:\n        location = 'Front-'\n    elif int(num) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    \n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        location = \"Front\"\n    elif num <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    \n    if letter in \"ABC\":\n        location += \"-Left\"\n    elif letter in \"DEF\":\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n    \n    return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) > 60 or letter in 'IJ' or not 'A' <= letter <= 'K':\n        return \"No Seat!!\"\n    if int(num) <= 20:\n        location = \"Front\"\n    elif int(num) <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    if 'A' <= letter <= 'C':\n        location += \"-Left\"\n    elif 'D' <= letter <= 'F':\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n    return location",
            "def plane_seat(a):\n    num = int(''.join(filter(str.isdigit, a)))\n    letter = ''.join(filter(str.isalpha, a))\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return '{}-{}'.format(section, location)",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not seat_number.isdigit():\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    let = a[-1]\n    if num > 60 or let in 'IJ' or let not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    elif num <= 20:\n        location = 'Front-'\n    elif num <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if let in 'ABC':\n        location += 'Left'\n    elif let in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or (seat_letter.upper() not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        location = 'Front'\n    elif 21 <= int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter.upper() in 'ABC':\n        location += '-Left'\n    elif seat_letter.upper() in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num > 60 or lett in ['I', 'J']:\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        section = \"Front\"\n    elif num <= 40:\n        section = \"Middle\"\n    else:\n        section = \"Back\"\n        \n    if lett in ['A', 'B', 'C']:\n        cluster = \"Left\"\n    elif lett in ['D', 'E', 'F']:\n        cluster = \"Middle\"\n    else:\n        cluster = \"Right\"\n    \n    return section + \"-\" + cluster",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if lett not in \" ABCDEFGHK\":\n        return \"No Seat!!\"\n    if num < 21:\n        location = \"Front-\"\n    elif num < 41:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if lett in \"ABCDEFG\":\n        location += \"Left\"\n    elif lett in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or letter in ['I', 'J']:\n        return \"No Seat!!\"\n    elif section <= 20:\n        if letter in ['A', 'B', 'C']:\n            return \"Front-Left\"\n        elif letter in ['D', 'E', 'F']:\n            return \"Front-Middle\"\n        else:\n            return \"Front-Right\"\n    elif section <= 40:\n        if letter in ['A', 'B', 'C']:\n            return \"Middle-Left\"\n        elif letter in ['D', 'E', 'F']:\n            return \"Middle-Middle\"\n        else:\n            return \"Middle-Right\"\n    else:\n        if letter in ['A', 'B', 'C']:\n            return \"Back-Left\"\n        elif letter in ['D', 'E', 'F']:\n            return \"Back-Middle\"\n        else:\n            return \"Back-Right\"",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) > 60 or letter in 'IJ':\n        return \"No Seat!!\"\n    section = \"Front\" if int(section) <= 20 else \"Middle\" if int(section) <= 40 else \"Back\"\n    location = \"Left\" if letter in 'ABC' else \"Middle\" if letter in 'DEF' else \"Right\"\n    return f\"{section}-{location}\"",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in ['A', 'B', 'C']:\n        location = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location = 'Middle'\n    else:\n        location = 'Right'\n    \n    return f'{section}-{location}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_num = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_num < 1 or seat_num > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n    if seat_num <= 20:\n        section = 'Front'\n    elif seat_num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    return f\"{section}-{cluster}\"",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    location_number = ''\n    if seat_number <= 20:\n        location_number = 'Front'\n    elif seat_number <= 40:\n        location_number = 'Middle'\n    else:\n        location_number = 'Back'\n        \n    location_letter = ''\n    if seat_letter in ['A', 'B', 'C']:\n        location_letter = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location_letter = 'Middle'\n    else:\n        location_letter = 'Right'\n        \n    return location_number + '-' + location_letter",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return \"No Seat!!\"\n    if letter not in ' ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n        \n    if letter in ' ABC':\n        direction = 'Left'\n    elif letter in ' DEF':\n        direction = 'Middle'\n    else:\n        direction = 'Right'\n        \n    return f\"{location}-{direction}\"",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        section_str = 'Front'\n    elif section <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n        \n    if letter in 'ABCDEFG':\n        cluster_str = '-' + {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right'}[letter]\n    else:\n        cluster_str = '-' + {'H': 'Right', 'K': 'Right'}[letter]\n        \n    return section_str + cluster_str"
        ],
        "3": [
            "def plane_seat(a):\n    num = int(a[:-1])\n    let = a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ' or (let < 'A' or let > 'K'):\n        return 'No Seat!!'\n    if num <= 20:\n        area = 'Front'\n    elif num <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if let in 'ABC':\n        loc = 'Left'\n    elif let in 'DEF':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return area + '-' + loc",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in 'IJ' or seat_letter < 'A' or seat_letter > 'K':\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        if seat_letter in 'ABC':\n            return 'Front-Left'\n        elif seat_letter in 'DF':\n            return 'Front-Middle'\n        else:\n            return 'Front-Right'\n    elif int(seat_number) <= 40:\n        if seat_letter in 'ABC':\n            return 'Middle-Left'\n        elif seat_letter in 'DF':\n            return 'Middle-Middle'\n        else:\n            return 'Middle-Right'\n    else:\n        if seat_letter in 'ABC':\n            return 'Back-Left'\n        elif seat_letter in 'DF':\n            return 'Back-Middle'\n        else:\n            return 'Back-Right'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    \n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    \n    if num <= 20:\n        location = \"Front\"\n    elif num <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    \n    if letter in \"ABC\":\n        location += \"-Left\"\n    elif letter in \"DEF\":\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n    \n    return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return \"No Seat!!\"\n    elif int(num) <= 20:\n        area = \"Front\"\n    elif int(num) <= 40:\n        area = \"Middle\"\n    else:\n        area = \"Back\"\n    if letter in 'ABC':\n        location = \"Left\"\n    elif letter in 'DEF':\n        location = \"Middle\"\n    else:\n        location = \"Right\"\n    return area + \"-\" + location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or (seat_letter.upper() not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        location = 'Front'\n    elif 21 <= int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter.upper() in 'ABC':\n        location += '-Left'\n    elif seat_letter.upper() in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num < 1 or num > 60 or lett in ['I', 'J'] or (lett < 'A' or lett > 'K'):\n        return 'No Seat!!'\n    \n    if num <= 20:\n        location = 'Front'\n    elif num <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if lett in ['A', 'B', 'C']:\n        location += '-Left'\n    elif lett in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n        \n    return location",
            "def plane_seat(a):\n    section, seat = a[:-1], a[-1]\n    if int(section) > 60 or seat in 'IJZ':\n        return 'No Seat!!'\n    elif int(section) <= 20:\n        location = 'Front'\n    elif int(section) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat in 'ABC':\n        return location + '-Left'\n    elif seat in 'DEF':\n        return location + '-Middle'\n    else:\n        return location + '-Right'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if lett not in \" ABCDEFGHK\":\n        return \"No Seat!!\"\n    if num < 21:\n        location = \"Front-\"\n    elif num < 41:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if lett in \"ABCDEFG\":\n        location += \"Left\"\n    elif lett in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front-'\n    elif section <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right')\n    return location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    if letter.upper() not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter.upper() in 'ABC':\n        location = 'Left'\n    elif letter.upper() in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{area}-{location}'",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1].upper()\n    \n    if not seat_number.isdigit() or not 1 <= int(seat_number) <= 60 or seat_letter in ['I', 'J'] or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n    \n    if int(seat_number) <= 20:\n        section = 'Front'\n    elif int(seat_number) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n        \n    if 'A' <= seat_letter <= 'C':\n        cluster = 'Left'\n    elif 'D' <= seat_letter <= 'F':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n        \n    return section + '-' + cluster",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    \n    if int(seat_number) < 1 or int(seat_number) > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n        \n    section = 'Front' if int(seat_number) <= 20 else 'Middle' if int(seat_number) <= 40 else 'Back'\n    cluster = 'Left' if seat_letter in 'ABC' else 'Middle' if seat_letter in 'DEF' else 'Right'\n    \n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    if len(a) != 2 or not a[0].isdigit() or int(a[0]) > 60 or not a[1].isalpha() or a[1] in ['I', 'J']:\n        return \"No Seat!!\"\n    section = \"Front\" if int(a[0]) <= 20 else \"Middle\" if int(a[0]) <= 40 else \"Back\"\n    cluster = \"Left\" if a[1] in ['A', 'B', 'C'] else \"Middle\" if a[1] in ['D', 'E', 'F'] else \"Right\"\n    return f\"{section}-{cluster}\"",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        section_str = 'Front'\n    elif section <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n        \n    if letter in 'ABCDEFG':\n        letter_str = 'Left'\n    elif letter in 'DEFG':\n        letter_str = 'Middle'\n    else:\n        letter_str = 'Right'\n        \n    return f'{section_str}-{letter_str}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter <= 'C':\n            location += '-Left'\n        elif letter <= 'F':\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    area = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    position = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return area + '-' + position",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    if num < 1 or num > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    if num <= 20:\n        location = 'Front'\n    elif num <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    if int(section) > 60 or letter in 'IJZ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if 'A' <= letter <= 'C':\n        loc = 'Left'\n    elif 'D' <= letter <= 'F':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return area + '-' + loc",
            "def plane_seat(a):\n    num, let = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ' or let < 'A' or let > 'K':\n        return 'No Seat!!'\n    else:\n        if num < 21:\n            area = 'Front'\n        elif num < 41:\n            area = 'Middle'\n        else:\n            area = 'Back'\n        if let < 'D':\n            loc = 'Left'\n        elif let < 'G':\n            loc = 'Middle'\n        else:\n            loc = 'Right'\n        return area + '-' + loc",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n\n    if not (1 <= num <= 60):\n        return \"No Seat!!\"\n\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n\n    location = \"Front\" if num <= 20 else \"Middle\" if num <= 40 else \"Back\"\n\n    if letter in \"ABCDEFG\":\n        location += \"-Left\"\n    elif letter in \"DEF\":\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n\n    return location"
        ],
        "4": [
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) > 60 or letter in 'IJZ' or (letter < 'A' or letter > 'K'):\n        return \"No Seat!!\"\n    if int(num) <= 20:\n        area = \"Front\"\n    elif int(num) <= 40:\n        area = \"Middle\"\n    else:\n        area = \"Back\"\n    if letter in 'ABC':\n        loc = \"Left\"\n    elif letter in 'DEF':\n        loc = \"Middle\"\n    else:\n        loc = \"Right\"\n    return f\"{area}-{loc}\"",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or seat_letter in 'IJ' or seat_letter < 'A' or seat_letter > 'K':\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        if seat_letter in 'ABC':\n            return 'Front-Left'\n        elif seat_letter in 'DF':\n            return 'Front-Middle'\n        else:\n            return 'Front-Right'\n    elif int(seat_number) <= 40:\n        if seat_letter in 'ABC':\n            return 'Middle-Left'\n        elif seat_letter in 'DF':\n            return 'Middle-Middle'\n        else:\n            return 'Middle-Right'\n    else:\n        if seat_letter in 'ABC':\n            return 'Back-Left'\n        elif seat_letter in 'DF':\n            return 'Back-Middle'\n        else:\n            return 'Back-Right'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n\n    if not (1 <= num <= 60) or letter in 'IJ' or not 'A' <= letter <= 'K':\n        return 'No Seat!!'\n\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right')\n\n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    if int(seat_number) > 60 or (seat_letter.upper() not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    elif int(seat_number) <= 20:\n        location = 'Front-'\n    elif 21 <= int(seat_number) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if seat_letter.upper() in 'ABC':\n        location += 'Left'\n    elif seat_letter.upper() in 'DF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1].upper()\n    \n    if not seat_number.isdigit() or int(seat_number) > 60:\n        return \"No Seat!!\"\n    \n    if seat_letter not in \"ABCDFGK\":\n        return \"No Seat!!\"\n    \n    seat_number = int(seat_number)\n    \n    if seat_number <= 20:\n        location = \"Front\"\n    elif seat_number <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n    \n    if seat_letter in \"ABC\":\n        location += \"-Left\"\n    elif seat_letter in \"DF\":\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n    \n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60:\n        return \"No Seat!!\"\n    if lett not in \" ABCDEFGHK\":\n        return \"No Seat!!\"\n    if num < 21:\n        location = \"Front-\"\n    elif num < 41:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if lett in \"ABCDEFG\":\n        location += \"Left\"\n    elif lett in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or (seat_letter < 'A' or seat_letter > 'K'):\n        return 'No Seat!!'\n    elif seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right')\n    return location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    if letter.upper() not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter.upper() in 'ABC':\n        location = 'Left'\n    elif letter.upper() in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return area + '-' + location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or (seat_letter < 'A' or seat_letter > 'K'):\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n        \n    if 'A' <= seat_letter <= 'C':\n        cluster = 'Left'\n    elif 'D' <= seat_letter <= 'F':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n        \n    return section + '-' + cluster",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1].upper()\n    if not section.isdigit() or int(section) > 60 or not ('A' <= letter <= 'K' and letter not in 'IJ'):\n        return 'No Seat!!'\n    section = 'Front' if int(section) <= 20 else 'Middle' if int(section) <= 40 else 'Back'\n    letter = 'Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right'\n    return f'{section}-{letter}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHK') :\n        return \"No Seat!!\"\n    elif section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter in 'ABCDEFG':\n        location = 'Left'\n    elif letter in 'DEFG':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return area + '-' + location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    elif num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return section + '-' + location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter <= 'C':\n            location += '-Left'\n        elif letter <= 'F':\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1]\n    if section < 1 or section > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJZ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return section + '-' + location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    if not section.isdigit() or not 1 <= int(section) <= 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    if int(section) <= 20:\n        area = \"Front\"\n    elif int(section) <= 40:\n        area = \"Middle\"\n    else:\n        area = \"Back\"\n    if letter in \"ABC\":\n        loc = \"Left\"\n    elif letter in \"DEF\":\n        loc = \"Middle\"\n    else:\n        loc = \"Right\"\n    return \"{}-{}\".format(area, loc)",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60 or lett in 'IJ':\n        return 'No Seat!!'\n    if num <= 20:\n        sect = 'Front'\n    elif num <= 40:\n        sect = 'Middle'\n    else:\n        sect = 'Back'\n    if lett in 'ABC':\n        loc = 'Left'\n    elif lett in 'DEF':\n        loc = 'Middle'\n    elif lett in 'GK':\n        loc = 'Right'\n    else:\n        return 'No Seat!!'\n    return sect + '-' + loc",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    if int(section) > 60 or letter in 'IJZ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if 'A' <= letter <= 'C':\n        loc = 'Left'\n    elif 'D' <= letter <= 'F':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return '{}-{}'.format(area, loc)",
            "def plane_seat(a):\n    num, let = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ' or let < 'A' or let > 'K':\n        return 'No Seat!!'\n    else:\n        if num < 21:\n            area = 'Front'\n        elif num < 41:\n            area = 'Middle'\n        else:\n            area = 'Back'\n        if let < 'D':\n            loc = 'Left'\n        elif let < 'G':\n            loc = 'Middle'\n        else:\n            loc = 'Right'\n        return area + '-' + loc"
        ]
    },
    "2": {
        "0": [
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1]\n    if int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        location = 'Front-'\n    elif int(section) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or (letter < 'A' or letter > 'K') or letter in ['I', 'J']:\n        return 'No Seat!!'\n    else:\n        if section <= 20:\n            location = 'Front-'\n        elif section <= 40:\n            location = 'Middle-'\n        else:\n            location = 'Back-'\n        if letter in ['A', 'B', 'C']:\n            location += 'Left'\n        elif letter in ['D', 'E', 'F']:\n            location += 'Middle'\n        else:\n            location += 'Right'\n        return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if seat_number <= 20 else 'Middle' if seat_number <= 40 else 'Back'\n    cluster = 'Left' if seat_letter in 'ABC' else 'Middle' if seat_letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if not 1 <= num <= 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    section = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1]\n    if not section.isdigit() or int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    if letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if 1 <= int(section) <= 20:\n        location = 'Front-'\n    elif 21 <= int(section) <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    elif seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    else:\n        if seat_number <= 20:\n            location = 'Front-'\n        elif seat_number <= 40:\n            location = 'Middle-'\n        else:\n            location = 'Back-'\n        \n        if seat_letter in 'ABC':\n            location += 'Left'\n        elif seat_letter in 'DF':\n            location += 'Middle'\n        else:\n            location += 'Right'\n        \n        return location",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1].upper()\n    if not section.isdigit() or not 1 <= int(section) <= 60 or letter in ['I', 'J'] or not 'A' <= letter <= 'K':\n        return 'No Seat!!'\n    elif int(section) <= 20:\n        location = 'Front'\n    elif int(section) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if 'A' <= letter <= 'C':\n        location += '-Left'\n    elif 'D' <= letter <= 'F':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    \n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    section = ''\n    cluster = ''\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in 'ABC':\n        cluster = 'Left'\n    elif seat_letter in 'DEF':\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    num = int(''.join(filter(str.isdigit, a)))\n    letter = ''.join(filter(str.isalpha, a)).upper()\n    if num < 1 or num > 60 or letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter in 'ABC':\n            location += '-Left'\n        elif letter in 'DEF':\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n\n    if section < 1 or section > 60 or letter in 'IJ':\n        return 'No Seat!!'\n\n    location = 'Front' if section <= 20 else 'Middle' if section <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60 or lett not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    elif num <= 20:\n        location = 'Front-'\n    elif num <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if lett in 'ABC':\n        location += 'Left'\n    elif lett in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    area = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(area, cluster)",
            "def plane_seat(a):\n    num = int(''.join(filter(str.isdigit, a)))\n    letter = ''.join(filter(str.isalpha, a)).upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHIK'):\n        return 'No Seat!!'\n    elif num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return section + '-' + location",
            "def plane_seat(a):\n    num, let = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    side = 'Left' if let in 'ABC' else 'Middle' if let in 'DEF' else 'Right'\n    return f'{location}-{side}'",
            "def plane_seat(a):\n    if not isinstance(a, str) or len(a) != 2:\n        return 'No Seat!!'\n    num, let = a\n    if not num.isdigit() or not 'A' <= let <= 'K' or let in ['I', 'J']:\n        return 'No Seat!!'\n    num = int(num)\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if 'A' <= let <= 'C' else 'Middle' if 'D' <= let <= 'F' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    \n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    \n    if letter in 'ABC':\n        loc = 'Left'\n    elif letter in 'DEF':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    \n    return '{}-{}'.format(area, loc)",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter < 'A' or letter > 'K') or letter in ['I', 'J']:\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter in ['A', 'B', 'C']:\n            loc = 'Left'\n        elif letter in ['D', 'E', 'F']:\n            loc = 'Middle'\n        else:\n            loc = 'Right'\n        return f'{location}-{loc}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1]\n    if section < 1 or section > 60 or letter in 'IJij' or not letter.isalpha():\n        return 'No Seat!!'\n    if section <= 20:\n        loc = 'Front-'\n    elif section <= 40:\n        loc = 'Middle-'\n    else:\n        loc = 'Back-'\n    if letter in 'ABCabc':\n        loc += 'Left'\n    elif letter in 'DEFdef':\n        loc += 'Middle'\n    else:\n        loc += 'Right'\n    return loc"
        ],
        "1": [
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n\n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n\n    if seat_letter in ['A', 'B', 'C']:\n        location = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location = 'Middle'\n    else:\n        location = 'Right'\n\n    return f'{section}-{location}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    \n    if seat_letter in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n    \n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n        \n    location = \"\"\n    if seat_number <= 20:\n        location += \"Front-\"\n    elif seat_number <= 40:\n        location += \"Middle-\"\n    else:\n        location += \"Back-\"\n        \n    if seat_letter in \"ABC\":\n        location += \"Left\"\n    elif seat_letter in \"DEF\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n        \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    location_number = ''\n    if seat_number <= 20:\n        location_number = 'Front'\n    elif seat_number <= 40:\n        location_number = 'Middle'\n    else:\n        location_number = 'Back'\n        \n    location_letter = ''\n    if seat_letter in ['A', 'B', 'C']:\n        location_letter = 'Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location_letter = 'Middle'\n    else:\n        location_letter = 'Right'\n        \n    return location_number + '-' + location_letter",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section > 60 or letter in ['I', 'J']:\n        return \"No Seat!!\"\n    location = \"Front\" if section <= 20 else \"Middle\" if section <= 40 else \"Back\"\n    cluster = \"Left\" if letter in ['A', 'B', 'C'] else \"Middle\" if letter in ['D', 'E', 'F'] else \"Right\"\n    return f\"{location}-{cluster}\"",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n        \n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return \"No Seat!!\"\n    if letter not in ' ABCDEFGHK':\n        return \"No Seat!!\"\n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n        \n    return location",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1].upper()\n    if not section.isdigit() or int(section) > 60 or not ('A' <= letter <= 'K' and letter not in 'IJ'):\n        return 'No Seat!!'\n    section_name = 'Front' if int(section) <= 20 else 'Middle' if int(section) <= 40 else 'Back'\n    letter_name = 'Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right'\n    return f'{section_name}-{letter_name}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        section_str = 'Front'\n    elif section <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n        \n    if letter in 'ABCDEFG':\n        letter_str = 'Left'\n    elif letter in 'DEFG':\n        letter_str = 'Middle'\n    else:\n        letter_str = 'Right'\n        \n    return f'{section_str}-{letter_str}'",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n\n    if section < 1 or section > 60 or letter in 'IJ':\n        return 'No Seat!!'\n\n    location = 'Front' if section <= 20 else 'Middle' if section <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter in 'ABC':\n            location += '-Left'\n        elif letter in 'DEF':\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter in ['A', 'B', 'C']:\n            location += '-Left'\n        elif letter in ['D', 'E', 'F']:\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n\n    if seat_number > 60 or seat_letter in ['I', 'J'] or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n\n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n\n    if 'A' <= seat_letter <= 'C':\n        position = 'Left'\n    elif 'D' <= seat_letter <= 'F':\n        position = 'Middle'\n    else:\n        position = 'Right'\n\n    return f'{location}-{position}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num < 1 or num > 60 or lett in ['I', 'J']:\n        return 'No Seat!!'\n    \n    section = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if lett in ['A', 'B', 'C'] else 'Middle' if lett in ['D', 'E', 'F'] else 'Right'\n    \n    return section + '-' + cluster",
            "def plane_seat(a):\n    num, let = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    side = 'Left' if let in 'ABC' else 'Middle' if let in 'DEF' else 'Right'\n    return f'{location}-{side}'",
            "def plane_seat(a):\n    sections = {'1-20': 'Front', '21-40': 'Middle', '41-60': 'Back'}\n    clusters = {'A-C': 'Left', 'D-F': 'Middle', 'G-K': 'Right'}\n    num, letter = a[:-1], a[-1].upper()\n    if int(num) > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    for section, loc in sections.items():\n        if int(num) in range(int(section.split('-')[0]), int(section.split('-')[1]) + 1):\n            for cluster, direction in clusters.items():\n                if letter in cluster:\n                    return loc + '-' + direction\n    return 'No Seat!!'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    \n    if section <= 20:\n        area = 'Front'\n    elif section <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    \n    if letter in 'ABC':\n        seat_area = 'Left'\n    elif letter in 'DEF':\n        seat_area = 'Middle'\n    else:\n        seat_area = 'Right'\n    \n    return f'{area}-{seat_area}'"
        ],
        "2": [
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) > 60 or letter in 'IJ':\n        return \"No Seat!!\"\n    section = \"Front\" if int(section) <= 20 else \"Middle\" if int(section) <= 40 else \"Back\"\n    location = \"Left\" if letter in 'ABC' else \"Middle\" if letter in 'DEF' else \"Right\"\n    return f\"{section}-{location}\"",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num < 1 or num > 60 or lett in ['I', 'J']:\n        return 'No Seat!!'\n    \n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if lett in ['A', 'B', 'C'] else 'Middle' if lett in ['D', 'E', 'F'] else 'Right'\n    \n    return location + '-' + cluster",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n        \n    if section <= 20:\n        location = \"Front\"\n    elif section <= 40:\n        location = \"Middle\"\n    else:\n        location = \"Back\"\n        \n    if letter in \"ABCDEFG\":\n        side = \"Left\" if letter in \"ABC\" else \"Middle\" if letter in \"DEF\" else \"Right\"\n    else:\n        side = \"Right\"\n        \n    return f\"{location}-{side}\"",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n        \n    location = \"\"\n    if seat_number <= 20:\n        location += \"Front-\"\n    elif seat_number <= 40:\n        location += \"Middle-\"\n    else:\n        location += \"Back-\"\n        \n    if seat_letter in \"ABCDEFG\":\n        location += \"Left\"\n    elif seat_letter in \"DEFG\":\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n        \n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return \"No Seat!!\"\n    if letter not in ' ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n        \n    if letter in ' ABC':\n        direction = 'Left'\n    elif letter in ' DEF':\n        direction = 'Middle'\n    else:\n        direction = 'Right'\n        \n    return f'{location}-{direction}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num > 60 or lett in ['I', 'J'] or not lett.isalpha() or not 'A' <= lett <= 'K':\n        return \"No Seat!!\"\n    \n    section = \"Front\" if num <= 20 else \"Middle\" if num <= 40 else \"Back\"\n    cluster = \"Left\" if 'A' <= lett <= 'C' else \"Middle\" if 'D' <= lett <= 'F' else \"Right\"\n    \n    return f\"{section}-{cluster}\"",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        section_str = 'Front'\n    elif section <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n        \n    if letter in 'ABCDEFG':\n        cluster_str = '-' + {'A': 'Left', 'B': 'Left', 'C': 'Left', 'D': 'Middle', 'E': 'Middle', 'F': 'Middle', 'G': 'Right'}[letter]\n    else:\n        cluster_str = '-' + {'H': 'Right', 'K': 'Right'}[letter]\n        \n    return section_str + cluster_str",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    if num <= 20:\n        location = 'Front'\n    elif num <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter in 'ABC':\n            location += '-Left'\n        elif letter in 'DEF':\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter in ['A', 'B', 'C']:\n            location += '-Left'\n        elif letter in ['D', 'E', 'F']:\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ':\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'AC':\n        location = 'Left'\n    elif letter in 'DF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{section}-{location}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    \n    if num < 1 or num > 60 or lett in ['I', 'J']:\n        return 'No Seat!!'\n    \n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n        \n    if lett in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif lett in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    else:\n        cluster = 'Right'\n        \n    return section + '-' + cluster",
            "def plane_seat(a):\n    num, lett = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or lett in ['I', 'J'] or not 'A' <= lett <= 'K':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if 'A' <= lett <= 'C' else 'Middle' if 'D' <= lett <= 'F' else 'Right'\n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    if int(section) > 60 or letter in ['I', 'J']:\n        return \"No Seat!!\"\n    elif int(section) <= 20:\n        location = \"Front-\"\n    elif int(section) <= 40:\n        location = \"Middle-\"\n    else:\n        location = \"Back-\"\n    if letter in ['A', 'B', 'C']:\n        location += \"Left\"\n    elif letter in ['D', 'E', 'F']:\n        location += \"Middle\"\n    else:\n        location += \"Right\"\n    return location",
            "def plane_seat(a):\n    num, let = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ':\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    side = 'Left' if let in 'ABC' else 'Middle' if let in 'DEF' else 'Right'\n    return f'{location}-{side}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n\n    if not (1 <= num <= 60):\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n\n    location = \"Front\" if num <= 20 else \"Middle\" if num <= 40 else \"Back\"\n    cluster = \"Left\" if letter in \"ABC\" else \"Middle\" if letter in \"DEF\" else \"Right\"\n\n    return f\"{location}-{cluster}\""
        ],
        "3": [
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    if seat_number <= 20:\n        section = \"Front\"\n    elif seat_number <= 40:\n        section = \"Middle\"\n    else:\n        section = \"Back\"\n    if seat_letter in \"ABC\":\n        cluster = \"Left\"\n    elif seat_letter in \"DEF\":\n        cluster = \"Middle\"\n    else:\n        cluster = \"Right\"\n    return f\"{section}-{cluster}\"",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front-'\n    elif section <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right')\n    return location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) < 1 or int(section) > 60:\n        return 'No Seat!!'\n    if letter.upper() not in 'ABCDEFGHK':\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if letter.upper() in 'ABC':\n        location = 'Left'\n    elif letter.upper() in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{area}-{location}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = a[:-1]\n    seat_letter = a[-1]\n    \n    if int(seat_number) < 1 or int(seat_number) > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n        \n    section = 'Front' if int(seat_number) <= 20 else 'Middle' if int(seat_number) <= 40 else 'Back'\n    cluster = 'Left' if seat_letter in 'ABC' else 'Middle' if seat_letter in 'DEF' else 'Right'\n    \n    return f'{section}-{cluster}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    if len(a) != 2 or not a[0].isdigit() or int(a[0]) > 60 or not a[1].isalpha() or a[1] in ['I', 'J']:\n        return \"No Seat!!\"\n    section = \"Front\" if int(a[0]) <= 20 else \"Middle\" if int(a[0]) <= 40 else \"Back\"\n    cluster = \"Left\" if a[1] in ['A', 'B', 'C'] else \"Middle\" if a[1] in ['D', 'E', 'F'] else \"Right\"\n    return f\"{section}-{cluster}\"",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        section_str = 'Front'\n    elif section <= 40:\n        section_str = 'Middle'\n    else:\n        section_str = 'Back'\n        \n    if letter in 'ABCDEFG':\n        letter_str = 'Left'\n    elif letter in 'DEFG':\n        letter_str = 'Middle'\n    else:\n        letter_str = 'Right'\n        \n    return f'{section_str}-{letter_str}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter <= 'C':\n            location += '-Left'\n        elif letter <= 'F':\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    if num < 1 or num > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    if num <= 20:\n        location = 'Front'\n    elif num <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60 or lett in 'IJ' or not 'A' <= lett <= 'K':\n        return \"No Seat!!\"\n    if num <= 20:\n        area = \"Front\"\n    elif num <= 40:\n        area = \"Middle\"\n    else:\n        area = \"Back\"\n    if lett in 'ABC':\n        loc = \"Left\"\n    elif lett in 'DEF':\n        loc = \"Middle\"\n    else:\n        loc = \"Right\"\n    return area + \"-\" + loc",
            "def plane_seat(a):\n    num, let = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ' or let < 'A' or let > 'K':\n        return 'No Seat!!'\n    else:\n        if num < 21:\n            area = 'Front'\n        elif num < 41:\n            area = 'Middle'\n        else:\n            area = 'Back'\n        if let < 'D':\n            loc = 'Left'\n        elif let < 'G':\n            loc = 'Middle'\n        else:\n            loc = 'Right'\n        return area + '-' + loc",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    if int(section) > 60 or letter in 'IJZ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if 'A' <= letter <= 'C':\n        loc = 'Left'\n    elif 'D' <= letter <= 'F':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return '{}-{}'.format(area, loc)",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n\n    if not (1 <= num <= 60):\n        return \"No Seat!!\"\n\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n\n    location = \"Front\" if num <= 20 else \"Middle\" if num <= 40 else \"Back\"\n\n    if letter in \"ABCDEFG\":\n        location += \"-Left\"\n    elif letter in \"DEF\":\n        location += \"-Middle\"\n    else:\n        location += \"-Right\"\n\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return \"No Seat!!\"\n    elif num <= 20:\n        area = \"Front\"\n    elif num <= 40:\n        area = \"Middle\"\n    else:\n        area = \"Back\"\n    if letter in ['A', 'B', 'C']:\n        loc = \"Left\"\n    elif letter in ['D', 'E', 'F']:\n        loc = \"Middle\"\n    else:\n        loc = \"Right\"\n    return area + \"-\" + loc",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            section = 'Front'\n        elif num <= 40:\n            section = 'Middle'\n        else:\n            section = 'Back'\n        if letter <= 'C':\n            cluster = 'Left'\n        elif letter <= 'F':\n            cluster = 'Middle'\n        else:\n            cluster = 'Right'\n        return f'{section}-{cluster}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    let = a[-1].upper()\n    if num < 1 or num > 60 or let in ['I', 'J'] or (let < 'A' or let > 'K'):\n        return 'No Seat!!'\n    elif num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if let in ['A', 'B', 'C']:\n        loc = 'Left'\n    elif let in ['D', 'E', 'F']:\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return f'{section}-{loc}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    \n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    cluster = 'Left' if letter in ['A', 'B', 'C'] else 'Middle' if letter in ['D', 'E', 'F'] else 'Right'\n    \n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60:\n        return \"No Seat!!\"\n    if letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    section = 'Front' if int(num) <= 20 else 'Middle' if int(num) <= 40 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    seat_num = a[:-1]\n    seat_letter = a[-1].upper()\n    if not seat_num.isdigit() or int(seat_num) < 1 or int(seat_num) > 60:\n        return \"No Seat!!\"\n    if seat_letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    location = \"Front\" if int(seat_num) <= 20 else \"Middle\" if int(seat_num) <= 40 else \"Back\"\n    location += \"-\" + (\"Left\" if seat_letter in \"ABC\" else \"Middle\" if seat_letter in \"DEF\" else \"Right\")\n    return location",
            "def plane_seat(a):\n    try:\n        num, letter = int(a[:-1]), a[-1].upper()\n        if num < 1 or num > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n            return 'No Seat!!'\n        area = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n        cluster = 'Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right'\n        return f'{area}-{cluster}'\n    except:\n        return 'No Seat!!'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    if num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in ' ABC':\n        location = 'Left'\n    elif letter in 'DF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{section}-{location}'"
        ],
        "4": [
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or (seat_letter < 'A' or seat_letter > 'K'):\n        return 'No Seat!!'\n    elif seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter in ['A', 'B', 'C']:\n        location += '-Left'\n    elif seat_letter in ['D', 'E', 'F']:\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    if section < 1 or section > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front-'\n    elif section <= 40:\n        location = 'Middle-'\n    else:\n        location = 'Back-'\n    if letter in 'ABC':\n        location += 'Left'\n    elif letter in 'DEF':\n        location += 'Middle'\n    else:\n        location += 'Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    location = 'Front' if num <= 20 else 'Middle' if num <= 40 else 'Back'\n    location += '-' + ('Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right')\n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60:\n        return \"No Seat!!\"\n    if seat_letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    if not section.isdigit() or int(section) > 60 or letter in 'IJ' or letter not in 'ABCDEFGHK':\n        return \"No Seat!!\"\n    section = 'Front' if int(section) <= 20 else 'Middle' if int(section) <= 40 else 'Back'\n    location = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return f\"{section}-{location}\"",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or not seat_letter.isalpha() or not 'A' <= seat_letter <= 'K':\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        location = 'Front'\n    elif seat_number <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    \n    if 'A' <= seat_letter <= 'C':\n        location += '-Left'\n    elif 'D' <= seat_letter <= 'F':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    \n    return location",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1]\n    \n    if seat_number < 1 or seat_number > 60 or seat_letter in ['I', 'J'] or (seat_letter < 'A' or seat_letter > 'K'):\n        return 'No Seat!!'\n    \n    if seat_number <= 20:\n        section = 'Front'\n    elif seat_number <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n        \n    if 'A' <= seat_letter <= 'C':\n        location = 'Left'\n    elif 'D' <= seat_letter <= 'F':\n        location = 'Middle'\n    else:\n        location = 'Right'\n        \n    return f'{section}-{location}'",
            "def plane_seat(a):\n    num, letter = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60:\n        return 'No Seat!!'\n    if letter not in ' ABCDEFGHK':\n        return 'No Seat!!'\n    section = 'Front' if num < 21 else 'Middle' if num < 41 else 'Back'\n    cluster = 'Left' if letter in 'ABC' else 'Middle' if letter in 'DEF' else 'Right'\n    return '{}-{}'.format(section, cluster)",
            "def plane_seat(a):\n    section = a[:-1]\n    letter = a[-1].upper()\n    if not section.isdigit() or int(section) > 60 or not ('A' <= letter <= 'K' and letter not in 'IJ'):\n        return 'No Seat!!'\n    section = 'Front' if int(section) <= 20 else 'Middle' if int(section) <= 40 else 'Back'\n    letter = 'Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right'\n    return f'{section}-{letter}'",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in ['I', 'J'] or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    else:\n        if num <= 20:\n            location = 'Front'\n        elif num <= 40:\n            location = 'Middle'\n        else:\n            location = 'Back'\n        if letter in ['A', 'B', 'C']:\n            location += '-Left'\n        elif letter in ['D', 'E', 'F']:\n            location += '-Middle'\n        else:\n            location += '-Right'\n        return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    elif num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return section + '-' + location",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1]\n    if section < 1 or section > 60 or letter in 'IJ' or letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1].upper()\n    if num < 1 or num > 60 or letter in 'IJZ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in 'ABC':\n        location = 'Left'\n    elif letter in 'DEF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return section + '-' + location",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    if not section.isdigit() or not 1 <= int(section) <= 60:\n        return \"No Seat!!\"\n    if letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    if int(section) <= 20:\n        area = \"Front\"\n    elif int(section) <= 40:\n        area = \"Middle\"\n    else:\n        area = \"Back\"\n    if letter in \"ABC\":\n        loc = \"Left\"\n    elif letter in \"DEF\":\n        loc = \"Middle\"\n    else:\n        loc = \"Right\"\n    return \"{}-{}\".format(area, loc)",
            "def plane_seat(a):\n    num = int(a[:-1])\n    lett = a[-1].upper()\n    if num < 1 or num > 60 or lett in 'IJ':\n        return 'No Seat!!'\n    if num <= 20:\n        sect = 'Front'\n    elif num <= 40:\n        sect = 'Middle'\n    else:\n        sect = 'Back'\n    if lett in 'ABC':\n        loc = 'Left'\n    elif lett in 'DEF':\n        loc = 'Middle'\n    elif lett in 'GK':\n        loc = 'Right'\n    else:\n        return 'No Seat!!'\n    return sect + '-' + loc",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1].upper()\n    if int(section) > 60 or letter in 'IJZ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    if int(section) <= 20:\n        area = 'Front'\n    elif int(section) <= 40:\n        area = 'Middle'\n    else:\n        area = 'Back'\n    if 'A' <= letter <= 'C':\n        loc = 'Left'\n    elif 'D' <= letter <= 'F':\n        loc = 'Middle'\n    else:\n        loc = 'Right'\n    return '{}-{}'.format(area, loc)",
            "def plane_seat(a):\n    num, let = int(a[:-1]), a[-1].upper()\n    if num < 1 or num > 60 or let in 'IJ' or let < 'A' or let > 'K':\n        return 'No Seat!!'\n    else:\n        if num < 21:\n            area = 'Front'\n        elif num < 41:\n            area = 'Middle'\n        else:\n            area = 'Back'\n        if let < 'D':\n            loc = 'Left'\n        elif let < 'G':\n            loc = 'Middle'\n        else:\n            loc = 'Right'\n        return area + '-' + loc",
            "def plane_seat(a):\n    seat_number, seat_letter = a[:-1], a[-1]\n    if int(seat_number) > 60 or seat_letter in 'IJ' or seat_letter not in 'ABCDEFGHIK':\n        return 'No Seat!!'\n    if int(seat_number) <= 20:\n        location = 'Front'\n    elif int(seat_number) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if seat_letter in 'ABC':\n        location += '-Left'\n    elif seat_letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1]\n    if int(num) < 1 or int(num) > 60 or letter in 'IJ' or letter < 'A' or letter > 'K':\n        return 'No Seat!!'\n    if int(num) <= 20:\n        location = 'Front'\n    elif int(num) <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n    if letter in 'ABC':\n        location += '-Left'\n    elif letter in 'DEF':\n        location += '-Middle'\n    else:\n        location += '-Right'\n    return location",
            "def plane_seat(a):\n    seat_num = int(a[:-1])\n    seat_letter = a[-1].upper()\n    \n    if seat_num < 1 or seat_num > 60:\n        return \"No Seat!!\"\n    if seat_letter not in \"ABCDEFGHK\":\n        return \"No Seat!!\"\n    \n    if seat_num <= 20:\n        section = \"Front\"\n    elif seat_num <= 40:\n        section = \"Middle\"\n    else:\n        section = \"Back\"\n    \n    if seat_letter in \"ABC\":\n        location = \"Left\"\n    elif seat_letter in \"DEF\":\n        location = \"Middle\"\n    else:\n        location = \"Right\"\n    \n    return f\"{section}-{location}\"",
            "def plane_seat(a):\n    num, letter = a[:-1], a[-1].upper()\n    if int(num) < 1 or int(num) > 60 or letter in ['I', 'J'] or letter < 'A' or letter > 'K':\n        return 'No Seat!!'\n    if int(num) <= 20:\n        section = 'Front'\n    elif int(num) <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in ['A', 'B', 'C']:\n        location = 'Left'\n    elif letter in ['D', 'E', 'F']:\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{section}-{location}'",
            "def plane_seat(a):\n    section = int(a[:-1])\n    letter = a[-1].upper()\n    \n    if section < 1 or section > 60 or letter in ['I', 'J']:\n        return 'No Seat!!'\n    \n    if section <= 20:\n        location = 'Front'\n    elif section <= 40:\n        location = 'Middle'\n    else:\n        location = 'Back'\n        \n    if letter in ['A', 'B', 'C']:\n        cluster = 'Left'\n    elif letter in ['D', 'E', 'F']:\n        cluster = 'Middle'\n    elif letter in ['G', 'H', 'K']:\n        cluster = 'Right'\n    else:\n        return 'No Seat!!'\n        \n    return f'{location}-{cluster}'",
            "def plane_seat(a):\n    seat_number = int(a[:-1])\n    seat_letter = a[-1].upper()\n\n    if seat_number < 1 or seat_number > 60:\n        return 'No Seat!!'\n    if seat_letter not in 'ABCDEFGHK':\n        return 'No Seat!!'\n\n    location = 'Front' if seat_number <= 20 else 'Middle' if seat_number <= 40 else 'Back'\n\n    if seat_letter in 'ABC':\n        return f\"{location}-Left\"\n    elif seat_letter in 'DEF':\n        return f\"{location}-Middle\"\n    else:\n        return f\"{location}-Right\"",
            "def plane_seat(a):\n    num = int(a[:-1])\n    letter = a[-1]\n    if num > 60 or (letter not in 'ABCDEFGHK'):\n        return 'No Seat!!'\n    if num <= 20:\n        section = 'Front'\n    elif num <= 40:\n        section = 'Middle'\n    else:\n        section = 'Back'\n    if letter in ' ABC':\n        location = 'Left'\n    elif letter in 'DF':\n        location = 'Middle'\n    else:\n        location = 'Right'\n    return f'{section}-{location}'",
            "def plane_seat(a):\n    section, letter = a[:-1], a[-1]\n    section = int(section)\n    if section > 60 or letter in 'IJ' or (letter < 'A' or letter > 'K'):\n        return 'No Seat!!'\n    area = 'Front' if section <= 20 else 'Middle' if section <= 40 else 'Back'\n    cluster = 'Left' if 'A' <= letter <= 'C' else 'Middle' if 'D' <= letter <= 'F' else 'Right'\n    return '{}-{}'.format(area, cluster)"
        ]
    }
}