{
    "0": {
        "0": [
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):\n    result = [1]\n    for i in range(n):\n        result = [cogs[i]*result[0], result[1]*cogs[-1-i]]\n    return result",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):"
        ],
        "1": [],
        "2": [],
        "3": [],
        "4": []
    },
    "1": {
        "0": [
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):"
        ],
        "1": [],
        "2": [],
        "3": [],
        "4": []
    },
    "2": {
        "0": [
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n):",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]",
            "def cog_RPM(cogs, n): \n    total_teeth = 1\n    for i in range(n):\n        total_teeth *= cogs[i]\n    rpm = 1 / (total_teeth / 60)\n    return [rpm, rpm]"
        ],
        "1": [],
        "2": [],
        "3": [],
        "4": []
    }
}