{
    "0": [
        "assert cog_RPM([100, 50, 25], 2) == [4, 1]",
        "assert cog_RPM([100, 50, 25], 0) == [1, 1]",
        "assert cog_RPM([100, 50, 25], 3) == [-4, -1]",
        "assert cog_RPM([100, 50, 25], 1) == [2, 2]",
        "assert cog_RPM([100, 50, 25], 0) == [1, 4]"
    ],
    "1": [
        "assert cog_RPM([25, 25, 50], 0) == [1, 2]",
        "assert cog_RPM([100, 50, 25, 10], 0) == [1, 2]",
        "assert cog_RPM([100, 50, 25], 1) == [-4, 1]",
        "assert cog_RPM([100, 50, 25], 2) == [1, -1]",
        "assert cog_RPM([25, 50, 100], 1) == [-4, 1]",
        "assert cog_RPM([50, 25, 25], 2) == [2, 2]",
        "assert cog_RPM([100, 50, 25], 2) == [-2, 4]",
        "assert cog_RPM([100, 50, 25], 3) == [-1, 4]"
    ],
    "2": [
        "assert cog_RPM([100, 50, 25, 10], 0) == [1, 2]",
        "assert cog_RPM([100, 50, 25], 1) == [-4, 1]",
        "assert cog_RPM([100, 50, 25], 2) == [1, -1]",
        "assert cog_RPM([25, 50, 100], 1) == [-4, 1]",
        "assert cog_RPM([50, 25, 25], 2) == [2, 2]",
        "assert cog_RPM([100, 50, 25], 2) == [-2, 4]",
        "assert cog_RPM([100, 50, 25], 3) == [-1, 4]"
    ],
    "3": [
        "assert cog_RPM([100, 50, 25], 1) == [-4, 1]",
        "assert cog_RPM([100, 50, 25], 2) == [1, -1]",
        "assert cog_RPM([25, 50, 100], 1) == [-4, 1]",
        "assert cog_RPM([50, 25, 25], 2) == [2, 2]",
        "assert cog_RPM([100, 50, 25], 2) == [-2, 4]",
        "assert cog_RPM([100, 50, 25], 3) == [-1, 4]"
    ]
}