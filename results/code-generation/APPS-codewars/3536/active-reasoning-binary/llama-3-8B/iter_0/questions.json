{
    "0": [
        "assert cog_RPM([100, 50, 25], 0) == [1, 1]",
        "assert cog_RPM([100, 50, 25], 0) == [1, 4]"
    ],
    "1": [
        "assert cog_RPM([100, 50, 25], 1) == [4, 2]",
        "assert cog_RPM([100, 50, 25], 2) == [1, -1]",
        "assert cog_RPM([100, 50, 25], 1) == [-4, 1]",
        "assert cog_RPM([50, 20, 10, 5], 2) == [-2, 1]",
        "assert cog_RPM([100, 50, 25, 10], 0) == [1, 0.25]",
        "assert cog_RPM([10, 5], 0) == [1, 20]",
        "assert cog_RPM([5, 2, 1], 1) == [-4, 2]",
        "assert cog_RPM([10, 5, 2], 2) == [-2, 1]"
    ],
    "2": [
        "assert cog_RPM([100, 50, 25], 2) == [1, -1]",
        "assert cog_RPM([100, 50, 25], 1) == [-4, 1]",
        "assert cog_RPM([50, 20, 10, 5], 2) == [-2, 1]",
        "assert cog_RPM([100, 50, 25, 10], 0) == [1, 0.25]",
        "assert cog_RPM([10, 5], 0) == [1, 20]",
        "assert cog_RPM([5, 2, 1], 1) == [-4, 2]",
        "assert cog_RPM([10, 5, 2], 2) == [-2, 1]"
    ],
    "3": [
        "assert cog_RPM([100, 50, 25], 1) == [-4, 1]",
        "assert cog_RPM([50, 20, 10, 5], 2) == [-2, 1]",
        "assert cog_RPM([100, 50, 25, 10], 0) == [1, 0.25]",
        "assert cog_RPM([10, 5], 0) == [1, 20]",
        "assert cog_RPM([5, 2, 1], 1) == [-4, 2]",
        "assert cog_RPM([10, 5, 2], 2) == [-2, 1]"
    ]
}