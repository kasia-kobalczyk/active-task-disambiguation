{
    "0": [
        "assert cog_RPM([100, 50, 25], 2) == [4, -8]",
        "assert cog_RPM([100, 50, 25], 1) == [2, -4]",
        "assert cog_RPM([100, 50, 25], 1) == [-2, 4]",
        "assert cog_RPM([10, 10], 0) == [1, -1]",
        "assert cog_RPM([10, 20, 30, 40], 0) == [1, -8]",
        "assert cog_RPM([10, 20, 30, 40, 50], 3) == [-8, 16]",
        "assert cog_RPM([10, 20, 30, 40], 3) == [-8, 32]",
        "assert cog_RPM([100, 50, 25], 2) == [-4, 16]"
    ],
    "1": [
        "assert cog_RPM([10, 10, 10], 1) == [-1, 1]",
        "assert cog_RPM([10, 20, 30, 40], 1) == [-2, 4]",
        "assert cog_RPM([5, 10, 15, 20, 25], 2) == [-3, 15]",
        "assert cog_RPM([5, 10, 20], 2) == [-4, 1]",
        "assert cog_RPM([1000, 500, 250, 125, 62.5], 3) == [-8, 128]",
        "assert cog_RPM([10, 10, 10, 10], 0) == [1, -1]",
        "assert cog_RPM([20, 40, 10], 1) == [-2, 8]",
        "assert cog_RPM([30, 30, 30, 30], 0) == [1, -1]"
    ],
    "2": [
        "assert cog_RPM([10, 10, 10, 10, 10], 2) == [-1, -1]",
        "assert cog_RPM([5, 10, 5], 1) == [-2, 2]",
        "assert cog_RPM([10, 20, 30, 40], 1) == [-2, 1]",
        "assert cog_RPM([5, 10, 20], 0) == [1, -4]",
        "assert cog_RPM([20, 10, 5, 2], 1) == [-2, 20]",
        "assert cog_RPM([40, 20, 10, 5], 3) == [-8, 16]",
        "assert cog_RPM([40, 30, 20, 10], 1) == [-2, 1]",
        "assert cog_RPM([10, 10, 10, 10, 10], 2) == [-1, 1]"
    ],
    "3": [
        "assert cog_RPM([5, 10, 5], 1) == [-2, 2]",
        "assert cog_RPM([10, 20, 30, 40], 1) == [-2, 1]",
        "assert cog_RPM([5, 10, 20], 0) == [1, -4]",
        "assert cog_RPM([40, 20, 10, 5], 3) == [-8, 16]",
        "assert cog_RPM([40, 30, 20, 10], 1) == [-2, 1]",
        "assert cog_RPM([10, 10, 10, 10, 10], 2) == [1, -1]",
        "assert cog_RPM([20, 10, 5, 2], 1) == [-2, 10]"
    ]
}