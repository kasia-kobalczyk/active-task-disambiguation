{
    "0": [
        "assert cog_RPM([5], 0) == [0, 0]",
        "assert cog_RPM([10, 20, 30, 40, 50], 4) == [2, 2.6667]",
        "assert cog_RPM([10, 20, 30, 40], 0) == [1, -2]",
        "assert cog_RPM([20, 40, 60, 80], 2) == [2, 2.6667]",
        "assert cog_RPM([100, 50, 25], 2) == [4, -8]",
        "assert cog_RPM([100, 50, 25], 1) == [2, -4]",
        "assert cog_RPM([4, 3, 2, 1], 3) == [0.75, 1.5]",
        "assert cog_RPM([100, 50, 25], 0) == [0.5, 0.25]",
        "assert cog_RPM([10, 20, 30, 40], 3) == [16, -32]"
    ],
    "1": [
        "assert cog_RPM([50, 40, 30], 2) == [-3, 3]",
        "assert cog_RPM([12, 6, 3], 1) == [-2, -4]",
        "assert cog_RPM([10, 20, 30, 40, 50], 4) == [-0.2, 0.2]",
        "assert cog_RPM([15, 10, 30, 20], 2) == [-1.3333333333333333, -0.6666666666666666]",
        "assert cog_RPM([100, 200, 150, 50], 0) == [1, -1]",
        "assert cog_RPM([100, 50, 25], 0) == [100, -100]",
        "assert cog_RPM([100, 50, 25], 1) == [2, -2]",
        "assert cog_RPM([20, 10, 5, 2], 1) == [-2, -4]",
        "assert cog_RPM([100, 50, 25], 0) == [1, -2]"
    ],
    "2": [
        "assert cog_RPM([50, 40, 30], 2) == [-3, 3]",
        "assert cog_RPM([12, 6, 3], 1) == [-2, -4]",
        "assert cog_RPM([10, 20, 30, 40, 50], 4) == [-0.2, 0.2]",
        "assert cog_RPM([20, 10, 5, 2], 1) == [-2, -4]",
        "assert cog_RPM([100, 50, 25], 0) == [100, -100]",
        "assert cog_RPM([100, 50, 25], 1) == [2, -2]",
        "assert cog_RPM([15, 10, 30, 20], 2) == [-1.3333333333333333, -0.6666666666666666]",
        "assert cog_RPM([100, 50, 25], 0) == [1, -2]"
    ],
    "3": [
        "assert cog_RPM([12, 6, 3], 1) == [-2, -4]",
        "assert cog_RPM([10, 20, 30, 40, 50], 4) == [-0.2, 0.2]",
        "assert cog_RPM([20, 10, 5, 2], 1) == [-2, -4]",
        "assert cog_RPM([100, 50, 25], 0) == [100, -100]",
        "assert cog_RPM([100, 50, 25], 1) == [2, -2]",
        "assert cog_RPM([15, 10, 30, 20], 2) == [-1.3333333333333333, -0.6666666666666666]",
        "assert cog_RPM([100, 50, 25], 0) == [1, -2]"
    ]
}