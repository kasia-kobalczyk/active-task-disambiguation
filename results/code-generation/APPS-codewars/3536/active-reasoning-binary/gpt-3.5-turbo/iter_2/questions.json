{
    "0": [
        "assert cog_RPM([100, 50, 25], 0) == [0.5, 0.25]",
        "assert cog_RPM([5], 0) == [0, 0]",
        "assert cog_RPM([6, 3, 2, 4], 3) == [0.5, 1]",
        "assert cog_RPM([100, 50, 25], 1) == [2, -4]",
        "assert cog_RPM([10, 20, 30, 40, 50], 4) == [2, 2.6667]",
        "assert cog_RPM([10, 20, 30, 40], 0) == [1, -2]",
        "assert cog_RPM([100, 50, 25], 2) == [4, -8]",
        "assert cog_RPM([20, 40, 60, 80], 2) == [2, 2.6667]",
        "assert cog_RPM([10, 20, 30, 40], 3) == [16, -32]"
    ],
    "1": [
        "assert cog_RPM([40, 20, 10, 5], 0) == [1, -3]",
        "assert cog_RPM([100, 50, 25], 0) == [1, -2]",
        "assert cog_RPM([50, 25, 12], 0) == [1, 1]",
        "assert cog_RPM([60, 30, 15, 7, 3, 1], 0) == [1, -5]",
        "assert cog_RPM([50], 0) == [1, 1]",
        "assert cog_RPM([30, 15, 7, 3, 1], 0) == [1, -4]"
    ],
    "2": [
        "assert cog_RPM([100, 50, 25], 2) == [0.5, -2]",
        "assert cog_RPM([60, 40, 20, 10], 3) == [5, 0.125]",
        "assert cog_RPM([100, 50, 25], 1) == [2, 0.5]",
        "assert cog_RPM([25, 50, 100], 0) == [1, 0.5]",
        "assert cog_RPM([100, 50, 25], 0) == [1, 2]",
        "assert cog_RPM([25, 50, 100], 2) == [0.5, 2]",
        "assert cog_RPM([100, 50, 25], 2) == [8, 1]",
        "assert cog_RPM([60, 40, 20, 10], 1) == [0.5, 0.125]",
        "assert cog_RPM([100, 50, 25], 1) == [2, 0.08]"
    ],
    "3": [
        "assert cog_RPM([100, 50, 25], 2) == [0.5, -2]",
        "assert cog_RPM([60, 40, 20, 10], 3) == [5, 0.125]",
        "assert cog_RPM([25, 50, 100], 0) == [1, 0.5]",
        "assert cog_RPM([100, 50, 25], 0) == [1, 2]",
        "assert cog_RPM([25, 50, 100], 2) == [0.5, 2]",
        "assert cog_RPM([100, 50, 25], 2) == [8, 1]",
        "assert cog_RPM([60, 40, 20, 10], 1) == [0.5, 0.125]",
        "assert cog_RPM([100, 50, 25], 1) == [2, 0.08]"
    ]
}