{
    "0": {
        "0": [
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, str):\n            total_cost += 2.40\n            bus_count = 0\n        else:\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost += 1.50\n                bus_count = 0\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in journey:\n        if isinstance(i, int):\n            bus_count += 1\n        else:\n            total_cost += bus_count // 2 * bus_cost\n            total_cost += bus_count % 2 * bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n    \n    total_cost += bus_count // 2 * bus_cost\n    total_cost += bus_count % 2 * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            total_cost += 2.40\n        else:\n            bus_count += 1\n            total_cost += 1.50\n            \n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n        \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.00\n    is_previous_bus = False\n\n    for element in journey:\n        if isinstance(element, int):  # check if element is an integer (bus number)\n            if is_previous_bus:\n                total_cost += bus_fare  # add bus fare for the second bus in a set\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:  # element is a string (tube name)\n            total_cost += tube_fare\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost * 2\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        else:\n            total_cost += tube_cost\n            i += 1\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_bus = False\n    \n    for item in journey:\n        if isinstance(item, str):\n            total_cost += 2.40\n            is_bus = False\n        else:\n            if is_bus:\n                is_bus = False\n            else:\n                total_cost += 1.50\n                is_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in journey:\n        if type(i) == str:  # Tube journey\n            total_cost += tube_cost\n            bus_count = 0\n        else:  # Bus journey\n            bus_count += 1\n            if bus_count == 2:  # Cap fare for two adjacent buses\n                total_cost += bus_cost\n                bus_count = 0\n                \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, str):\n            total_cost += tube_cost\n            consecutive_buses = 0\n        else:\n            if consecutive_buses == 1:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            elif consecutive_buses > 1:\n                total_cost += (consecutive_buses * bus_cost)\n                consecutive_buses = 0\n            else:\n                consecutive_buses += 1\n    \n    if consecutive_buses == 1:\n        total_cost += bus_cost\n    elif consecutive_buses > 1:\n        total_cost += (consecutive_buses * bus_cost)\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += 1.5\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += 1.5\n                bus_count = 0\n            total_cost += 2.4\n    \n    if bus_count > 1:\n        total_cost += 1.5\n    elif bus_count == 1:\n        total_cost += 1.5\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        # if the current element is a tube name\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        # if the current element is a bus number\n        elif isinstance(journey[i], int):\n            # if there are at least two adjacent bus numbers\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                total_cost += 2 * bus_fare\n                i += 1\n            # if there is only one bus number\n            else:\n                total_cost += bus_fare\n        \n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_count // 2 * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_fare\n\n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for journey_element in journey:\n        if isinstance(journey_element, str):\n            # Tube journey\n            total_cost += 2.40\n            is_previous_bus = False\n        else:\n            # Bus journey\n            total_cost += 1.50\n\n            if is_previous_bus:\n                # Set of two adjacent bus journeys\n                total_cost -= 1.50\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            \n            if i+1 < len(journey) and isinstance(journey[i+1], int):  # check if next journey is also a bus journey\n                total_cost += 1.5\n                i += 1  # skip the next journey as it has already been accounted for\n                \n        else:  # tube journey\n            total_cost += 2.4\n            \n        i += 1  # move to next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if type(item) == int:\n            bus_count += 1\n        else:\n            total_cost += bus_count * 1.50\n            bus_count = 0\n            total_cost += 2.40\n    \n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    \n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "# Total cost of the journey\ntotal_cost = 0\n\n# Initialize a flag to check if the previous journey was a bus\nprev_was_bus = False\n\n# Iterate over each journey in the sequence\nfor journey in journey:\n    \n    # If the current journey is a tube, add \u00a32.40 to the total cost\n    if isinstance(journey, str):\n        total_cost += 2.40\n        \n        # Set the flag to False since the current journey is not a bus\n        prev_was_bus = False\n    \n    # If the current journey is a bus, add \u00a31.50 to the total cost\n    else:\n        total_cost += 1.50\n        \n        # If the previous journey was also a bus, subtract \u00a31.50 from the total cost\n        if prev_was_bus:\n            total_cost -= 1.50\n        \n        # Set the flag to True since the current journey is a bus\n        prev_was_bus = True\n\n# Return the total cost rounded to 2 decimal places in the format \u00a3x.xx\nreturn \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.50\n        else:\n            total_cost += 2.40\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.4\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.5\n                bus_count = 0\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if type(stop) == str:  # Tube journey\n            total_cost += tube_cost\n            is_previous_bus = False\n        else:  # Bus journey\n            if is_previous_bus:\n                total_cost += bus_cost  # Only add bus cost for the second bus in a set of adjacent buses\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n                total_cost += bus_cost * 2\n        else:\n            total_cost += tube_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_fare\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                # Two adjacent bus journeys, count as one fare\n                total_cost += bus_fare\n                i += 2\n            else:\n                # Single bus journey\n                total_cost += bus_fare\n                i += 1\n        else:\n            # Tube journey\n            total_cost += tube_fare\n            i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_count += 1\n            else:\n                total_cost += 1.5\n                \n        else:\n            total_cost += 2.4\n    \n    bus_sets = bus_count // 2\n    total_cost -= bus_sets * 1.5\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_journey_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_journey_count += 1\n            if bus_journey_count == 2:\n                total_cost -= bus_cost\n                bus_journey_count = 0\n        else:\n            total_cost += tube_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for item in journey:\n        if isinstance(item, str):\n            total_cost += tube_fare\n            is_previous_bus = False\n        else:\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_fare\n                is_previous_bus = True\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_journeys = 0\n    for i in range(len(journey)):\n        if type(journey[i]) == int: # bus journey\n            total_cost += 1.50\n            bus_journeys += 1\n        else: # tube journey\n            total_cost += 2.40\n            if bus_journeys >= 2:\n                total_cost -= 1.50\n                bus_journeys = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.5\n    tube_fare = 2.4\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # If it is a bus number\n            if bus_count == 0:\n                total_cost += bus_fare\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n        else:  # If it is a tube name\n            total_cost += tube_fare\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count = 0\n        else:\n            total_cost += 2.4\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for j in journey:\n        if isinstance(j, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_fare * (bus_count // 2)\n            total_cost += bus_fare * (bus_count % 2)\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += bus_fare * (bus_count // 2)\n    total_cost += bus_fare * (bus_count % 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):  # Tube journey\n            total_cost += 2.40\n            bus_count = 0\n        elif isinstance(item, int):  # Bus journey\n            total_cost += 1.50\n            bus_count += 1\n            \n            if bus_count == 2:  # Cap the bus fare for sets of two adjacent buses\n                total_cost -= 1.50\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n            \n    total_cost += (bus_count // 2) * bus_cost\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.50\n                bus_count = 0\n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            is_previous_bus = False\n        else:\n            total_cost += bus_fare\n            if is_previous_bus:\n                total_cost -= bus_fare\n            is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost -= bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for stop in journey:\n        if isinstance(stop, int):\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += 2.4\n            is_previous_bus = False\n\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0 # initialize total cost variable\n    bus_count = 0 # initialize bus count variable\n    \n    for i in range(len(journey)): # iterate through the journey\n        if isinstance(journey[i], int): # check if element is an integer (bus number)\n            total_cost += 1.50 # add bus fare to total cost\n            bus_count += 1 # increment bus count\n            if bus_count >= 2: # check if there are 2 or more adjacent bus journeys\n                total_cost -= 1.50 # subtract bus fare from total cost\n                bus_count = 0 # reset bus count\n        \n        else: # element is a string (tube name)\n            total_cost += 2.40 # add tube fare to total cost\n            \n    return \"\u00a3{:.2f}\".format(total_cost) # return total cost rounded to 2 decimal places"
        ],
        "2": [
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for journey_type in journey:\n        if isinstance(journey_type, str):  # If the journey type is a tube name\n            total_cost += tube_cost\n            bus_count = 0\n        else:  # If the journey type is a bus number\n            bus_count += 1\n            if bus_count == 2:  # If there are two adjacent bus journeys\n                total_cost += bus_cost\n                bus_count = 0\n\n    total_cost += bus_count * bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        else:\n            bus_count += 1\n\n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n\n    total_cost += bus_cost * bus_count\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):   # If element is an integer, it's a bus number\n            if i == 0 or isinstance(journey[i-1], str):   # If previous element is a tube name or it's the first element in the list\n                total_cost += 1.5   # Add bus fare\n            elif isinstance(journey[i-1], int) and isinstance(journey[i-2], str):   # If previous two elements are bus numbers\n                total_cost -= 1.5   # Subtract one bus fare (because fare is capped)\n                total_cost += 1.5   # Add bus fare\n        \n        elif isinstance(journey[i], str):   # If element is a string, it's a tube name\n            total_cost += 2.4   # Add tube fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_count += 1\n                if bus_count == 2:\n                    total_cost += bus_cost\n                    bus_count = 0\n            else:\n                total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "```python\ndef london_city_hacker(journey):\n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # If bus number\n            bus_count += 1\n        else:  # If tube name\n            if bus_count >= 2:  # If there were 2 or more adjacent buses\n                total_cost += bus_count * bus_fare  # Add cost for bus journeys\n                bus_count = 0  # Reset bus count\n\n            total_cost += tube_fare  # Add cost for tube journey\n\n    if bus_count >= 2:  # If there were 2 or more adjacent buses at the end\n        total_cost += bus_count * bus_fare  # Add cost for bus journeys\n\n    return \"\u00a3{:.2f}\".format(total_cost)\n```\n",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_bus = False\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_bus:\n                bus_count += 1\n            else:\n                total_cost += 1.5\n                is_bus = True\n                bus_count = 1\n        else:\n            if is_bus:\n                total_cost += 1.5\n                is_bus = False\n                if bus_count >= 2:\n                    total_cost -= 1.5 * (bus_count // 2)\n                    bus_count = bus_count % 2\n            total_cost += 2.4\n    \n    if is_bus and bus_count >= 2:\n        total_cost -= 1.5 * (bus_count // 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0\n    is_previous_bus = False\n\n    for journey_item in journey:\n        if type(journey_item) == str:\n            total_cost += tube_fare\n            is_previous_bus = False\n        else:\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_fare\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        else:\n            total_cost += bus_fare\n            \n            # check if there are 2 or more adjacent bus journeys\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost -= bus_fare\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # If the element is a bus number\n            if not is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else: # If the element is a tube name\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            cost += 1.5\n            bus_count += 1\n            if bus_count == 2:\n                cost -= 1.5\n                bus_count = 0\n        else:\n            cost += 2.4\n            \n    return \"\u00a3{:.2f}\".format(cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count -= 2\n        else:\n            total_cost += 1.50\n            bus_count += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or not isinstance(journey[i-1], int):\n                total_cost += bus_cost\n            else:\n                bus_count += 1\n                \n        else:\n            total_cost += tube_cost\n            if bus_count >= 2:\n                total_cost -= bus_cost\n                bus_count = 0\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    is_previous_bus = False\n    \n    for item in journey:\n        if isinstance(item, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += 1.5\n                is_previous_bus = True\n        else:\n            total_cost += 2.4\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # bus journey\n            total_cost += bus_fare\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int): # check if next journey is also a bus journey\n                total_cost -= bus_fare # subtract one bus fare as fare is capped for sets of two adjacent buses\n\n        else: # tube journey\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0.0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                consecutive_buses += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    total_cost += bus_fare * (consecutive_buses // 2)\n    total_cost = round(total_cost, 2)\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_counter = 0\n    \n    for j in journey:\n        if isinstance(j, str):  # tube journey\n            total_cost += tube_fare\n            if bus_counter >= 2:\n                total_cost -= bus_fare\n                bus_counter = 0\n        elif isinstance(j, int):  # bus journey\n            total_cost += bus_fare\n            bus_counter += 1\n    \n    if bus_counter >= 2:\n        total_cost -= bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if not is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n            is_previous_bus = False\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0.0\n    prev_bus = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                prev_bus = True\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)"
        ],
        "3": [
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    \n    total_cost += bus_cost * (bus_count // 2)\n    \n    return \"\u00a3\" + format(total_cost, '.2f')",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    i = 0\n    while i < len(journey):\n        if type(journey[i]) == str:\n            total_cost += tube_fare\n            i += 1\n        else:\n            num_buses = 0\n            while i < len(journey) and type(journey[i]) == int:\n                num_buses += 1\n                i += 1\n            num_sets_of_two = num_buses // 2\n            total_cost += num_sets_of_two * bus_fare\n            remaining_buses = num_buses % 2\n            total_cost += remaining_buses * bus_fare\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_cost\n                bus_count = 0\n        else:\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += 1.50\n                is_previous_bus = True\n        elif isinstance(journey[i], str):\n            total_cost += 2.40\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for journey_segment in journey:\n        if isinstance(journey_segment, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    total_cost += bus_count * bus_fare\n    \n    return \"\u00a3{:0.2f}\".format(round(total_cost, 2))",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    prev_is_bus = False\n    for stop in journey:\n        if isinstance(stop, int):\n            if prev_is_bus:\n                prev_is_bus = False\n            else:\n                prev_is_bus = True\n                total_cost += bus_fare\n        else:\n            prev_is_bus = False\n            total_cost += tube_fare\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += bus_fare\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost -= bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost -= bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or not isinstance(journey[i-1], int):\n                total_cost += bus_cost\n            elif isinstance(journey[i-1], int) and isinstance(journey[i-2], int):\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    return \"\u00a3\" + format(total_cost, \".2f\")",
            "def london_city_hacker(journey):\n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if type(journey[i]) == int:\n            if i < len(journey)-1 and type(journey[i+1]) == int:\n                total_cost += bus_cost\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        elif type(journey[i]) == str:\n            total_cost += tube_cost\n            i += 1\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    prev_bus = False\n    \n    for j in journey:\n        if isinstance(j, str):\n            total_cost += tube_cost\n            prev_bus = False\n        elif isinstance(j, int):\n            total_cost += bus_cost\n            if prev_bus:\n                total_cost -= bus_cost\n            prev_bus = True\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        else:\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_cost\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                total_cost += bus_cost\n            else:\n                bus_count += 1\n                \n        elif type(journey[i]) == str:\n            if i == 0 or type(journey[i-1]) == int:\n                total_cost += tube_cost\n            \n            if bus_count >= 2:\n                total_cost += bus_cost\n                bus_count = 0\n    \n    total_cost = round(total_cost, 2)\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n\n    total_cost = 0.00\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost\n                bus_count -= 2\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_cost\n        bus_count %= 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n        bus_count = 0\n\n    total_cost = round(total_cost, 2)\n    return f\"\u00a3{total_cost:.2f}\"\n\nprint(london_city_hacker(['Piccadilly', 15, 9, 'Bakerloo', 48]))  # \u00a37.80\nprint(london_city_hacker(['Central', 3, 24, 'Northern', 52]))  # \u00a37.80\nprint(london_city_hacker([1, 'Victoria', 2, 3, 'Circle']))  # \u00a37.80",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_counter = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_counter += 1\n        else:\n            total_cost += tube_cost\n            if bus_counter >= 2:\n                total_cost -= bus_cost\n            bus_counter = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += bus_fare\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    previous_is_bus = False\n    \n    for location in journey:\n        if isinstance(location, int):\n            if previous_is_bus:\n                previous_is_bus = False\n            else:\n                total_cost += 1.5\n                previous_is_bus = True\n        else:\n            total_cost += 2.4\n            previous_is_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost -= bus_fare\n            total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(round(total_cost, 2))",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost -= bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "4": [
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            tube_count += 1\n            \n            if bus_count >= 2:\n                total_cost += 1.5\n                bus_count -= 2\n                \n            total_cost += 2.4\n                \n    total_cost += 1.5 * bus_count\n    \n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    num_buses = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            num_buses += 1\n            if num_buses >= 2:\n                if num_buses % 2 == 0:\n                    total_cost += bus_fare\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    total_cost = round(total_cost, 2)\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0\n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str): # if the journey is by tube\n            total_cost += tube_fare\n            is_previous_bus = False\n        else: # if the journey is by bus\n            if is_previous_bus: # if the previous journey was also by bus\n                is_previous_bus = False\n            else: # if the previous journey was by tube\n                total_cost += bus_fare\n                is_previous_bus = True\n    \n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if isinstance(journey[i - 1], int):\n                bus_count += 1\n            else:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n    \n    total_cost += 1.5 * (bus_count // 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.00\n    is_bus = False\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str:  # check if the element is a tube name\n            total_cost += tube_fare\n            is_bus = False\n        else:  # element is a bus number\n            total_cost += bus_fare\n            if i < len(journey) - 1 and type(journey[i+1]) == int:  # check if there is another bus number\n                total_cost -= bus_fare  # subtract bus fare as it will be added again later for the set of two buses\n                is_bus = True\n            else:\n                is_bus = False\n                \n    if is_bus:  # add the bus fare for the set of two buses\n        total_cost += bus_fare\n                \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n    bus_journey = False\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if bus_journey:\n                total_cost += bus_cost\n                bus_journey = False\n            elif i < len(journey) - 1 and type(journey[i+1]) == int:\n                bus_journey = True\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for stop in journey:\n        if isinstance(stop, str):  # tube journey\n            total_cost += tube_fare\n            consecutive_buses = 0\n        else:  # bus journey\n            consecutive_buses += 1\n            if consecutive_buses > 1:\n                consecutive_buses = 0\n                continue  # skip the fare calculation for this bus journey\n                \n            total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                total_cost += bus_fare\n            else:\n                bus_count += 1\n                if bus_count == 2:\n                    total_cost += bus_fare\n                    bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    \n    is_previous_bus = False\n    for stop in journey:\n        if isinstance(stop, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_counter = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_counter += 1\n        else:\n            total_cost += bus_fare * (bus_counter // 2 + bus_counter % 2)\n            bus_counter = 0\n            total_cost += tube_fare\n    \n    total_cost += bus_fare * (bus_counter // 2 + bus_counter % 2)\n    \n    return \"\u00a3{:.2f}\".format(round(total_cost, 2))",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_counter = 0\n    \n    for item in journey:\n        if type(item) == str:  # tube journey\n            total_cost += tube_fare\n            bus_counter = 0\n        elif type(item) == int:  # bus journey\n            bus_counter += 1\n            if bus_counter == 2:\n                bus_counter = 0\n            else:\n                total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.4\n    bus_fare = 1.5\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_fare * (bus_count // 2 + 1)\n                bus_count = 0\n    \n    return \"\u00a3\" + format(total_cost, \".2f\")\n\nprint(london_city_hacker(['Piccadilly', 15, 9, 'Bakerloo', 48]))\nprint(london_city_hacker(['Central', 3, 24, 'Northern', 52]))\nprint(london_city_hacker([1, 'Victoria', 2, 3, 'Circle']))\nprint(london_city_hacker(['Bakerloo', 2, 6, 'Northern', 45, 'Central', 3]))",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n            if bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n    if bus_count == 1:\n        total_cost += bus_fare\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                bus_count += 1\n        else:\n            total_cost += 2.4\n    \n    total_cost -= bus_count * 1.5\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    is_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            is_bus = False\n        else:\n            if is_bus:\n                is_bus = False\n            else:\n                is_bus = True\n                total_cost += bus_fare\n                \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ]
    },
    "1": {
        "0": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        # if the current element is a tube name\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        # if the current element is a bus number\n        elif isinstance(journey[i], int):\n            # if there are at least two adjacent bus numbers\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                total_cost += 2 * bus_fare\n                i += 1\n            # if there is only one bus number\n            else:\n                total_cost += bus_fare\n        \n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_count // 2 * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_fare\n\n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for journey_element in journey:\n        if isinstance(journey_element, str):\n            # Tube journey\n            total_cost += 2.40\n            is_previous_bus = False\n        else:\n            # Bus journey\n            total_cost += 1.50\n\n            if is_previous_bus:\n                # Set of two adjacent bus journeys\n                total_cost -= 1.50\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            \n            if i+1 < len(journey) and isinstance(journey[i+1], int):  # check if next journey is also a bus journey\n                total_cost += 1.5\n                i += 1  # skip the next journey as it has already been accounted for\n                \n        else:  # tube journey\n            total_cost += 2.4\n            \n        i += 1  # move to next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if type(item) == int:\n            bus_count += 1\n        else:\n            total_cost += bus_count * 1.50\n            bus_count = 0\n            total_cost += 2.40\n    \n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    \n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "# Total cost of the journey\ntotal_cost = 0\n\n# Initialize a flag to check if the previous journey was a bus\nprev_was_bus = False\n\n# Iterate over each journey in the sequence\nfor journey in journey:\n    \n    # If the current journey is a tube, add \u00a32.40 to the total cost\n    if isinstance(journey, str):\n        total_cost += 2.40\n        \n        # Set the flag to False since the current journey is not a bus\n        prev_was_bus = False\n    \n    # If the current journey is a bus, add \u00a31.50 to the total cost\n    else:\n        total_cost += 1.50\n        \n        # If the previous journey was also a bus, subtract \u00a31.50 from the total cost\n        if prev_was_bus:\n            total_cost -= 1.50\n        \n        # Set the flag to True since the current journey is a bus\n        prev_was_bus = True\n\n# Return the total cost rounded to 2 decimal places in the format \u00a3x.xx\nreturn \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.50\n        else:\n            total_cost += 2.40\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.4\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.5\n                bus_count = 0\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if type(stop) == str:  # Tube journey\n            total_cost += tube_cost\n            is_previous_bus = False\n        else:  # Bus journey\n            if is_previous_bus:\n                total_cost += bus_cost  # Only add bus cost for the second bus in a set of adjacent buses\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            consecutive_buses += 1\n            if consecutive_buses == 2:\n                total_cost += bus_cost\n                consecutive_buses = 0\n        else:\n            if consecutive_buses > 0:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            total_cost += tube_cost\n    \n    if consecutive_buses > 0:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            if consecutive_buses == 0:\n                total_cost += 1.5\n                consecutive_buses += 1\n            else:\n                consecutive_buses += 1\n                \n                if consecutive_buses == 2:\n                    consecutive_buses = 0\n        else:\n            total_cost += 2.4\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_cost * 2\n                i += 1\n            else:\n                total_cost += bus_cost\n        i += 1\n\n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    is_previous_bus = False\n    \n    for travel in journey:\n        if isinstance(travel, int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += bus_cost * ((bus_count + 1) // 2)\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count > 1:\n        total_cost += bus_cost * ((bus_count + 1) // 2)\n    elif bus_count == 1:\n        total_cost += bus_cost\n    \n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_counter = 0\n        else:\n            if bus_counter == 0:\n                total_cost += bus_cost\n            bus_counter = (bus_counter + 1) % 2\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            buses += 1\n            if buses % 2 == 0:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus journeys\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    is_previous_bus = False\n    for journey_type in journey:\n        if isinstance(journey_type, str):\n            total_cost += 2.4\n            is_previous_bus = False\n        else:\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n                \n    return \"\u00a3{:0.2f}\".format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_journeys = 0\n    for i in range(len(journey)):\n        if type(journey[i]) == int: # bus journey\n            total_cost += 1.50\n            bus_journeys += 1\n        else: # tube journey\n            total_cost += 2.40\n            if bus_journeys >= 2:\n                total_cost -= 1.50\n                bus_journeys = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.5\n    tube_fare = 2.4\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # If it is a bus number\n            if bus_count == 0:\n                total_cost += bus_fare\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n        else:  # If it is a tube name\n            total_cost += tube_fare\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count = 0\n        else:\n            total_cost += 2.4\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for j in journey:\n        if isinstance(j, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_fare * (bus_count // 2)\n            total_cost += bus_fare * (bus_count % 2)\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += bus_fare * (bus_count // 2)\n    total_cost += bus_fare * (bus_count % 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):  # Tube journey\n            total_cost += 2.40\n            bus_count = 0\n        elif isinstance(item, int):  # Bus journey\n            total_cost += 1.50\n            bus_count += 1\n            \n            if bus_count == 2:  # Cap the bus fare for sets of two adjacent buses\n                total_cost -= 1.50\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n            \n    total_cost += (bus_count // 2) * bus_cost\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.50\n                bus_count = 0\n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            is_previous_bus = False\n        else:\n            total_cost += bus_fare\n            if is_previous_bus:\n                total_cost -= bus_fare\n            is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost -= bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for stop in journey:\n        if isinstance(stop, int):\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += 2.4\n            is_previous_bus = False\n\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0 # initialize total cost variable\n    bus_count = 0 # initialize bus count variable\n    \n    for i in range(len(journey)): # iterate through the journey\n        if isinstance(journey[i], int): # check if element is an integer (bus number)\n            total_cost += 1.50 # add bus fare to total cost\n            bus_count += 1 # increment bus count\n            if bus_count >= 2: # check if there are 2 or more adjacent bus journeys\n                total_cost -= 1.50 # subtract bus fare from total cost\n                bus_count = 0 # reset bus count\n        \n        else: # element is a string (tube name)\n            total_cost += 2.40 # add tube fare to total cost\n            \n    return \"\u00a3{:.2f}\".format(total_cost) # return total cost rounded to 2 decimal places",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            tube_count += 1\n            total_cost += tube_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            is_previous_bus = False\n        elif isinstance(journey[i], int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += 1.50\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    for stop in journey:\n        if isinstance(stop, int):  # check if the stop is a bus number\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:  # if there are 2 or more consecutive buses\n                total_cost += (consecutive_buses // 2) * bus_fare  # calculate cost for the sets of 2 buses\n                consecutive_buses = consecutive_buses % 2  # remaining consecutive buses\n            total_cost += consecutive_buses * bus_fare  # calculate cost for the remaining single buses\n            consecutive_buses = 0\n            total_cost += tube_fare  # add tube fare\n    if consecutive_buses >= 2:\n        total_cost += (consecutive_buses // 2) * bus_fare\n        consecutive_buses = consecutive_buses % 2\n    total_cost += consecutive_buses * bus_fare\n    return \"\u00a3{:0.2f}\".format(total_cost)"
        ],
        "2": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # If the element is a bus number\n            if not is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else: # If the element is a tube name\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            cost += 1.5\n            bus_count += 1\n            if bus_count == 2:\n                cost -= 1.5\n                bus_count = 0\n        else:\n            cost += 2.4\n            \n    return \"\u00a3{:.2f}\".format(cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count -= 2\n        else:\n            total_cost += 1.50\n            bus_count += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    is_previous_bus = False\n    \n    for item in journey:\n        if isinstance(item, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += 1.5\n                is_previous_bus = True\n        else:\n            total_cost += 2.4\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # bus journey\n            total_cost += bus_fare\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int): # check if next journey is also a bus journey\n                total_cost -= bus_fare # subtract one bus fare as fare is capped for sets of two adjacent buses\n\n        else: # tube journey\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_counter = 0\n    \n    for j in journey:\n        if isinstance(j, str):  # tube journey\n            total_cost += tube_fare\n            if bus_counter >= 2:\n                total_cost -= bus_fare\n                bus_counter = 0\n        elif isinstance(j, int):  # bus journey\n            total_cost += bus_fare\n            bus_counter += 1\n    \n    if bus_counter >= 2:\n        total_cost -= bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0.0\n    prev_bus = False\n    for stop in journey:\n        if isinstance(stop, int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                prev_bus = True\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            elif bus_count == 2:\n                bus_count = 1\n            else:\n                bus_count += 1\n        else:\n            total_cost += tube_fare\n            bus_count = 0\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_prev_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            is_prev_bus = False\n        else:\n            if is_prev_bus:\n                is_prev_bus = False\n            else:\n                total_cost += 1.50\n                is_prev_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str:\n            total_cost += tube_fare\n            if bus_count >= 2:\n                total_cost -= bus_fare\n                bus_count = 0\n        else:\n            total_cost += bus_fare\n            bus_count += 1\n    \n    if bus_count >= 2:\n        total_cost -= bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            i += 1\n        else:\n            if i < len(journey)-1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "3": [
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += bus_fare\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost -= bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost -= bus_fare\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or not isinstance(journey[i-1], int):\n                total_cost += bus_cost\n            elif isinstance(journey[i-1], int) and isinstance(journey[i-2], int):\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    return \"\u00a3\" + format(total_cost, \".2f\")",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n        elif isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += 1.50\n                bus_count += 1\n            elif bus_count > 0:\n                total_cost += 1.50\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if type(journey[i]) == int:\n            if i < len(journey)-1 and type(journey[i+1]) == int:\n                total_cost += bus_cost\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        elif type(journey[i]) == str:\n            total_cost += tube_cost\n            i += 1\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    prev_bus = False\n    \n    for j in journey:\n        if isinstance(j, str):\n            total_cost += tube_cost\n            prev_bus = False\n        elif isinstance(j, int):\n            total_cost += bus_cost\n            if prev_bus:\n                total_cost -= bus_cost\n            prev_bus = True\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        else:\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_cost\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                total_cost += bus_cost\n            else:\n                bus_count += 1\n                \n        elif type(journey[i]) == str:\n            if i == 0 or type(journey[i-1]) == int:\n                total_cost += tube_cost\n            \n            if bus_count >= 2:\n                total_cost += bus_cost\n                bus_count = 0\n    \n    total_cost = round(total_cost, 2)\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n\n    total_cost = 0.00\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost\n                bus_count -= 2\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_cost\n        bus_count %= 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n        bus_count = 0\n\n    total_cost = round(total_cost, 2)\n    return f\"\u00a3{total_cost:.2f}\"\n\nprint(london_city_hacker(['Piccadilly', 15, 9, 'Bakerloo', 48]))  # \u00a37.80\nprint(london_city_hacker(['Central', 3, 24, 'Northern', 52]))  # \u00a37.80\nprint(london_city_hacker([1, 'Victoria', 2, 3, 'Circle']))  # \u00a37.80",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_counter = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_counter += 1\n        else:\n            total_cost += tube_cost\n            if bus_counter >= 2:\n                total_cost -= bus_cost\n            bus_counter = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += bus_fare\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    previous_is_bus = False\n    \n    for location in journey: \n        if isinstance(location, str):\n            total_cost += 2.4\n            previous_is_bus = False\n        else:\n            if previous_is_bus:\n                total_cost += 0\n            else:\n                total_cost += 1.5\n            previous_is_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost -= bus_fare\n            total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(round(total_cost, 2))",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_journey = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n\n        elif isinstance(journey[i], int):\n            if bus_journey:\n                bus_journey = False\n            else:\n                bus_journey = True\n                total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for trip in journey:\n        if isinstance(trip, int):\n            total_cost += 1.50\n            bus_count += 1\n        else:\n            total_cost += 2.40\n\n    if bus_count >= 2:\n        total_cost -= 1.50\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str: # Tube journey\n            total_cost += tube_cost\n            is_previous_bus = False\n        else: # Bus journey\n            total_cost += bus_cost\n            if is_previous_bus:\n                total_cost -= bus_cost\n            is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if not is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            i += 1\n        else:\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n    return '\u00a3{:.2f}'.format(total_cost)"
        ],
        "4": [
            "def london_city_hacker(journey): \n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0\n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str): # if the journey is by tube\n            total_cost += tube_fare\n            is_previous_bus = False\n        else: # if the journey is by bus\n            if is_previous_bus: # if the previous journey was also by bus\n                is_previous_bus = False\n            else: # if the previous journey was by tube\n                total_cost += bus_fare\n                is_previous_bus = True\n    \n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if isinstance(journey[i - 1], int):\n                bus_count += 1\n            else:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n    \n    total_cost += 1.5 * (bus_count // 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.00\n    is_bus = False\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str:  # check if the element is a tube name\n            total_cost += tube_fare\n            is_bus = False\n        else:  # element is a bus number\n            total_cost += bus_fare\n            if i < len(journey) - 1 and type(journey[i+1]) == int:  # check if there is another bus number\n                total_cost -= bus_fare  # subtract bus fare as it will be added again later for the set of two buses\n                is_bus = True\n            else:\n                is_bus = False\n                \n    if is_bus:  # add the bus fare for the set of two buses\n        total_cost += bus_fare\n                \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n    bus_journey = False\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if bus_journey:\n                total_cost += bus_cost\n                bus_journey = False\n            elif i < len(journey) - 1 and type(journey[i+1]) == int:\n                bus_journey = True\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for stop in journey:\n        if isinstance(stop, str):  # tube journey\n            total_cost += tube_fare\n            consecutive_buses = 0\n        else:  # bus journey\n            consecutive_buses += 1\n            if consecutive_buses > 1:\n                consecutive_buses = 0\n                continue  # skip the fare calculation for this bus journey\n                \n            total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                total_cost += bus_fare\n            else:\n                bus_count += 1\n                if bus_count == 2:\n                    total_cost += bus_fare\n                    bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    \n    is_previous_bus = False\n    for stop in journey:\n        if isinstance(stop, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_counter = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_counter += 1\n        else:\n            total_cost += bus_fare * (bus_counter // 2 + bus_counter % 2)\n            bus_counter = 0\n            total_cost += tube_fare\n    \n    total_cost += bus_fare * (bus_counter // 2 + bus_counter % 2)\n    \n    return \"\u00a3{:.2f}\".format(round(total_cost, 2))",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_counter = 0\n    \n    for item in journey:\n        if type(item) == str:  # tube journey\n            total_cost += tube_fare\n            bus_counter = 0\n        elif type(item) == int:  # bus journey\n            bus_counter += 1\n            if bus_counter == 2:\n                bus_counter = 0\n            else:\n                total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.4\n    bus_fare = 1.5\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_fare * (bus_count // 2 + 1)\n                bus_count = 0\n    \n    return \"\u00a3\" + format(total_cost, \".2f\")",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                bus_count += 1\n        else:\n            total_cost += 2.4\n    \n    total_cost -= bus_count * 1.5\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    is_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            is_bus = False\n        else:\n            if is_bus:\n                is_bus = False\n            else:\n                is_bus = True\n                total_cost += bus_fare\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in journey:\n        if isinstance(i, int):\n            bus_count += 1\n        else:\n            if bus_count > 0:\n                total_cost += (bus_fare * ((bus_count + 1) // 2))\n                bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count > 0:\n        total_cost += (bus_fare * ((bus_count + 1) // 2))\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                bus_count += 1\n            else:\n                bus_count += 1\n                total_cost += (bus_count//2) * bus_fare\n                total_cost += (bus_count%2) * bus_fare\n                bus_count = 0\n        else:\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    total_cost += bus_count * bus_fare\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)"
        ]
    },
    "2": {
        "0": [
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            consecutive_buses += 1\n            if consecutive_buses == 2:\n                total_cost += bus_cost\n                consecutive_buses = 0\n        else:\n            if consecutive_buses > 0:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            total_cost += tube_cost\n    \n    if consecutive_buses > 0:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            if consecutive_buses == 0:\n                total_cost += 1.5\n                consecutive_buses += 1\n            else:\n                consecutive_buses += 1\n                \n                if consecutive_buses == 2:\n                    consecutive_buses = 0\n        else:\n            total_cost += 2.4\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_cost * 2\n                i += 1\n            else:\n                total_cost += bus_cost\n        i += 1\n\n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    is_previous_bus = False\n    \n    for travel in journey:\n        if isinstance(travel, int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                bus_count += 1\n            elif type(journey[i-1]) == int:\n                bus_count += 1\n                if bus_count == 2:\n                    total_cost += bus_cost\n                    bus_count = 0\n        elif type(journey[i]) == str:\n            if i == 0 or type(journey[i-1]) != str:\n                total_cost += tube_cost\n            elif type(journey[i-1]) == str:\n                total_cost += tube_cost\n    \n    if bus_count > 0:\n        total_cost += bus_cost\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_counter = 0\n        else:\n            if bus_counter == 0:\n                total_cost += bus_cost\n            bus_counter = (bus_counter + 1) % 2\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            buses += 1\n            if buses % 2 == 0:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus journeys\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    is_previous_bus = False\n    for journey_type in journey:\n        if isinstance(journey_type, str):\n            total_cost += 2.4\n            is_previous_bus = False\n        else:\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n                \n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    if bus_count == 1:\n        total_cost += bus_fare\n\n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):  # tube journey\n            total_cost += tube_fare\n        else:  # bus journey\n            total_cost += bus_fare\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):  # check if next journey is also a bus journey\n                total_cost += bus_fare\n                i += 1  # skip the next journey\n                \n        i += 1  # move to the next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost += bus_fare\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            if bus_count > 1:\n                total_cost -= bus_count * bus_cost\n                bus_count = 0\n        else:\n            bus_count += 1\n\n    total_cost += bus_count * bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            total_cost += 2.4\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count -= 2\n    \n    total_cost += bus_count * 1.5\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for stop in journey:\n        if isinstance(stop, str):\n            total_cost += tube_cost\n            bus_count = 0\n        else:\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n            else:\n                total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count >= 2:\n                if bus_count % 2 == 0:\n                    total_cost += 1.5\n            else:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):   # Tube journey\n            total_cost += 2.40\n            if bus_count >= 2:   # If there are 2 or more adjacent bus journeys, subtract one bus fare for each set\n                total_cost -= 1.50\n                bus_count -= 2\n        else:   # Bus journey\n            total_cost += 1.50\n            bus_count += 1\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n        else:\n            total_cost += tube_fare\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count = 0\n        else:\n            total_cost += 2.4\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for j in journey:\n        if isinstance(j, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_fare * (bus_count // 2)\n            total_cost += bus_fare * (bus_count % 2)\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += bus_fare * (bus_count // 2)\n    total_cost += bus_fare * (bus_count % 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):  # Tube journey\n            total_cost += 2.40\n            bus_count = 0\n        elif isinstance(item, int):  # Bus journey\n            total_cost += 1.50\n            bus_count += 1\n            \n            if bus_count == 2:  # Cap the bus fare for sets of two adjacent buses\n                total_cost -= 1.50\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    total_cost = 0\n    prev_bus = False\n\n    for item in journey:\n        if isinstance(item, str):\n            total_cost += tube_fare\n            prev_bus = False\n        else:\n            if prev_bus:\n                prev_bus = False\n            else:\n                total_cost += bus_fare\n                prev_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)\n\nprint(london_city_hacker(['Piccadilly', 15, 9, 'Bakerloo', 48]))\nprint(london_city_hacker(['Northern', 'Central', 243, 1, 'Victoria']))",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n            \n    total_cost += (bus_count // 2) * bus_cost\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.50\n                bus_count = 0\n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            is_previous_bus = False\n        else:\n            total_cost += bus_fare\n            if is_previous_bus:\n                total_cost -= bus_fare\n            is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost -= bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for stop in journey:\n        if isinstance(stop, int):\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += 2.4\n            is_previous_bus = False\n\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0 # initialize total cost variable\n    bus_count = 0 # initialize bus count variable\n    \n    for i in range(len(journey)): # iterate through the journey\n        if isinstance(journey[i], int): # check if element is an integer (bus number)\n            total_cost += 1.50 # add bus fare to total cost\n            bus_count += 1 # increment bus count\n            if bus_count >= 2: # check if there are 2 or more adjacent bus journeys\n                total_cost -= 1.50 # subtract bus fare from total cost\n                bus_count = 0 # reset bus count\n        \n        else: # element is a string (tube name)\n            total_cost += 2.40 # add tube fare to total cost\n            \n    return \"\u00a3{:.2f}\".format(total_cost) # return total cost rounded to 2 decimal places",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            tube_count += 1\n            total_cost += tube_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            elif bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 1:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    elif bus_count == 1:\n        total_cost += bus_fare\n        bus_count = 0\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            is_previous_bus = False\n        elif isinstance(journey[i], int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += 1.50\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    for stop in journey:\n        if isinstance(stop, int):  # check if the stop is a bus number\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:  # if there are 2 or more consecutive buses\n                total_cost += (consecutive_buses // 2) * bus_fare  # calculate cost for the sets of 2 buses\n                consecutive_buses = consecutive_buses % 2  # remaining consecutive buses\n            total_cost += consecutive_buses * bus_fare  # calculate cost for the remaining single buses\n            consecutive_buses = 0\n            total_cost += tube_fare  # add tube fare\n    if consecutive_buses >= 2:\n        total_cost += (consecutive_buses // 2) * bus_fare\n        consecutive_buses = consecutive_buses % 2\n    total_cost += consecutive_buses * bus_fare\n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for item in journey:\n        if isinstance(item, int):\n            if not is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i > 0 and type(journey[i-1]) == int:\n                consecutive_buses += 1\n            else:\n                consecutive_buses = 1\n            if consecutive_buses % 2 != 0:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    total_cost = 0\n    i = 0\n    \n    while i < len(journey):\n        \n        if isinstance(journey[i], int):  # if bus journey\n            if i + 1 < len(journey) and isinstance(journey[i+1], int):  # if there is another bus journey after this\n                total_cost += 1.5  # add cost of bus journey\n                i += 2  # skip the next bus journey since cost is capped\n            else:\n                total_cost += 1.5  # add cost of bus journey\n                i += 1\n                \n        else:  # if tube journey\n            total_cost += 2.4  # add cost of tube journey\n            i += 1\n            \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if isinstance(journey[i-1], int):\n                buses += 1\n            else:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n    \n    total_cost += (buses // 2) * 1.5\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n\n    i = 0\n    while i < len(journey):\n\n        if type(journey[i]) == int:\n\n            if i < len(journey) - 1 and type(journey[i+1]) == int:\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n\n        else:\n            total_cost += tube_fare\n\n        i += 1\n\n    return \"\u00a3\" + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    previous_transport = ''\n    bus_count = 0\n    \n    for transport in journey:\n        if isinstance(transport, int):  # Bus journey\n            if previous_transport == 'bus':  # If the previous transport was also a bus\n                bus_count += 1  # Increment the bus count\n                if bus_count >= 2:  # If there are 2 or more adjacent bus journeys\n                    total_cost += bus_fare  # Add one bus fare to the total cost\n                    bus_count = 0  # Reset the bus count\n            else:  # If the previous transport was not a bus\n                total_cost += bus_fare  # Add one bus fare to the total cost\n                bus_count = 0  # Reset the bus count\n                previous_transport = 'bus'  # Set the previous transport to bus\n        else:  # Tube journey\n            total_cost += tube_fare  # Add the tube fare to the total cost\n            previous_transport = 'tube'  # Set the previous transport to tube\n    \n    return '\u00a3{:.2f}'.format(total_cost)"
        ],
        "2": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # If the element is a bus number\n            if not is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else: # If the element is a tube name\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            cost += 1.5\n            bus_count += 1\n            if bus_count == 2:\n                cost -= 1.5\n                bus_count = 0\n        else:\n            cost += 2.4\n            \n    return \"\u00a3{:.2f}\".format(cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count -= 2\n        else:\n            total_cost += 1.50\n            bus_count += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    is_previous_bus = False\n    \n    for item in journey:\n        if isinstance(item, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += 1.5\n                is_previous_bus = True\n        else:\n            total_cost += 2.4\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # bus journey\n            total_cost += bus_fare\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int): # check if next journey is also a bus journey\n                total_cost -= bus_fare # subtract one bus fare as fare is capped for sets of two adjacent buses\n\n        else: # tube journey\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0.0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                consecutive_buses += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    total_cost += bus_fare * (consecutive_buses // 2)\n    total_cost = round(total_cost, 2)\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_counter = 0\n    \n    for j in journey:\n        if isinstance(j, str):  # tube journey\n            total_cost += tube_fare\n            if bus_counter >= 2:\n                total_cost -= bus_fare\n                bus_counter = 0\n        elif isinstance(j, int):  # bus journey\n            total_cost += bus_fare\n            bus_counter += 1\n    \n    if bus_counter >= 2:\n        total_cost -= bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str: # Tube journey\n            total_cost += tube_fare\n        else: # Bus journey\n            bus_count += 1\n            total_cost += bus_fare\n            if bus_count >= 2: # If there are 2 or more adjacent bus journeys\n                total_cost -= bus_fare # Deduct one bus fare\n                bus_count = 0 # Reset bus count\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0.0\n    prev_bus = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                prev_bus = True\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            elif bus_count == 2:\n                bus_count = 1\n            else:\n                bus_count += 1\n        else:\n            total_cost += tube_fare\n            bus_count = 0\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_prev_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            is_prev_bus = False\n        else:\n            if is_prev_bus:\n                is_prev_bus = False\n            else:\n                total_cost += 1.50\n                is_prev_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str:\n            total_cost += tube_fare\n            if bus_count >= 2:\n                total_cost -= bus_fare\n                bus_count = 0\n        else:\n            total_cost += bus_fare\n            bus_count += 1\n    \n    if bus_count >= 2:\n        total_cost -= bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            i += 1\n        else:\n            if i < len(journey)-1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for stop in journey:\n        if isinstance(stop, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    if bus_count == 1:\n        total_cost += bus_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n\n    total_cost = 0\n    bus_counter = 0\n\n    for item in journey:\n        if type(item) == int:\n            bus_counter += 1\n            if bus_counter == 2:\n                total_cost += bus_cost\n                bus_counter = 0\n        else:\n            total_cost += tube_cost\n\n    total_cost += bus_cost * bus_counter\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i > 0 and type(journey[i-1]) == int:\n                bus_count += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    \n    total_cost -= (bus_count // 2) * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or isinstance(journey[i-1], str):\n                total_cost += bus_fare\n                bus_count += 1\n            elif bus_count > 1:\n                total_cost += bus_fare\n                bus_count = 1\n            else:\n                bus_count = 1\n        elif isinstance(journey[i], str):\n            if i == 0 or isinstance(journey[i-1], int):\n                total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            if bus_count >= 2:\n                total_cost -= (bus_cost * (bus_count // 2))\n                bus_count = 0\n        else:\n            total_cost += bus_cost\n            bus_count += 1\n    if bus_count >= 2:\n        total_cost -= (bus_cost * (bus_count // 2))\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n\n    total_cost = 0.0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, str):\n            total_cost += tube_cost\n            if bus_count >= 2:\n                total_cost -= bus_cost\n                bus_count = 0\n        else:\n            total_cost += bus_cost\n            bus_count += 1\n\n    total_cost -= (bus_count // 2) * bus_cost\n\n    return '\u00a3{:.2f}'.format(total_cost)"
        ],
        "3": [
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or not isinstance(journey[i-1], int):\n                total_cost += bus_cost\n            elif isinstance(journey[i-1], int) and isinstance(journey[i-2], int):\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    return \"\u00a3\" + format(total_cost, \".2f\")",
            "def london_city_hacker(journey):\n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if type(journey[i]) == int:\n            if i < len(journey)-1 and type(journey[i+1]) == int:\n                total_cost += bus_cost\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        elif type(journey[i]) == str:\n            total_cost += tube_cost\n            i += 1\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    prev_bus = False\n    \n    for j in journey:\n        if isinstance(j, str):\n            total_cost += tube_cost\n            prev_bus = False\n        elif isinstance(j, int):\n            total_cost += bus_cost\n            if prev_bus:\n                total_cost -= bus_cost\n            prev_bus = True\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        else:\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_cost\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                total_cost += bus_cost\n            else:\n                bus_count += 1\n                \n        elif type(journey[i]) == str:\n            if i == 0 or type(journey[i-1]) == int:\n                total_cost += tube_cost\n            \n            if bus_count >= 2:\n                total_cost += bus_cost\n                bus_count = 0\n    \n    total_cost = round(total_cost, 2)\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n\n    total_cost = 0.00\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost\n                bus_count -= 2\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_cost\n        bus_count %= 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n        bus_count = 0\n\n    total_cost = round(total_cost, 2)\n    return f\"\u00a3{total_cost:.2f}\"\n\nprint(london_city_hacker(['Piccadilly', 15, 9, 'Bakerloo', 48]))  # \u00a37.80\nprint(london_city_hacker(['Central', 3, 24, 'Northern', 52]))  # \u00a37.80\nprint(london_city_hacker([1, 'Victoria', 2, 3, 'Circle']))  # \u00a37.80",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_counter = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_counter += 1\n        else:\n            total_cost += tube_cost\n            if bus_counter >= 2:\n                total_cost -= bus_cost\n            bus_counter = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += bus_fare\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    previous_is_bus = False\n    \n    for location in journey: \n        if isinstance(location, str):\n            total_cost += 2.4\n            previous_is_bus = False\n        else:\n            if previous_is_bus:\n                total_cost += 0\n            else:\n                total_cost += 1.5\n            previous_is_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost -= bus_fare\n            total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(round(total_cost, 2))",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost -= bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for trip in journey:\n        if isinstance(trip, int):\n            total_cost += 1.50\n            bus_count += 1\n        else:\n            total_cost += 2.40\n\n    if bus_count >= 2:\n        total_cost -= 1.50\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str: # Tube journey\n            total_cost += tube_cost\n            is_previous_bus = False\n        else: # Bus journey\n            total_cost += bus_cost\n            if is_previous_bus:\n                total_cost -= bus_cost\n            is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if not is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            i += 1\n        else:\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, str):\n            total_cost += tube_fare\n            bus_count = 0\n        elif isinstance(item, int):\n            total_cost += bus_fare\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_fare\n                bus_count = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    adjacent_buses = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):  # If the current element is a tube name\n            total_cost += tube_cost\n        else:  # If the current element is a bus number\n            if i > 0 and isinstance(journey[i-1], int):  # If the previous element is also a bus number\n                adjacent_buses += 1\n            else:\n                total_cost += bus_cost\n    if adjacent_buses > 0:\n        total_cost -= bus_cost * (adjacent_buses // 2)  # Subtract the cost of the capped bus fares\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    prev_journey = \"\"\n    \n    for j in journey:\n        if isinstance(j, str): # if it is a tube journey\n            total_cost += tube_fare\n        elif isinstance(j, int): # if it is a bus journey\n            total_cost += bus_fare\n            if prev_journey == \"bus\": # if the previous journey was also a bus journey\n                total_cost -= bus_fare # subtract one bus fare as the set of two adjacent buses is considered as one fare\n        prev_journey = \"bus\" if isinstance(j, int) else \"tube\"\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "4": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for stop in journey:\n        if isinstance(stop, str):  # tube journey\n            total_cost += tube_fare\n            consecutive_buses = 0\n        else:  # bus journey\n            consecutive_buses += 1\n            if consecutive_buses > 1:\n                consecutive_buses = 0\n                continue  # skip the fare calculation for this bus journey\n                \n            total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                total_cost += bus_fare\n            else:\n                bus_count += 1\n                if bus_count == 2:\n                    total_cost += bus_fare\n                    bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_fare\n                \n        else:\n            total_cost += tube_fare\n            if bus_count > 1:\n                total_cost += bus_fare * (bus_count // 2)\n                bus_count = 0\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    \n    is_previous_bus = False\n    for stop in journey:\n        if isinstance(stop, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_counter = 0\n    \n    for item in journey:\n        if type(item) == str:  # tube journey\n            total_cost += tube_fare\n            bus_counter = 0\n        elif type(item) == int:  # bus journey\n            bus_counter += 1\n            if bus_counter == 2:\n                bus_counter = 0\n            else:\n                total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.4\n    bus_fare = 1.5\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_fare * (bus_count // 2 + 1)\n                bus_count = 0\n    \n    return \"\u00a3\" + format(round(total_cost, 2), \".2f\")",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                bus_count += 1\n        else:\n            total_cost += 2.4\n    \n    total_cost -= bus_count * 1.5\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in journey:\n        if isinstance(i, int):\n            bus_count += 1\n        else:\n            if bus_count > 0:\n                total_cost += (bus_fare * ((bus_count + 1) // 2))\n                bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count > 0:\n        total_cost += (bus_fare * ((bus_count + 1) // 2))\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                bus_count += 1\n            else:\n                bus_count += 1\n                total_cost += (bus_count//2) * bus_fare\n                total_cost += (bus_count%2) * bus_fare\n                bus_count = 0\n        else:\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    total_cost += bus_count * bus_fare\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for journey_item in journey:\n        if type(journey_item) == int:\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    total_cost += bus_count * bus_fare\n    \n    return \"\u00a3\" + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            total_cost += bus_fare\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                i += 1\n        elif isinstance(journey[i], str):\n            total_cost += tube_fare\n        i += 1\n\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)"
        ]
    }
}