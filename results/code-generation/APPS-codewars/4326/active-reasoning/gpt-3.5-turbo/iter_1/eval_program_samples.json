{
    "0": {
        "0": [
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, str):\n            total_cost += 2.40\n            bus_count = 0\n        else:\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost += 1.50\n                bus_count = 0\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in journey:\n        if isinstance(i, int):\n            bus_count += 1\n        else:\n            total_cost += bus_count // 2 * bus_cost\n            total_cost += bus_count % 2 * bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n    \n    total_cost += bus_count // 2 * bus_cost\n    total_cost += bus_count % 2 * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            total_cost += 2.40\n        else:\n            bus_count += 1\n            total_cost += 1.50\n            \n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n        \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.00\n    is_previous_bus = False\n\n    for element in journey:\n        if isinstance(element, int):  # check if element is an integer (bus number)\n            if is_previous_bus:\n                total_cost += bus_fare  # add bus fare for the second bus in a set\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:  # element is a string (tube name)\n            total_cost += tube_fare\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost * 2\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        else:\n            total_cost += tube_cost\n            i += 1\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_bus = False\n    \n    for item in journey:\n        if isinstance(item, str):\n            total_cost += 2.40\n            is_bus = False\n        else:\n            if is_bus:\n                is_bus = False\n            else:\n                total_cost += 1.50\n                is_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in journey:\n        if type(i) == str:  # Tube journey\n            total_cost += tube_cost\n            bus_count = 0\n        else:  # Bus journey\n            bus_count += 1\n            if bus_count == 2:  # Cap fare for two adjacent buses\n                total_cost += bus_cost\n                bus_count = 0\n                \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, str):\n            total_cost += tube_cost\n            consecutive_buses = 0\n        else:\n            if consecutive_buses == 1:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            elif consecutive_buses > 1:\n                total_cost += (consecutive_buses * bus_cost)\n                consecutive_buses = 0\n            else:\n                consecutive_buses += 1\n    \n    if consecutive_buses == 1:\n        total_cost += bus_cost\n    elif consecutive_buses > 1:\n        total_cost += (consecutive_buses * bus_cost)\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += 1.5\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += 1.5\n                bus_count = 0\n            total_cost += 2.4\n    \n    if bus_count > 1:\n        total_cost += 1.5\n    elif bus_count == 1:\n        total_cost += 1.5\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        # if the current element is a tube name\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        # if the current element is a bus number\n        elif isinstance(journey[i], int):\n            # if there are at least two adjacent bus numbers\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                total_cost += 2 * bus_fare\n                i += 1\n            # if there is only one bus number\n            else:\n                total_cost += bus_fare\n        \n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_count // 2 * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_fare\n\n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for journey_element in journey:\n        if isinstance(journey_element, str):\n            # Tube journey\n            total_cost += 2.40\n            is_previous_bus = False\n        else:\n            # Bus journey\n            total_cost += 1.50\n\n            if is_previous_bus:\n                # Set of two adjacent bus journeys\n                total_cost -= 1.50\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            \n            if i+1 < len(journey) and isinstance(journey[i+1], int):  # check if next journey is also a bus journey\n                total_cost += 1.5\n                i += 1  # skip the next journey as it has already been accounted for\n                \n        else:  # tube journey\n            total_cost += 2.4\n            \n        i += 1  # move to next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if type(item) == int:\n            bus_count += 1\n        else:\n            total_cost += bus_count // 2 * 1.5\n            bus_count = 0\n            total_cost += 2.4\n    \n    total_cost += bus_count // 2 * 1.5\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    \n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "```\n    total_cost = 0\n    bus_counter = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            bus_counter = 0\n        else:\n            bus_counter += 1\n            if bus_counter == 2:\n                total_cost += 1.50\n                bus_counter = 0\n    return '\u00a3{:.2f}'.format(total_cost)\n```",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.50\n        else:\n            total_cost += 2.40\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.4\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.5\n                bus_count = 0\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if type(stop) == str:  # Tube journey\n            total_cost += tube_cost\n            is_previous_bus = False\n        else:  # Bus journey\n            if is_previous_bus:\n                total_cost += bus_cost  # Only add bus cost for the second bus in a set of adjacent buses\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n        elif isinstance(journey[i], str):\n            total_cost += 2.4\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count = 0\n    \n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n    \n    total_cost += bus_count * bus_fare\n    \n    return '\u00a3' + format(total_cost, '.2f')",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.5\n                bus_count = 0\n        else:\n            total_cost += 2.4\n\n    if bus_count == 1:\n        total_cost += 1.5\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0.0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str): # Tube journey\n            total_cost += 2.40\n            bus_count = 0\n        else: # Bus journey\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n            else:\n                total_cost += 1.50\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for stop in journey:\n        if isinstance(stop, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    if bus_count > 0:\n        total_cost += bus_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            total_cost += bus_fare\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                i += 1\n        else:\n            total_cost += tube_fare\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        else:\n            if bus_count < 2:\n                total_cost += bus_cost\n                bus_count += 1\n            else:\n                bus_count = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            if bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n\n            if bus_count == 2:\n                total_cost -= 1.5\n                bus_count = 0\n        else:\n            total_cost += 2.4\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.50\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n        else:\n            total_cost += 2.40\n            bus_count = 0\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):  # Tube journey\n            tube_count += 1\n            total_cost += 2.40\n        \n        elif isinstance(item, int):  # Bus journey\n            bus_count += 1\n            total_cost += 1.50\n            \n            if bus_count == 2:  # Check if there are 2 adjacent bus journeys\n                total_cost -= 1.50  # Deduct the cost of the second bus journey\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for step in journey:\n        if isinstance(step, int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare * 2\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost += bus_fare * 2\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n    \n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n        else:\n            total_cost += tube_fare\n            i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    num_bus_journeys = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            num_bus_journeys += 1\n            if num_bus_journeys % 2 == 0:\n                total_cost += bus_fare\n        else:\n            if num_bus_journeys > 0:\n                total_cost += bus_fare\n                num_bus_journeys = 0\n            total_cost += tube_fare\n    \n    if num_bus_journeys > 0:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            consecutive_buses = 0\n        else:\n            total_cost += 1.50\n            consecutive_buses += 1\n            \n            if consecutive_buses == 2:\n                total_cost -= 1.50\n                consecutive_buses = 0\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        else:\n            total_cost += tube_cost\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += 1.5\n            bus_count += 1\n            \n            if bus_count == 2:\n                total_cost -= 1.5\n                bus_count = 0\n        \n        elif type(journey[i]) == str:\n            total_cost += 2.4\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    count = 0\n    bus_flag = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if not bus_flag:\n                total_cost += bus_cost\n                count = 1\n                bus_flag = True\n            else:\n                count += 1\n                if count == 2:\n                    total_cost += bus_cost\n                    count = 0\n        else:\n            if bus_flag:\n                count = 0\n                bus_flag = False\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "2": [
            "def london_city_hacker(journey):\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.50\n            consecutive_buses += 1\n            \n            if consecutive_buses == 2:\n                total_cost -= 1.50\n                consecutive_buses = 0\n        \n        else:\n            total_cost += 2.40\n            consecutive_buses = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        # Check if current element is a bus number\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus numbers\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += 1.50\n                i += 2\n            else:\n                total_cost += 1.50\n                i += 1\n        \n        # Check if current element is a tube name\n        elif isinstance(journey[i], str):\n            total_cost += 2.40\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # check if element is a bus number\n            total_cost += 1.5  # add bus fare of \u00a31.50\n            bus_count += 1  # increment bus count\n            if bus_count >= 2:  # check if there are 2 or more adjacent bus journeys\n                total_cost -= 1.5  # subtract bus fare of \u00a31.50\n                bus_count = 0  # reset bus count to 0\n        else:  # element is a tube name\n            total_cost += 2.4  # add tube fare of \u00a32.40\n            bus_count = 0  # reset bus count to 0\n    return \"\u00a3{:.2f}\".format(total_cost)  # format total cost as string with 2 decimal places",
            "def london_city_hacker(journey): \n    cost = 0\n    prev_bus = False\n    for item in journey:\n        if isinstance(item, int):\n            cost += 1.50\n            if prev_bus:\n                prev_bus = False\n                cost -= 1.50\n            else:\n                prev_bus = True\n        else:\n            cost += 2.40\n            prev_bus = False\n    return \"\u00a3{:.2f}\".format(cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.50\n            bus_count += 1\n            \n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n        \n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            \n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n        else:\n            if bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    total_cost += bus_count * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_bus_journey = False\n    consecutive_bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            is_bus_journey = True\n            consecutive_bus_count += 1\n            total_cost += 1.5\n        else:\n            if is_bus_journey:\n                total_cost -= 1.5 * (consecutive_bus_count // 2)\n                consecutive_bus_count = 0\n                is_bus_journey = False\n            total_cost += 2.4\n    \n    if is_bus_journey:\n        total_cost -= 1.5 * (consecutive_bus_count // 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost * 2\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count >= 2:\n        total_cost += bus_cost * 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    prev_is_bus = False\n    \n    for location in journey:\n        if isinstance(location, int):\n            if prev_is_bus:\n                prev_is_bus = False\n            else:\n                total_cost += bus_fare\n                prev_is_bus = True\n        else:\n            total_cost += tube_fare\n            prev_is_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    adjacent_buses = 0\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            adjacent_buses += 1\n        else:\n            if adjacent_buses >= 2:\n                total_cost += bus_fare\n            elif adjacent_buses == 1:\n                total_cost += bus_fare\n                adjacent_buses = 0\n            total_cost += tube_fare\n    \n    if adjacent_buses >= 2:\n        total_cost += bus_fare\n    elif adjacent_buses == 1:\n        total_cost += bus_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for trip in journey:\n        if isinstance(trip, str):\n            total_cost += tube_fare\n            if bus_count >= 2:\n                total_cost -= bus_fare\n                bus_count -= 2\n            bus_count = 0\n        else:\n            total_cost += bus_fare\n            bus_count += 1\n    \n    if bus_count >= 2:\n        total_cost -= bus_fare\n        bus_count -= 2\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "3": [
            "def london_city_hacker(journey):\n    cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            cost += 2.40\n            if bus_count >= 2:\n                cost -= 1.50\n            bus_count = 0\n        else:\n            cost += 1.50\n            bus_count += 1\n    if bus_count >= 2:\n        cost -= 1.50\n    return \"\u00a3{:.2f}\".format(cost)\n\nprint(london_city_hacker([1, 2, 3, 'Northern']))\nprint(london_city_hacker([1, 'Victoria', 3, 'Central', 'Northern']))\nprint(london_city_hacker([1, 2, 'Victoria', 'Northern', 'Central']))",
            "def london_city_hacker(journey): \n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int): # bus journey\n            if i < len(journey)-1 and isinstance(journey[i+1], int): # if next element is also a bus journey\n                total_cost += 1.5 # add bus fare\n                i += 2 # skip next element\n            else: # if next element is not a bus journey\n                total_cost += 1.5 # add bus fare\n                i += 1\n        else: # tube journey\n            total_cost += 2.4 # add tube fare\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for trip in journey:\n        if isinstance(trip, int):\n            if is_previous_bus:\n                is_previous_bus = False\n                continue\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += 1.50\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost -= 1.50\n            total_cost += 2.40\n            consecutive_buses = 0\n    \n    if consecutive_buses >= 2:\n        total_cost -= 1.50\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            i += 1\n        else:\n            if i + 1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.5\n                bus_count = 0\n        else:\n            tube_count += 1\n            if bus_count > 0:\n                total_cost += 1.5\n                bus_count = 0\n            total_cost += 2.4\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for trip in journey:\n        if isinstance(trip, int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare * (consecutive_buses // 2)\n                consecutive_buses = consecutive_buses % 2\n            \n            total_cost += bus_fare * consecutive_buses\n            consecutive_buses = 0\n            \n            total_cost += tube_fare\n            \n    if consecutive_buses >= 2:\n        total_cost += bus_fare * (consecutive_buses // 2)\n        consecutive_buses = consecutive_buses % 2\n    \n    total_cost += bus_fare * consecutive_buses\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n                total_cost -= 1.5\n        else:\n            total_cost += 2.4\n            bus_count = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n        else:\n            total_cost += tube_cost\n            if bus_count >= 2:\n                total_cost -= bus_cost\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "4": [
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):  # Tube journey\n            total_cost += tube_cost\n            i += 1\n        elif isinstance(journey[i], int):  # Bus journey\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):  # Check if there is another bus journey\n                total_cost += bus_cost  # Add bus fare for the current bus journey\n                i += 1  # Skip the next bus journey\n            else:\n                total_cost += bus_cost\n            i += 1\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n        else:\n            if bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count == 1:\n        total_cost += bus_cost\n\n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    adjacent_bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                adjacent_bus_count += 1\n            else:\n                total_cost += bus_fare\n        elif isinstance(journey[i], str):\n            total_cost += tube_fare\n    \n    bus_sets = adjacent_bus_count // 2\n    total_cost += bus_sets * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += bus_fare\n            bus_count += 1\n            \n            if bus_count == 2:  # cap bus fare after 2 consecutive bus journeys\n                total_cost -= bus_fare\n                bus_count = 0\n                \n        else:  # tube journey\n            total_cost += tube_fare\n            bus_count = 0\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    i = 0\n    \n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n        else:\n            total_cost += tube_fare\n            i += 1\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    is_last_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_last_bus:\n                is_last_bus = False\n                continue\n            else:\n                total_cost += bus_cost\n                is_last_bus = True\n        else:\n            total_cost += tube_cost\n            is_last_bus = False\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.00\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, int): # if item is a bus number\n            bus_count += 1\n        else: # if item is a tube name\n            if bus_count >= 2: # if there are 2 or more adjacent bus journeys\n                total_cost += bus_fare * (bus_count // 2) # add bus fare for each set of two adjacent buses\n            if bus_count % 2 == 1: # if there is one remaining bus journey\n                total_cost += bus_fare # add bus fare for the remaining bus journey\n            bus_count = 0 # reset bus count\n            \n            total_cost += tube_fare # add tube fare\n        \n    if bus_count >= 2: # if there are 2 or more adjacent bus journeys\n        total_cost += bus_fare * (bus_count // 2) # add bus fare for each set of two adjacent buses\n    if bus_count % 2 == 1: # if there is one remaining bus journey\n        total_cost += bus_fare # add bus fare for the remaining bus journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str:  # if tube journey\n            total_cost += tube_fare\n            if bus_count >= 2:  # if there are 2 or more adjacent bus journeys\n                total_cost -= bus_fare\n            bus_count = 0  # reset bus count\n        else:  # if bus journey\n            total_cost += bus_fare\n            bus_count += 1\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    total_cost = 0\n\n    is_previous_bus = False\n\n    for step in journey:\n        if isinstance(step, int):\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += 2.4\n            is_previous_bus = False\n\n    return '\u00a3' + format(total_cost, '.2f')",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for stop in journey:\n        if isinstance(stop, str): # tube journey\n            total_cost += tube_fare\n            bus_count = 0\n        elif isinstance(stop, int): # bus journey\n            bus_count += 1\n            total_cost += bus_fare\n            if bus_count >= 2: # cap bus fare for sets of two adjacent buses\n                total_cost -= bus_fare\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    \n    for trip in journey:\n        if isinstance(trip, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            if bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):  # if next journey is also bus, skip it\n                i += 1\n        else:  # tube journey\n            total_cost += 2.4\n        i += 1\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    total_cost += bus_count * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            cost += 2.40\n        else:\n            cost += 1.50\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                i += 1\n        i += 1\n    return '\u00a3' + '{:.2f}'.format(cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    num_buses = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            num_buses += 1\n        else:\n            if num_buses >= 2:\n                total_cost += bus_fare * (num_buses // 2)\n                num_buses = num_buses % 2\n\n            total_cost += bus_fare * num_buses + tube_fare\n            num_buses = 0\n\n    if num_buses >= 2:\n        total_cost += bus_fare * (num_buses // 2)\n        num_buses = num_buses % 2\n\n    total_cost += bus_fare * num_buses\n\n    return \"\u00a3{:.2f}\".format(total_cost)\n\nprint(london_city_hacker([1, 2, 3, 'Northern']))\nprint(london_city_hacker([1, 'Victoria', 3, 'Central', 'Northern']))\nprint(london_city_hacker([1, 2, 'Victoria', 'Northern', 'Central']))\nprint(london_city_hacker(['Central', 'Northern', 'Victoria', 2]))"
        ]
    },
    "1": {
        "0": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        # if the current element is a tube name\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        # if the current element is a bus number\n        elif isinstance(journey[i], int):\n            # if there are at least two adjacent bus numbers\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                total_cost += 2 * bus_fare\n                i += 1\n            # if there is only one bus number\n            else:\n                total_cost += bus_fare\n        \n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_count // 2 * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_fare\n\n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for journey_element in journey:\n        if isinstance(journey_element, str):\n            # Tube journey\n            total_cost += 2.40\n            is_previous_bus = False\n        else:\n            # Bus journey\n            total_cost += 1.50\n\n            if is_previous_bus:\n                # Set of two adjacent bus journeys\n                total_cost -= 1.50\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            \n            if i+1 < len(journey) and isinstance(journey[i+1], int):  # check if next journey is also a bus journey\n                total_cost += 1.5\n                i += 1  # skip the next journey as it has already been accounted for\n                \n        else:  # tube journey\n            total_cost += 2.4\n            \n        i += 1  # move to next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if type(item) == int:\n            bus_count += 1\n        else:\n            total_cost += bus_count // 2 * 1.5\n            bus_count = 0\n            total_cost += 2.4\n    \n    total_cost += bus_count // 2 * 1.5\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    \n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "```\n    total_cost = 0\n    bus_counter = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            bus_counter = 0\n        else:\n            bus_counter += 1\n            if bus_counter == 2:\n                total_cost += 1.50\n                bus_counter = 0\n    return '\u00a3{:.2f}'.format(total_cost)\n```",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.50\n        else:\n            total_cost += 2.40\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.4\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.5\n                bus_count = 0\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if type(stop) == str:  # Tube journey\n            total_cost += tube_cost\n            is_previous_bus = False\n        else:  # Bus journey\n            if is_previous_bus:\n                total_cost += bus_cost  # Only add bus cost for the second bus in a set of adjacent buses\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            consecutive_buses += 1\n            if consecutive_buses == 2:\n                total_cost += bus_cost\n                consecutive_buses = 0\n        else:\n            if consecutive_buses > 0:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            total_cost += tube_cost\n    \n    if consecutive_buses > 0:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            if consecutive_buses == 0:\n                total_cost += 1.5\n                consecutive_buses += 1\n            else:\n                consecutive_buses += 1\n                \n                if consecutive_buses == 2:\n                    consecutive_buses = 0\n        else:\n            total_cost += 2.4\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_cost * 2\n                i += 1\n            else:\n                total_cost += bus_cost\n        i += 1\n\n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    is_previous_bus = False\n    \n    for travel in journey:\n        if isinstance(travel, int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += bus_cost * ((bus_count + 1) // 2)\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count > 1:\n        total_cost += bus_cost * ((bus_count + 1) // 2)\n    elif bus_count == 1:\n        total_cost += bus_cost\n    \n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_counter = 0\n        else:\n            if bus_counter == 0:\n                total_cost += bus_cost\n            bus_counter = (bus_counter + 1) % 2\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            buses += 1\n            if buses % 2 == 0:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus journeys\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    is_previous_bus = False\n    for journey_type in journey:\n        if isinstance(journey_type, str):\n            total_cost += 2.4\n            is_previous_bus = False\n        else:\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n                \n    return \"\u00a3{:0.2f}\".format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey):\n    total_cost = 0\n    \n    # check if there are any bus journeys\n    if any(isinstance(j, int) for j in journey):\n        bus_journeys = []\n        bus_count = 0\n        for j in journey:\n            if isinstance(j, int):\n                bus_count += 1\n            else:\n                if bus_count > 0:\n                    bus_journeys.append(bus_count)\n                    bus_count = 0\n        \n        # add bus fares to total cost\n        for buses in bus_journeys:\n            total_cost += 1.5 * (buses // 2 + buses % 2)\n    \n    # add tube fares to total cost\n    tube_count = sum(1 for j in journey if isinstance(j, str))\n    total_cost += 2.4 * tube_count\n    \n    # format total cost as currency\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            total_cost += bus_fare\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                i += 1\n        else:\n            total_cost += tube_fare\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        else:\n            if bus_count < 2:\n                total_cost += bus_cost\n                bus_count += 1\n            else:\n                bus_count = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n\n            if bus_count == 2:\n                total_cost -= 1.5\n                bus_count = 0\n        else:\n            total_cost += 2.4\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.50\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n        else:\n            total_cost += 2.40\n            bus_count = 0\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):  # Tube journey\n            tube_count += 1\n            total_cost += 2.40\n        \n        elif isinstance(item, int):  # Bus journey\n            bus_count += 1\n            total_cost += 1.50\n            \n            if bus_count == 2:  # Check if there are 2 adjacent bus journeys\n                total_cost -= 1.50  # Deduct the cost of the second bus journey\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for step in journey:\n        if isinstance(step, int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare * 2\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost += bus_fare * 2\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n    \n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n        else:\n            total_cost += tube_fare\n            i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    num_bus_journeys = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            num_bus_journeys += 1\n            if num_bus_journeys % 2 == 0:\n                total_cost += bus_fare\n        else:\n            if num_bus_journeys > 0:\n                total_cost += bus_fare\n                num_bus_journeys = 0\n            total_cost += tube_fare\n    \n    if num_bus_journeys > 0:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            consecutive_buses = 0\n        else:\n            total_cost += 1.50\n            consecutive_buses += 1\n            \n            if consecutive_buses == 2:\n                total_cost -= 1.50\n                consecutive_buses = 0\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        else:\n            total_cost += tube_cost\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += 1.5\n            bus_count += 1\n            \n            if bus_count == 2:\n                total_cost -= 1.5\n                bus_count = 0\n        \n        elif type(journey[i]) == str:\n            total_cost += 2.4\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    count = 0\n    bus_flag = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if not bus_flag:\n                total_cost += bus_cost\n                count = 1\n                bus_flag = True\n            else:\n                count += 1\n                if count == 2:\n                    total_cost += bus_cost\n                    count = 0\n        else:\n            if bus_flag:\n                count = 0\n                bus_flag = False\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or isinstance(journey[i-1], str):\n                total_cost += 1.5\n            elif isinstance(journey[i-1], int):\n                bus_count += 1\n        elif isinstance(journey[i], str):\n            if i == 0 or isinstance(journey[i-1], int):\n                total_cost += 2.4\n            elif isinstance(journey[i-1], str):\n                tube_count += 1\n    total_cost += (bus_count // 2) * 1.5\n    total_cost += tube_count * 2.4\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n        else:\n            total_cost += 2.4\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count = 0\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_fare * 2)\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            \n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_fare * 2)\n    elif bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if i == len(journey) - 1 or not isinstance(journey[i+1], int):\n                if bus_count >= 2:\n                    total_cost += bus_fare * 2\n                else:\n                    total_cost += bus_fare\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "2": [
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        # Check if current element is a bus number\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus numbers\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += 1.50\n                i += 2\n            else:\n                total_cost += 1.50\n                i += 1\n        \n        # Check if current element is a tube name\n        elif isinstance(journey[i], str):\n            total_cost += 2.40\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # check if element is a bus number\n            total_cost += 1.5  # add bus fare of \u00a31.50\n            bus_count += 1  # increment bus count\n            if bus_count >= 2:  # check if there are 2 or more adjacent bus journeys\n                total_cost -= 1.5  # subtract bus fare of \u00a31.50\n                bus_count = 0  # reset bus count to 0\n        else:  # element is a tube name\n            total_cost += 2.4  # add tube fare of \u00a32.40\n            bus_count = 0  # reset bus count to 0\n    return \"\u00a3{:.2f}\".format(total_cost)  # format total cost as string with 2 decimal places",
            "def london_city_hacker(journey): \n    cost = 0\n    prev_bus = False\n    for item in journey:\n        if isinstance(item, int):\n            cost += 1.50\n            if prev_bus:\n                prev_bus = False\n                cost -= 1.50\n            else:\n                prev_bus = True\n        else:\n            cost += 2.40\n            prev_bus = False\n    return \"\u00a3{:.2f}\".format(cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.50\n            bus_count += 1\n            \n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n        \n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            \n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n        else:\n            if bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    total_cost += bus_count * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_bus_journey = False\n    consecutive_bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            is_bus_journey = True\n            consecutive_bus_count += 1\n            total_cost += 1.5\n        else:\n            if is_bus_journey:\n                total_cost -= 1.5 * (consecutive_bus_count // 2)\n                consecutive_bus_count = 0\n                is_bus_journey = False\n            total_cost += 2.4\n    \n    if is_bus_journey:\n        total_cost -= 1.5 * (consecutive_bus_count // 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost * 2\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count >= 2:\n        total_cost += bus_cost * 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    prev_is_bus = False\n    \n    for location in journey:\n        if isinstance(location, int):\n            if prev_is_bus:\n                prev_is_bus = False\n            else:\n                total_cost += bus_fare\n                prev_is_bus = True\n        else:\n            total_cost += tube_fare\n            prev_is_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    adjacent_buses = 0\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            adjacent_buses += 1\n        else:\n            if adjacent_buses >= 2:\n                total_cost += bus_fare\n            elif adjacent_buses == 1:\n                total_cost += bus_fare\n                adjacent_buses = 0\n            total_cost += tube_fare\n    \n    if adjacent_buses >= 2:\n        total_cost += bus_fare\n    elif adjacent_buses == 1:\n        total_cost += bus_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for trip in journey:\n        if isinstance(trip, str):\n            total_cost += tube_fare\n            if bus_count >= 2:\n                total_cost -= bus_fare\n                bus_count -= 2\n            bus_count = 0\n        else:\n            total_cost += bus_fare\n            bus_count += 1\n    \n    if bus_count >= 2:\n        total_cost -= bus_fare\n        bus_count -= 2\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            total_cost += bus_fare * (bus_count // 2 + bus_count % 2)\n            bus_count = 0\n            total_cost += tube_fare\n\n    total_cost += bus_fare * (bus_count // 2 + bus_count % 2)\n\n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "3": [
            "def london_city_hacker(journey): \n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int): # bus journey\n            if i < len(journey)-1 and isinstance(journey[i+1], int): # if next element is also a bus journey\n                total_cost += 1.5 # add bus fare\n                i += 2 # skip next element\n            else: # if next element is not a bus journey\n                total_cost += 1.5 # add bus fare\n                i += 1\n        else: # tube journey\n            total_cost += 2.4 # add tube fare\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for trip in journey:\n        if isinstance(trip, int):\n            if is_previous_bus:\n                is_previous_bus = False\n                continue\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += 1.50\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost -= 1.50\n            total_cost += 2.40\n            consecutive_buses = 0\n    \n    if consecutive_buses >= 2:\n        total_cost -= 1.50\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.4\n    bus_fare = 1.5\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            i += 1\n        else:\n            if i + 1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for trip in journey:\n        if isinstance(trip, int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare * (consecutive_buses // 2)\n                consecutive_buses = consecutive_buses % 2\n            \n            total_cost += bus_fare * consecutive_buses\n            consecutive_buses = 0\n            \n            total_cost += tube_fare\n            \n    if consecutive_buses >= 2:\n        total_cost += bus_fare * (consecutive_buses // 2)\n        consecutive_buses = consecutive_buses % 2\n    \n    total_cost += bus_fare * consecutive_buses\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n                total_cost -= 1.5\n        else:\n            total_cost += 2.4\n            bus_count = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n        else:\n            total_cost += tube_cost\n            if bus_count >= 2:\n                total_cost -= bus_cost\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "4": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    adjacent_bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                adjacent_bus_count += 1\n            else:\n                total_cost += bus_fare\n        elif isinstance(journey[i], str):\n            total_cost += tube_fare\n    \n    bus_sets = adjacent_bus_count // 2\n    total_cost += bus_sets * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += bus_fare\n            bus_count += 1\n            \n            if bus_count == 2:  # cap bus fare after 2 consecutive bus journeys\n                total_cost -= bus_fare\n                bus_count = 0\n                \n        else:  # tube journey\n            total_cost += tube_fare\n            bus_count = 0\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    i = 0\n    \n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n        else:\n            total_cost += tube_fare\n            i += 1\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n\n    for item in journey:\n        if isinstance(item, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.00\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, int): # if item is a bus number\n            bus_count += 1\n        else: # if item is a tube name\n            if bus_count >= 2: # if there are 2 or more adjacent bus journeys\n                total_cost += bus_fare * (bus_count // 2) # add bus fare for each set of two adjacent buses\n            if bus_count % 2 == 1: # if there is one remaining bus journey\n                total_cost += bus_fare # add bus fare for the remaining bus journey\n            bus_count = 0 # reset bus count\n            \n            total_cost += tube_fare # add tube fare\n        \n    if bus_count >= 2: # if there are 2 or more adjacent bus journeys at the end of the journey\n        total_cost += bus_fare * (bus_count // 2) # add bus fare for each set of two adjacent buses\n    if bus_count % 2 == 1: # if there is one remaining bus journey at the end of the journey\n        total_cost += bus_fare # add bus fare for the remaining bus journey\n    \n    return \"\u00a3\" + format(total_cost, \".2f\")",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str:  # if tube journey\n            total_cost += tube_fare\n            if bus_count >= 2:  # if there are 2 or more adjacent bus journeys\n                total_cost -= bus_fare\n            bus_count = 0  # reset bus count\n        else:  # if bus journey\n            total_cost += bus_fare\n            bus_count += 1\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    total_cost = 0\n\n    is_previous_bus = False\n\n    for step in journey:\n        if isinstance(step, int):\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += 2.4\n            is_previous_bus = False\n\n    return '\u00a3' + format(total_cost, '.2f')",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for stop in journey:\n        if isinstance(stop, str): # tube journey\n            total_cost += tube_fare\n            bus_count = 0\n        elif isinstance(stop, int): # bus journey\n            bus_count += 1\n            total_cost += bus_fare\n            if bus_count >= 2: # cap bus fare for sets of two adjacent buses\n                total_cost -= bus_fare\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    \n    for trip in journey:\n        if isinstance(trip, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            if bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):  # if next journey is also bus, skip it\n                i += 1\n        else:  # tube journey\n            total_cost += 2.4\n        i += 1\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            cost += 2.40\n        else:\n            cost += 1.50\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                i += 1\n        i += 1\n    return '\u00a3' + '{:.2f}'.format(cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    num_buses = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            num_buses += 1\n        else:\n            if num_buses >= 2:\n                total_cost += bus_fare * (num_buses // 2)\n                num_buses = num_buses % 2\n\n            total_cost += bus_fare * num_buses + tube_fare\n            num_buses = 0\n\n    if num_buses >= 2:\n        total_cost += bus_fare * (num_buses // 2)\n        num_buses = num_buses % 2\n\n    total_cost += bus_fare * num_buses\n\n    return \"\u00a3{:.2f}\".format(total_cost)\n\nprint(london_city_hacker([1, 2, 3, 'Northern']))\nprint(london_city_hacker([1, 'Victoria', 3, 'Central', 'Northern']))\nprint(london_city_hacker([1, 2, 'Victoria', 'Northern', 'Central']))\nprint(london_city_hacker(['Central', 'Northern', 'Victoria', 2]))",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            \n            if bus_count >= 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            if bus_count > 0:\n                total_cost += bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 0:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count = 0\n        else:\n            total_cost += 2.4\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ]
    },
    "2": {
        "0": [
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            consecutive_buses += 1\n            if consecutive_buses == 2:\n                total_cost += bus_cost\n                consecutive_buses = 0\n        else:\n            if consecutive_buses > 0:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            total_cost += tube_cost\n    \n    if consecutive_buses > 0:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "# Helper function to determine if a journey is a tube journey or a bus journey\n# A tube journey is represented by a string (e.g. 'Northern')\n# A bus journey is represented by an integer (e.g. 243)\ndef is_tube(journey):\n    return isinstance(journey, str)\n\n# Helper function to calculate the cost of a journey based on the type of journey\ndef calculate_cost(journey):\n    if is_tube(journey):\n        return 2.40\n    else:\n        return 1.50\n\n# Helper function to determine if two adjacent journeys are both bus journeys\ndef is_adjacent_bus(journey1, journey2):\n    return not is_tube(journey1) and not is_tube(journey2)\n\ndef london_city_hacker(journey):\n    total_cost = 0\n    previous_journey = None\n    for current_journey in journey:\n        if is_adjacent_bus(previous_journey, current_journey):\n            total_cost += calculate_cost(previous_journey)\n        total_cost += calculate_cost(current_journey)\n        previous_journey = current_journey\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_cost * 2\n                i += 1\n            else:\n                total_cost += bus_cost\n        i += 1\n\n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    is_previous_bus = False\n    \n    for travel in journey:\n        if isinstance(travel, int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0.00\n    bus_journey = 0\n    tube_journey = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:  # bus journey\n            bus_journey += 1\n            \n            # check if next journey is also a bus journey\n            if i+1 < len(journey) and type(journey[i+1]) == int:\n                total_cost += bus_cost\n            \n            # if next journey is a tube journey or end of the sequence\n            else:\n                total_cost += bus_cost\n                total_cost += tube_cost * tube_journey\n                bus_journey = 0\n                tube_journey = 0\n                \n        else:  # tube journey\n            tube_journey += 1\n            \n            # check if next journey is also a tube journey\n            if i+1 < len(journey) and type(journey[i+1]) != int:\n                total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(round(total_cost, 2))",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_counter = 0\n        else:\n            if bus_counter == 0:\n                total_cost += bus_cost\n            bus_counter = (bus_counter + 1) % 2\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            buses += 1\n            if buses % 2 == 0:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus journeys\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    is_previous_bus = False\n    for journey_type in journey:\n        if isinstance(journey_type, str): # Tube journey\n            total_cost += 2.4\n            is_previous_bus = False\n        else: # Bus journey\n            if is_previous_bus: # If previous journey was also a bus\n                is_previous_bus = False\n            else:\n                total_cost += 1.5\n                is_previous_bus = True\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    if bus_count == 1:\n        total_cost += bus_fare\n\n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):  # tube journey\n            total_cost += tube_fare\n        else:  # bus journey\n            total_cost += bus_fare\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):  # check if next journey is also a bus journey\n                total_cost += bus_fare\n                i += 1  # skip the next journey\n                \n        i += 1  # move to the next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost += bus_fare\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            if bus_count > 1:\n                total_cost -= bus_count * bus_cost\n                bus_count = 0\n        else:\n            bus_count += 1\n\n    total_cost += bus_count * bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            total_cost += 2.4\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count -= 2\n    \n    total_cost += bus_count * 1.5\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for stop in journey:\n        if isinstance(stop, str):\n            total_cost += tube_cost\n            bus_count = 0\n        else:\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n            else:\n                total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count >= 2:\n                if bus_count % 2 == 0:\n                    total_cost += 1.5\n            else:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):   # Tube journey\n            total_cost += 2.40\n            if bus_count >= 2:   # If there are 2 or more adjacent bus journeys, subtract one bus fare for each set\n                total_cost -= 1.50\n                bus_count -= 2\n        else:   # Bus journey\n            total_cost += 1.50\n            bus_count += 1\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n        else:\n            total_cost += tube_fare\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n\n            if bus_count == 2:\n                total_cost -= 1.5\n                bus_count = 0\n        else:\n            total_cost += 2.4\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.50\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n        else:\n            total_cost += 2.40\n            bus_count = 0\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):  # Tube journey\n            tube_count += 1\n            total_cost += 2.40\n        \n        elif isinstance(item, int):  # Bus journey\n            bus_count += 1\n            total_cost += 1.50\n            \n            if bus_count == 2:  # Check if there are 2 adjacent bus journeys\n                total_cost -= 1.50  # Deduct the cost of the second bus journey\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for step in journey:\n        if isinstance(step, int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare * 2\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost += bus_fare * 2\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n    \n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n        else:\n            total_cost += tube_fare\n            i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # If element is a bus number\n            bus_count += 1\n            \n            if bus_count == 2: # If there are two adjacent buses\n                total_cost += 1.5\n                bus_count = 0\n        else: # If element is a tube name\n            total_cost += 2.4\n            \n    if bus_count == 1: # If there is a single remaining bus\n        total_cost += 1.5\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            consecutive_buses = 0\n        else:\n            total_cost += 1.50\n            consecutive_buses += 1\n            \n            if consecutive_buses == 2:\n                total_cost -= 1.50\n                consecutive_buses = 0\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        else:\n            total_cost += tube_cost\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            total_cost += 1.5\n            bus_count += 1\n            \n            if bus_count == 2:\n                total_cost -= 1.5\n                bus_count = 0\n        \n        elif type(journey[i]) == str:\n            total_cost += 2.4\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    count = 0\n    bus_flag = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if not bus_flag:\n                total_cost += bus_cost\n                count = 1\n                bus_flag = True\n            else:\n                count += 1\n                if count == 2:\n                    total_cost += bus_cost\n                    count = 0\n        else:\n            if bus_flag:\n                count = 0\n                bus_flag = False\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or isinstance(journey[i-1], str):\n                total_cost += 1.5\n            elif isinstance(journey[i-1], int):\n                bus_count += 1\n        elif isinstance(journey[i], str):\n            if i == 0 or isinstance(journey[i-1], int):\n                total_cost += 2.4\n            elif isinstance(journey[i-1], str):\n                tube_count += 1\n    total_cost += (bus_count // 2) * 1.5\n    total_cost += tube_count * 2.4\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n        else:\n            total_cost += 2.4\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count = 0\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_fare * 2)\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            \n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_fare * 2)\n    elif bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if i == len(journey) - 1 or not isinstance(journey[i+1], int):\n                if bus_count > 1:\n                    total_cost += bus_fare * 2\n                else:\n                    total_cost += bus_fare\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            total_cost += bus_fare\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                i += 1\n        else:\n            total_cost += tube_fare\n        i += 1\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # Check if current element is a bus number\n            bus_count += 1\n            if bus_count == 2:  # Check if there are two adjacent bus journeys\n                total_cost += 1.5  # Add bus fare for the set of two adjacent buses\n                bus_count = 0  # Reset bus count\n        else:  # Current element is a tube name\n            if bus_count == 1:  # Check if there is one adjacent bus journey\n                total_cost += 1.5  # Add bus fare for the single adjacent bus\n                bus_count = 0  # Reset bus count\n            total_cost += 2.4  # Add tube fare\n    if bus_count == 1:  # Check if there is one adjacent bus journey at the end\n        total_cost += 1.5  # Add bus fare for the single adjacent bus\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        else:\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_count += 1\n            else:\n                total_cost += bus_cost\n                \n    total_cost += bus_cost * (bus_count // 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "2": [
            "def london_city_hacker(journey): \n    cost = 0\n    prev_bus = False\n    for item in journey:\n        if isinstance(item, int):\n            cost += 1.50\n            if prev_bus:\n                prev_bus = False\n                cost -= 1.50\n            else:\n                prev_bus = True\n        else:\n            cost += 2.40\n            prev_bus = False\n    return \"\u00a3{:.2f}\".format(cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n        else:\n            if bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    total_cost += bus_count * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_bus_journey = False\n    consecutive_bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            is_bus_journey = True\n            consecutive_bus_count += 1\n            total_cost += 1.5\n        else:\n            if is_bus_journey:\n                total_cost -= 1.5 * (consecutive_bus_count // 2)\n                consecutive_bus_count = 0\n                is_bus_journey = False\n            total_cost += 2.4\n    \n    if is_bus_journey:\n        total_cost -= 1.5 * (consecutive_bus_count // 2)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost * 2\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count >= 2:\n        total_cost += bus_cost * 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    prev_is_bus = False\n    \n    for location in journey:\n        if isinstance(location, int):\n            if prev_is_bus:\n                prev_is_bus = False\n            else:\n                total_cost += bus_fare\n                prev_is_bus = True\n        else:\n            total_cost += tube_fare\n            prev_is_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    adjacent_buses = 0\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            adjacent_buses += 1\n        else:\n            if adjacent_buses >= 2:\n                total_cost += bus_fare\n            elif adjacent_buses == 1:\n                total_cost += bus_fare\n                adjacent_buses = 0\n            total_cost += tube_fare\n    \n    if adjacent_buses >= 2:\n        total_cost += bus_fare\n    elif adjacent_buses == 1:\n        total_cost += bus_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for trip in journey:\n        if isinstance(trip, str):\n            total_cost += tube_fare\n            if bus_count >= 2:\n                total_cost -= bus_fare\n                bus_count -= 2\n            bus_count = 0\n        else:\n            total_cost += bus_fare\n            bus_count += 1\n    \n    if bus_count >= 2:\n        total_cost -= bus_fare\n        bus_count -= 2\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            total_cost += bus_fare * (bus_count // 2 + bus_count % 2)\n            bus_count = 0\n            total_cost += tube_fare\n\n    total_cost += bus_fare * (bus_count // 2 + bus_count % 2)\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    prev_is_bus = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if prev_is_bus:\n                prev_is_bus = False\n            else:\n                total_cost += bus_fare\n                prev_is_bus = True\n        else:\n            total_cost += tube_fare\n            prev_is_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "3": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for trip in journey:\n        if isinstance(trip, int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare * (consecutive_buses // 2)\n                consecutive_buses = consecutive_buses % 2\n            \n            total_cost += bus_fare * consecutive_buses\n            consecutive_buses = 0\n            \n            total_cost += tube_fare\n            \n    if consecutive_buses >= 2:\n        total_cost += bus_fare * (consecutive_buses // 2)\n        consecutive_buses = consecutive_buses % 2\n    \n    total_cost += bus_fare * consecutive_buses\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.5\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n                total_cost -= 1.5\n        else:\n            total_cost += 2.4\n            bus_count = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n        else:\n            total_cost += tube_cost\n            if bus_count >= 2:\n                total_cost -= bus_cost\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "4": [
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    is_previous_bus = False\n\n    for item in journey:\n        if isinstance(item, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.00\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, int): # if item is a bus number\n            bus_count += 1\n        else: # if item is a tube name\n            if bus_count >= 2: # if there are 2 or more adjacent bus journeys\n                total_cost += bus_fare * (bus_count // 2) # add bus fare for each set of two adjacent buses\n            if bus_count % 2 == 1: # if there is one remaining bus journey\n                total_cost += bus_fare # add bus fare for the remaining bus journey\n            bus_count = 0 # reset bus count\n            \n            total_cost += tube_fare # add tube fare\n        \n    if bus_count >= 2: # if there are 2 or more adjacent bus journeys at the end of the journey\n        total_cost += bus_fare * (bus_count // 2) # add bus fare for each set of two adjacent buses\n    if bus_count % 2 == 1: # if there is one remaining bus journey at the end of the journey\n        total_cost += bus_fare # add bus fare for the remaining bus journey\n    \n    return \"\u00a3\" + format(total_cost, \".2f\")",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == str:  # if tube journey\n            total_cost += tube_fare\n            if bus_count >= 2:  # if there are 2 or more adjacent bus journeys\n                total_cost -= bus_fare\n            bus_count = 0  # reset bus count\n        else:  # if bus journey\n            total_cost += bus_fare\n            bus_count += 1\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    total_cost = 0\n\n    is_previous_bus = False\n\n    for step in journey:\n        if isinstance(step, int):\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n        else:\n            total_cost += 2.4\n            is_previous_bus = False\n\n    return '\u00a3' + format(total_cost, '.2f')",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for stop in journey:\n        if isinstance(stop, str): # tube journey\n            total_cost += tube_fare\n            bus_count = 0\n        elif isinstance(stop, int): # bus journey\n            bus_count += 1\n            total_cost += bus_fare\n            if bus_count >= 2: # cap bus fare for sets of two adjacent buses\n                total_cost -= bus_fare\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    bus_count = 0\n    \n    for trip in journey:\n        if isinstance(trip, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            if bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):  # if next journey is also bus, skip it\n                i += 1\n        else:  # tube journey\n            total_cost += 2.4\n        i += 1\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    total_cost += bus_count * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            cost += 2.40\n        else:\n            cost += 1.50\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                i += 1\n        i += 1\n    return '\u00a3' + '{:.2f}'.format(cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    num_buses = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            num_buses += 1\n        else:\n            if num_buses >= 2:\n                total_cost += bus_fare * (num_buses // 2)\n                num_buses = num_buses % 2\n\n            total_cost += bus_fare * num_buses + tube_fare\n            num_buses = 0\n\n    if num_buses >= 2:\n        total_cost += bus_fare * (num_buses // 2)\n        num_buses = num_buses % 2\n\n    total_cost += bus_fare * num_buses\n\n    return \"\u00a3{:.2f}\".format(total_cost)\n\nprint(london_city_hacker([1, 2, 3, 'Northern']))\nprint(london_city_hacker([1, 'Victoria', 3, 'Central', 'Northern']))\nprint(london_city_hacker([1, 2, 'Victoria', 'Northern', 'Central']))\nprint(london_city_hacker(['Central', 'Northern', 'Victoria', 2]))",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            \n            if bus_count >= 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            if bus_count > 0:\n                total_cost += bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 0:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            total_cost += 1.50\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n            total_cost += 2.40\n            bus_count = 0\n    \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)"
        ]
    }
}