{
    "0": [
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            consecutive_buses += 1\n            if consecutive_buses == 2:\n                total_cost += bus_cost\n                consecutive_buses = 0\n        else:\n            if consecutive_buses > 0:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            total_cost += tube_cost\n    \n    if consecutive_buses > 0:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "# Helper function to determine if a journey is a tube journey or a bus journey\n# A tube journey is represented by a string (e.g. 'Northern')\n# A bus journey is represented by an integer (e.g. 243)\ndef is_tube(journey):\n    return isinstance(journey, str)\n\n# Helper function to calculate the cost of a journey based on the type of journey\ndef calculate_cost(journey):\n    if is_tube(journey):\n        return 2.40\n    else:\n        return 1.50\n\n# Helper function to determine if two adjacent journeys are both bus journeys\ndef is_adjacent_bus(journey1, journey2):\n    return not is_tube(journey1) and not is_tube(journey2)\n\ndef london_city_hacker(journey):\n    total_cost = 0\n    previous_journey = None\n    for current_journey in journey:\n        if is_adjacent_bus(previous_journey, current_journey):\n            total_cost += calculate_cost(previous_journey)\n        total_cost += calculate_cost(current_journey)\n        previous_journey = current_journey\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_cost * 2\n                i += 1\n            else:\n                total_cost += bus_cost\n        i += 1\n\n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    is_previous_bus = False\n    \n    for travel in journey:\n        if isinstance(travel, int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0.00\n    bus_journey = 0\n    tube_journey = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:  # bus journey\n            bus_journey += 1\n            \n            # check if next journey is also a bus journey\n            if i+1 < len(journey) and type(journey[i+1]) == int:\n                total_cost += bus_cost\n            \n            # if next journey is a tube journey or end of the sequence\n            else:\n                total_cost += bus_cost\n                total_cost += tube_cost * tube_journey\n                bus_journey = 0\n                tube_journey = 0\n                \n        else:  # tube journey\n            tube_journey += 1\n            \n            # check if next journey is also a tube journey\n            if i+1 < len(journey) and type(journey[i+1]) != int:\n                total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(round(total_cost, 2))",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    if bus_count == 1:\n        total_cost += bus_fare\n\n    return '\u00a3{:0.2f}'.format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):  # tube journey\n            total_cost += tube_fare\n        else:  # bus journey\n            total_cost += bus_fare\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):  # check if next journey is also a bus journey\n                total_cost += bus_fare\n                i += 1  # skip the next journey\n                \n        i += 1  # move to the next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost += bus_fare\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            if bus_count > 1:\n                total_cost -= bus_count * bus_cost\n                bus_count = 0\n        else:\n            bus_count += 1\n\n    total_cost += bus_count * bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            total_cost += 2.4\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count -= 2\n    \n    total_cost += bus_count * 1.5\n    return '\u00a3{:.2f}'.format(total_cost)",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_counter = 0\n    for trip in journey:\n        if isinstance(trip, int):\n            bus_counter += 1\n        else:\n            if bus_counter >= 2:\n                total_cost += (bus_cost * 2)\n                bus_counter = 0\n            elif bus_counter == 1:\n                total_cost += bus_cost\n                bus_counter = 0\n            total_cost += tube_cost\n    if bus_counter >= 2:\n        total_cost += (bus_cost * 2)\n    elif bus_counter == 1:\n        total_cost += bus_cost\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    consecutive_buses = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += (bus_fare * 2)\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n\n            total_cost += tube_fare\n            consecutive_buses = 0\n\n    if consecutive_buses >= 2:\n        total_cost += (bus_fare * 2)\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    i = 0\n\n    while i < len(journey): \n        if isinstance(journey[i], str): \n            total_cost += tube_fare \n            i += 1 \n        else: \n            bus_count = 0 \n            while i < len(journey) and isinstance(journey[i], int): \n                bus_count += 1 \n                i += 1 \n\n            total_cost += bus_fare * ((bus_count + 1) // 2) \n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.5\n    tube_fare = 2.4\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    i = 0\n    \n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        else:\n            total_cost += bus_cost\n            \n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                i += 1\n                \n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    is_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_bus:\n                is_bus = False\n                continue\n            else:\n                total_cost += bus_cost\n                is_bus = True\n        else:\n            total_cost += tube_cost\n            \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if bus_count == 0:\n                total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n        else:\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            i += 1\n        else:\n            bus_count = 0\n            while i < len(journey) and isinstance(journey[i], int):\n                bus_count += 1\n                i += 1\n            total_cost += bus_fare * (bus_count // 2 + bus_count % 2)\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if i + 1 == len(journey) or isinstance(journey[i + 1], str):\n                total_cost += bus_fare * (bus_count // 2 + bus_count % 2)\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def london_city_hacker(journey):\n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # if bus number\n            bus_count += 1\n        else: # if tube name\n            if bus_count >= 2: # if there are at least 2 adjacent bus journeys\n                total_cost += bus_cost * 2\n                bus_count = 0\n            elif bus_count == 1: # if there is exactly 1 bus journey\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_cost * 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i > 0 and type(journey[i-1]) == int:\n                bus_count += 1\n            else:\n                total_cost += bus_fare\n        \n        if type(journey[i]) == str:\n            total_cost += tube_fare\n    \n    total_cost += (bus_count // 2) * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            if bus_count > 0:\n                total_cost += bus_count * bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 0:\n        total_cost += bus_count * bus_fare\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    bus_cost = 1.50\n    tube_cost = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost * 2\n            elif bus_count == 1:\n                total_cost += bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_cost * 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    prev_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                total_cost += bus_fare\n                prev_bus = True\n        else:\n            total_cost += tube_fare\n            prev_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or not isinstance(journey[i-1], int):\n                total_cost += bus_cost\n                bus_count += 1\n            elif isinstance(journey[i-1], int):\n                if bus_count == 1:\n                    total_cost += bus_cost\n                    bus_count += 1\n                else:\n                    bus_count = 1\n                    \n        elif isinstance(journey[i], str):\n            total_cost += tube_cost\n            \n    return '\u00a3{:.2f}'.format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n        \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            is_previous_bus = False\n        elif isinstance(journey[i], int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += bus_fare * (bus_count // 2)\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 1:\n        total_cost += bus_fare * (bus_count // 2)\n        bus_count = bus_count % 2\n    \n    total_cost += bus_count * bus_fare\n    return '\u00a3{:.2f}'.format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    total_cost = 0\n    prev_bus = False\n    for step in journey:\n        if isinstance(step, int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                total_cost += 1.5\n                prev_bus = True\n        else:\n            total_cost += 2.4\n            prev_bus = False\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost += bus_fare\n        else:\n            if bus_count > 0:\n                bus_count = 0\n                total_cost += bus_fare\n            total_cost += tube_fare\n    if bus_count > 0:\n        total_cost += bus_fare\n    return \"\u00a3{:.2f}\".format(total_cost)\n\nprint(london_city_hacker(['Central', 1, 2, 3, 'Northern']))\nprint(london_city_hacker(['Central', 3, 'Northern', 2, 'Victoria', 'District']))\nprint(london_city_hacker([1, 'Central', 'Victoria', 2, 3]))",
            "logp": null
        }
    ]
}