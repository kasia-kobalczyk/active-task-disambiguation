{
    "0": {
        "0": [
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, str):\n            total_cost += 2.40\n            bus_count = 0\n        else:\n            bus_count += 1\n            if bus_count >= 2:\n                total_cost += 1.50\n                bus_count = 0\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in journey:\n        if isinstance(i, int):\n            bus_count += 1\n        else:\n            total_cost += bus_count // 2 * bus_cost\n            total_cost += bus_count % 2 * bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n    \n    total_cost += bus_count // 2 * bus_cost\n    total_cost += bus_count % 2 * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    tube_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            total_cost += 2.40\n        else:\n            bus_count += 1\n            total_cost += 1.50\n            \n            if bus_count >= 2:\n                total_cost -= 1.50\n                bus_count = 0\n        \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.00\n    is_previous_bus = False\n\n    for element in journey:\n        if isinstance(element, int):  # check if element is an integer (bus number)\n            if is_previous_bus:\n                total_cost += bus_fare  # add bus fare for the second bus in a set\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:  # element is a string (tube name)\n            total_cost += tube_fare\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost * 2\n                i += 2\n            else:\n                total_cost += bus_cost\n                i += 1\n        else:\n            total_cost += tube_cost\n            i += 1\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_bus = False\n    \n    for item in journey:\n        if isinstance(item, str):\n            total_cost += 2.40\n            is_bus = False\n        else:\n            if is_bus:\n                is_bus = False\n            else:\n                total_cost += 1.50\n                is_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in journey:\n        if type(i) == str:  # Tube journey\n            total_cost += tube_cost\n            bus_count = 0\n        else:  # Bus journey\n            bus_count += 1\n            if bus_count == 2:  # Cap fare for two adjacent buses\n                total_cost += bus_cost\n                bus_count = 0\n                \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, str):\n            total_cost += tube_cost\n            consecutive_buses = 0\n        else:\n            if consecutive_buses == 1:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            elif consecutive_buses > 1:\n                total_cost += (consecutive_buses * bus_cost)\n                consecutive_buses = 0\n            else:\n                consecutive_buses += 1\n    \n    if consecutive_buses == 1:\n        total_cost += bus_cost\n    elif consecutive_buses > 1:\n        total_cost += (consecutive_buses * bus_cost)\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += 1.5\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += 1.5\n                bus_count = 0\n            total_cost += 2.4\n    \n    if bus_count > 1:\n        total_cost += 1.5\n    elif bus_count == 1:\n        total_cost += 1.5\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        # if the current element is a tube name\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        # if the current element is a bus number\n        elif isinstance(journey[i], int):\n            # if there are at least two adjacent bus numbers\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                total_cost += 2 * bus_fare\n                i += 1\n            # if there is only one bus number\n            else:\n                total_cost += bus_fare\n        \n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_count // 2 * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_fare\n\n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for journey_element in journey:\n        if isinstance(journey_element, str):\n            # Tube journey\n            total_cost += 2.40\n            is_previous_bus = False\n        else:\n            # Bus journey\n            total_cost += 1.50\n\n            if is_previous_bus:\n                # Set of two adjacent bus journeys\n                total_cost -= 1.50\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            \n            if i+1 < len(journey) and isinstance(journey[i+1], int):  # check if next journey is also a bus journey\n                total_cost += 1.5\n                i += 1  # skip the next journey as it has already been accounted for\n                \n        else:  # tube journey\n            total_cost += 2.4\n            \n        i += 1  # move to next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if type(item) == int:\n            bus_count += 1\n        else:\n            total_cost += bus_count * 1.50\n            bus_count = 0\n            total_cost += 2.40\n    \n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    \n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "# Total cost of the journey\ntotal_cost = 0\n\n# Initialize a flag to check if the previous journey was a bus\nprev_was_bus = False\n\n# Iterate over each journey in the sequence\nfor journey in journey:\n    \n    # If the current journey is a tube, add \u00a32.40 to the total cost\n    if isinstance(journey, str):\n        total_cost += 2.40\n        \n        # Set the flag to False since the current journey is not a bus\n        prev_was_bus = False\n    \n    # If the current journey is a bus, add \u00a31.50 to the total cost\n    else:\n        total_cost += 1.50\n        \n        # If the previous journey was also a bus, subtract \u00a31.50 from the total cost\n        if prev_was_bus:\n            total_cost -= 1.50\n        \n        # Set the flag to True since the current journey is a bus\n        prev_was_bus = True\n\n# Return the total cost rounded to 2 decimal places in the format \u00a3x.xx\nreturn \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.50\n        else:\n            total_cost += 2.40\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.4\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.5\n                bus_count = 0\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if type(stop) == str:  # Tube journey\n            total_cost += tube_cost\n            is_previous_bus = False\n        else:  # Bus journey\n            if is_previous_bus:\n                total_cost += bus_cost  # Only add bus cost for the second bus in a set of adjacent buses\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int) or isinstance(journey[i], float):\n            # Check if there are 2 or more adjacent bus journeys\n            if i+1 < len(journey) and (isinstance(journey[i+1], int) or isinstance(journey[i+1], float)):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if i == len(journey) - 1 or type(journey[i + 1]) != int:\n                if bus_count >= 2:\n                    total_cost += bus_cost * 2\n                else:\n                    total_cost += bus_cost\n                bus_count = 0\n        else:\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost += bus_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.5\n    tube_fare = 2.4\n    total_cost = 0\n    consecutive_buses = 0\n\n    for stop in journey:\n        if isinstance(stop, int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses > 1:\n                total_cost += bus_fare * (consecutive_buses // 2)\n                consecutive_buses = consecutive_buses % 2\n            total_cost += bus_fare * consecutive_buses\n            consecutive_buses = 0\n            total_cost += tube_fare\n\n    if consecutive_buses > 1:\n        total_cost += bus_fare * (consecutive_buses // 2)\n        consecutive_buses = consecutive_buses % 2\n    total_cost += bus_fare * consecutive_buses\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):   # tube journey\n            total_cost += tube_fare\n        else:                            # bus journey\n            bus_count += 1\n            \n            if bus_count == 2:          # set of two adjacent buses\n                total_cost += bus_fare\n                bus_count = 0\n                \n    total_cost += bus_count * bus_fare   # in case there is an odd number of buses\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    total_cost += bus_count * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    num_buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            num_buses += 1\n            \n            if num_buses >= 2 and i != len(journey) - 1 and isinstance(journey[i + 1], int):\n                num_buses = 0\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_counter += 1\n        else:\n            total_cost += (bus_counter // 2 + bus_counter % 2) * 1.5\n            bus_counter = 0\n            total_cost += 2.4\n\n    total_cost += (bus_counter // 2 + bus_counter % 2) * 1.5\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_counter = 0\n    for trip in journey:\n        if isinstance(trip, int):\n            bus_counter += 1\n        else:\n            if bus_counter >= 2:\n                total_cost += (bus_cost * 2)\n                bus_counter = 0\n            elif bus_counter == 1:\n                total_cost += bus_cost\n                bus_counter = 0\n            total_cost += tube_cost\n    if bus_counter >= 2:\n        total_cost += (bus_cost * 2)\n    elif bus_counter == 1:\n        total_cost += bus_cost\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    consecutive_buses = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # If element is a bus number\n            if i == 0 or not isinstance(journey[i - 1], int):  # If previous element is not a bus number\n                total_cost += bus_fare\n                consecutive_buses += 1\n            elif consecutive_buses >= 2:  # If there are consecutive buses\n                total_cost += bus_fare\n                consecutive_buses = 1\n            else:\n                consecutive_buses += 1\n        else:  # If element is a tube name\n            total_cost += tube_fare\n            consecutive_buses = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if bus_count >= 2:\n                total_cost += bus_cost\n                bus_count = 1\n            else:\n                bus_count += 1\n        else:\n            if bus_count > 0:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_cost\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.50\n                bus_count = 0\n        else:\n            total_cost += 2.40\n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int:  # Check if the element is a bus number\n            total_cost += bus_cost\n            bus_count += 1\n        else:  # The element is a tube name\n            total_cost += tube_cost\n            if bus_count >= 2:  # If there are 2 or more adjacent bus journeys\n                total_cost -= (bus_count // 2) * bus_cost\n            bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    prev_journey = ''\n    bus_count = 0\n    \n    for j in journey:\n        if type(j) == int:\n            if prev_journey == 'bus':\n                bus_count += 1\n            else:\n                bus_count = 1\n            prev_journey = 'bus'\n        else:\n            prev_journey = 'tube'\n        \n        if prev_journey == 'bus' and bus_count == 2:\n            total_cost += bus_cost\n            bus_count = 0\n        elif prev_journey == 'tube':\n            total_cost += tube_cost\n            \n    if bus_count == 1:\n        total_cost += bus_cost\n    elif bus_count >= 2:\n        total_cost += 2 * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if isinstance(journey[i-1], int):\n                bus_count += 1\n            else:\n                total_cost += 1.50\n        else:\n            total_cost += 2.40\n    total_cost += (bus_count // 2) * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    is_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):  # Tube journey\n            total_cost += tube_cost\n            is_bus = False\n        else:  # Bus journey\n            if not is_bus:  # First bus in a set of adjacent buses\n                total_cost += bus_cost\n                is_bus = True\n            else:  # Second bus in a set of adjacent buses\n                is_bus = False\n\n    return \"\u00a3{:.2f}\".format(total_cost)\n\n\nprint(london_city_hacker(['Central', 1, 2, 3, 'Northern']))"
        ],
        "2": [
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or isinstance(journey[i-1], str):\n                total_cost += bus_fare\n            elif isinstance(journey[i-1], int):\n                if i >= 2 and isinstance(journey[i-2], int):\n                    total_cost += bus_fare\n        elif isinstance(journey[i], str):\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # check if the element is an integer (bus number)\n            buses += 1\n            if buses % 2 == 0:  # if there are 2 or more adjacent bus journeys\n                total_cost += bus_fare  # add bus fare for the current journey\n                buses = 0  # reset the counter for adjacent bus journeys\n        else:  # if the element is not an integer (tube name)\n            if buses % 2 == 1:  # if there is an odd number of adjacent bus journeys\n                total_cost += bus_fare  # add bus fare for the previous journey\n                buses = 0  # reset the counter for adjacent bus journeys\n            total_cost += tube_fare  # add tube fare\n        \n    if buses % 2 == 1:  # if there is an odd number of adjacent bus journeys at the end\n        total_cost += bus_fare  # add bus fare for the last journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            \n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n            elif i == len(journey) - 1:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n            \n            if bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    previous_mode = ''\n    count = 0\n\n    for mode in journey:\n        if isinstance(mode, int):\n            if previous_mode == 'bus':\n                count += 1\n            else:\n                total_cost += bus_fare\n                previous_mode = 'bus'\n        else:\n            total_cost += tube_fare\n            previous_mode = 'tube'\n            \n    if count >= 2:\n        total_cost += (count // 2) * bus_fare\n        \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            if bus_count > 0:\n                total_cost += bus_count * bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 0:\n        total_cost += bus_count * bus_fare\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_cost = 1.50\n    tube_cost = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost * 2\n            elif bus_count == 1:\n                total_cost += bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_cost * 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    prev_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                total_cost += bus_fare\n                prev_bus = True\n        else:\n            total_cost += tube_fare\n            prev_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or not isinstance(journey[i-1], int):\n                total_cost += bus_cost\n                bus_count += 1\n            elif isinstance(journey[i-1], int):\n                if bus_count == 1:\n                    total_cost += bus_cost\n                    bus_count += 1\n                else:\n                    bus_count = 1\n                    \n        elif isinstance(journey[i], str):\n            total_cost += tube_cost\n            \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n        \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)"
        ],
        "3": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_fare * (bus_count // 2)\n                bus_count = bus_count % 2\n\n            total_cost += bus_fare * bus_count\n            bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count >= 2:\n        total_cost += bus_fare * (bus_count // 2)\n        bus_count = bus_count % 2\n\n    total_cost += bus_fare * bus_count\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            is_previous_bus = False\n        elif isinstance(journey[i], int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if type(journey[i]) == int:  # If it's a bus journey\n            if i+1 < len(journey) and type(journey[i+1]) == int:  # If there are more than 1 bus journeys in a row\n                total_cost += bus_fare  # Add fare for the first bus journey\n                i += 1  # Skip the next bus journey\n            else:\n                total_cost += bus_fare  # Add fare for the bus journey\n        else:  # If it's a tube journey\n            total_cost += tube_fare  # Add fare for the tube journey\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0.00\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int: # bus journey\n            bus_counter += 1\n            if i == len(journey) - 1: # last journey is a bus\n                total_cost += bus_fare\n            elif type(journey[i+1]) != int: # next journey is not a bus\n                total_cost += bus_fare\n                bus_counter = 0\n            elif bus_counter == 2: # consecutive bus journeys\n                total_cost += bus_fare\n                bus_counter = 0\n        else: # tube journey\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += bus_fare * (bus_count // 2)\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 1:\n        total_cost += bus_fare * (bus_count // 2)\n        bus_count = bus_count % 2\n    \n    total_cost += bus_count * bus_fare\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_cost\n                bus_count = 0\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = 1\n            elif bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            \n            total_cost += tube_fare\n            \n    if bus_count > 1:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = 0\n    elif bus_count == 1:\n        total_cost += bus_fare\n        bus_count = 0\n        \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "4": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus journeys\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_fare  # Add one bus fare for each set of adjacent bus journeys\n                i += 1  # Skip the next bus journey\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                total_cost += bus_fare\n                bus_count += 1\n            elif type(journey[i-1]) == int and bus_count % 2 == 1:\n                total_cost += bus_fare\n                bus_count += 1\n        else:\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey)-1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n        i += 1\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            consecutive_buses += 1\n            if i == len(journey) - 1 or type(journey[i+1]) != int:\n                total_cost += (consecutive_buses // 2 + consecutive_buses % 2) * bus_fare\n                consecutive_buses = 0\n        \n        elif type(journey[i]) == str:\n            total_cost += tube_fare\n    \n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n        else:\n            if bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count == 1:\n        total_cost += bus_cost\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * 1.5\n            total_cost += (bus_count % 2) * 1.5\n            total_cost += 2.4\n            bus_count = 0\n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * 1.5\n    total_cost += (bus_count % 2) * 1.5\n    return \"\u00a3{:.2f}\".format(total_cost)"
        ]
    },
    "1": {
        "0": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        # if the current element is a tube name\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        # if the current element is a bus number\n        elif isinstance(journey[i], int):\n            # if there are at least two adjacent bus numbers\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                total_cost += 2 * bus_fare\n                i += 1\n            # if there is only one bus number\n            else:\n                total_cost += bus_fare\n        \n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_count // 2 * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_fare\n\n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n\n    for journey_element in journey:\n        if isinstance(journey_element, str):\n            # Tube journey\n            total_cost += 2.40\n            is_previous_bus = False\n        else:\n            # Bus journey\n            total_cost += 1.50\n\n            if is_previous_bus:\n                # Set of two adjacent bus journeys\n                total_cost -= 1.50\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):  # bus journey\n            total_cost += 1.5\n            \n            if i+1 < len(journey) and isinstance(journey[i+1], int):  # check if next journey is also a bus journey\n                total_cost += 1.5\n                i += 1  # skip the next journey as it has already been accounted for\n                \n        else:  # tube journey\n            total_cost += 2.4\n            \n        i += 1  # move to next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if type(item) == int:\n            bus_count += 1\n        else:\n            total_cost += bus_count // 2 * 1.5\n            bus_count = 0\n            total_cost += 2.4\n    \n    total_cost += bus_count // 2 * 1.5\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    \n    is_previous_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "```\n    total_cost = 0\n    bus_counter = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.40\n            bus_counter = 0\n        else:\n            bus_counter += 1\n            if bus_counter == 2:\n                total_cost += 1.50\n                bus_counter = 0\n    return '\u00a3{:.2f}'.format(total_cost)\n```",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count % 2 == 0:\n                total_cost += 1.50\n        else:\n            total_cost += 2.40\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += 2.4\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.5\n                bus_count = 0\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0.0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if type(stop) == str:  # Tube journey\n            total_cost += tube_cost\n            is_previous_bus = False\n        else:  # Bus journey\n            if is_previous_bus:\n                total_cost += bus_cost  # Only add bus cost for the second bus in a set of adjacent buses\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            consecutive_buses += 1\n            if consecutive_buses == 2:\n                total_cost += bus_cost\n                consecutive_buses = 0\n        else:\n            if consecutive_buses > 0:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            total_cost += tube_cost\n    \n    if consecutive_buses > 0:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "# Helper function to determine if a journey is a tube journey or a bus journey\n# A tube journey is represented by a string (e.g. 'Northern')\n# A bus journey is represented by an integer (e.g. 243)\ndef is_tube(journey):\n    return isinstance(journey, str)\n\n# Helper function to calculate the cost of a journey based on the type of journey\ndef calculate_cost(journey):\n    if is_tube(journey):\n        return 2.40\n    else:\n        return 1.50\n\n# Helper function to determine if two adjacent journeys are both bus journeys\ndef is_adjacent_bus(journey1, journey2):\n    return not is_tube(journey1) and not is_tube(journey2)\n\ndef london_city_hacker(journey):\n    total_cost = 0\n    previous_journey = None\n    for current_journey in journey:\n        if is_adjacent_bus(previous_journey, current_journey):\n            total_cost += calculate_cost(previous_journey)\n        total_cost += calculate_cost(current_journey)\n        previous_journey = current_journey\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_cost * 2\n                i += 1\n            else:\n                total_cost += bus_cost\n        i += 1\n\n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    is_previous_bus = False\n    \n    for travel in journey:\n        if isinstance(travel, int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0.00\n    bus_journey = 0\n    tube_journey = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:  # bus journey\n            bus_journey += 1\n            \n            # check if next journey is also a bus journey\n            if i+1 < len(journey) and type(journey[i+1]) == int:\n                total_cost += bus_cost\n            \n            # if next journey is a tube journey or end of the sequence\n            else:\n                total_cost += bus_cost\n                total_cost += tube_cost * tube_journey\n                bus_journey = 0\n                tube_journey = 0\n                \n        else:  # tube journey\n            tube_journey += 1\n            \n            # check if next journey is also a tube journey\n            if i+1 < len(journey) and type(journey[i+1]) != int:\n                total_cost += tube_cost\n            \n            # if next journey is a bus journey or end of the sequence\n            else:\n                total_cost += tube_cost\n                total_cost += bus_cost * (bus_journey // 2)\n                bus_journey = 0\n                tube_journey = 0\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_counter = 0\n        else:\n            if bus_counter == 0:\n                total_cost += bus_cost\n            bus_counter = (bus_counter + 1) % 2\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            buses += 1\n            if buses % 2 == 0:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus journeys\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    is_previous_bus = False\n    for journey_type in journey:\n        if isinstance(journey_type, str): # Tube journey\n            total_cost += 2.4\n            is_previous_bus = False\n        else: # Bus journey\n            if is_previous_bus: # If previous journey was also a bus\n                is_previous_bus = False\n            else:\n                total_cost += 1.5\n                is_previous_bus = True\n    \n    return '\u00a3{:.2f}'.format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost += bus_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            elif bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n                \n            total_cost += tube_fare\n    \n    if bus_count > 1:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    elif bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.5\n    tube_fare = 2.4\n    total_cost = 0\n    consecutive_buses = 0\n\n    for stop in journey:\n        if isinstance(stop, int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses > 1:\n                total_cost += bus_fare * (consecutive_buses // 2)\n                consecutive_buses = consecutive_buses % 2\n            total_cost += bus_fare * consecutive_buses\n            consecutive_buses = 0\n            total_cost += tube_fare\n\n    if consecutive_buses > 1:\n        total_cost += bus_fare * (consecutive_buses // 2)\n        consecutive_buses = consecutive_buses % 2\n    total_cost += bus_fare * consecutive_buses\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):   # tube journey\n            total_cost += tube_fare\n        else:                            # bus journey\n            bus_count += 1\n            \n            if bus_count == 2:          # set of two adjacent buses\n                total_cost += bus_fare\n                bus_count = 0\n                \n    total_cost += bus_count * bus_fare   # in case there is an odd number of buses\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = bus_count % 2\n    total_cost += bus_count * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    num_buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            num_buses += 1\n            \n            if num_buses >= 2 and i != len(journey) - 1 and isinstance(journey[i + 1], int):\n                num_buses = 0\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_counter = 0\n    for trip in journey:\n        if isinstance(trip, int):\n            bus_counter += 1\n        else:\n            if bus_counter >= 2:\n                total_cost += (bus_cost * 2)\n                bus_counter = 0\n            elif bus_counter == 1:\n                total_cost += bus_cost\n                bus_counter = 0\n            total_cost += tube_cost\n    if bus_counter >= 2:\n        total_cost += (bus_cost * 2)\n    elif bus_counter == 1:\n        total_cost += bus_cost\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    consecutive_buses = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += (bus_fare * 2)\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n\n            total_cost += tube_fare\n            consecutive_buses = 0\n\n    if consecutive_buses >= 2:\n        total_cost += (bus_fare * 2)\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.4\n    bus_fare = 1.5\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n\n    if bus_count > 0:\n        total_cost += bus_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.50\n                bus_count = 0\n        else:\n            total_cost += 2.40\n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int:  # Check if the element is a bus number\n            total_cost += bus_cost\n            bus_count += 1\n        else:  # The element is a tube name\n            total_cost += tube_cost\n            if bus_count >= 2:  # If there are 2 or more adjacent bus journeys\n                total_cost -= (bus_count // 2) * bus_cost\n            bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    prev_journey = ''\n    bus_count = 0\n    \n    for j in journey:\n        if type(j) == int:\n            if prev_journey == 'bus':\n                bus_count += 1\n            else:\n                bus_count = 1\n            prev_journey = 'bus'\n        else:\n            prev_journey = 'tube'\n        \n        if prev_journey == 'bus' and bus_count == 2:\n            total_cost += bus_cost\n            bus_count = 0\n        elif prev_journey == 'tube':\n            total_cost += tube_cost\n            \n    if bus_count == 1:\n        total_cost += bus_cost\n    elif bus_count >= 2:\n        total_cost += 2 * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.5\n    tube_fare = 2.4\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    is_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):  # Tube journey\n            total_cost += tube_cost\n            is_bus = False\n        else:  # Bus journey\n            if not is_bus:  # First bus in a set of adjacent buses\n                total_cost += bus_cost\n                is_bus = True\n            else:  # Second bus in a set of adjacent buses\n                is_bus = False\n\n    return \"\u00a3{:.2f}\".format(total_cost)\n\n\nprint(london_city_hacker(['Central', 1, 2, 3, 'Northern']))",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    i = 0\n    \n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        else:\n            total_cost += bus_cost\n            \n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                i += 1\n                \n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    is_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            is_bus = False\n        else:\n            if is_bus:\n                is_bus = False\n            else:\n                total_cost += bus_cost\n                is_bus = True\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if i + 1 >= len(journey) or type(journey[i+1]) != int:\n                sets_of_two = bus_count // 2\n                remainder = bus_count % 2\n                total_cost += (sets_of_two * bus_cost) + (remainder * bus_cost)\n                bus_count = 0\n        else:\n            total_cost += tube_cost\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if i == len(journey)-1 or not isinstance(journey[i+1], int):\n                sets = bus_count // 2\n                remaining_bus = bus_count % 2\n                total_cost += sets * bus_fare + remaining_bus * bus_fare\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "2": [
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for journey_type in journey:\n        if isinstance(journey_type, int):\n            bus_count += 1\n        else:\n            total_cost += bus_count // 2 * bus_cost\n            total_cost += (bus_count % 2) * bus_cost\n            total_cost += tube_cost\n            \n            bus_count = 0\n    \n    total_cost += bus_count // 2 * bus_cost\n    total_cost += (bus_count % 2) * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):  # check if the element is an integer (bus number)\n            buses += 1\n            if buses % 2 == 0:  # if there are 2 or more adjacent bus journeys\n                total_cost += bus_fare  # add bus fare for the current journey\n                buses = 0  # reset the counter for adjacent bus journeys\n        else:  # if the element is not an integer (tube name)\n            if buses % 2 == 1:  # if there is an odd number of adjacent bus journeys\n                total_cost += bus_fare  # add bus fare for the previous journey\n                buses = 0  # reset the counter for adjacent bus journeys\n            total_cost += tube_fare  # add tube fare\n        \n    if buses % 2 == 1:  # if there is an odd number of adjacent bus journeys at the end\n        total_cost += bus_fare  # add bus fare for the last journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i > 0 and type(journey[i-1]) == int:\n                bus_count += 1\n            else:\n                total_cost += bus_fare\n        \n        if type(journey[i]) == str:\n            total_cost += tube_fare\n        \n    total_cost += (bus_count // 2) * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            if bus_count > 0:\n                total_cost += bus_count * bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 0:\n        total_cost += bus_count * bus_fare\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_cost = 1.50\n    tube_cost = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost * 2\n            elif bus_count == 1:\n                total_cost += bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_cost * 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    prev_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                total_cost += bus_fare\n                prev_bus = True\n        else:\n            total_cost += tube_fare\n            prev_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or not isinstance(journey[i-1], int):\n                total_cost += bus_cost\n                bus_count += 1\n            elif isinstance(journey[i-1], int):\n                if bus_count == 1:\n                    total_cost += bus_cost\n                    bus_count += 1\n                else:\n                    bus_count = 1\n                    \n        elif isinstance(journey[i], str):\n            total_cost += tube_cost\n            \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n        \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n    \n    for trip in journey:\n        if isinstance(trip, str):\n            total_cost += 2.40\n            is_previous_bus = False\n        elif isinstance(trip, int):\n            total_cost += 1.50\n            if is_previous_bus:\n                total_cost -= 1.50\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "3": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_fare * (bus_count // 2)\n                bus_count = bus_count % 2\n\n            total_cost += bus_fare * bus_count\n            bus_count = 0\n            total_cost += tube_fare\n\n    if bus_count >= 2:\n        total_cost += bus_fare * (bus_count // 2)\n        bus_count = bus_count % 2\n\n    total_cost += bus_fare * bus_count\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            is_previous_bus = False\n        elif isinstance(journey[i], int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if type(journey[i]) == int:  # If it's a bus journey\n            if i+1 < len(journey) and type(journey[i+1]) == int:  # If there are more than 1 bus journeys in a row\n                total_cost += bus_fare  # Add fare for the first bus journey\n                i += 1  # Skip the next bus journey\n            else:\n                total_cost += bus_fare  # Add fare for the bus journey\n        else:  # If it's a tube journey\n            total_cost += tube_fare  # Add fare for the tube journey\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0.00\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int: # bus journey\n            bus_counter += 1\n            if i == len(journey) - 1: # last journey is a bus\n                total_cost += bus_fare\n            elif type(journey[i+1]) != int: # next journey is not a bus\n                total_cost += bus_fare\n                bus_counter = 0\n            elif bus_counter == 2: # consecutive bus journeys\n                total_cost += bus_fare\n                bus_counter = 0\n        else: # tube journey\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += bus_fare * (bus_count // 2)\n                bus_count = bus_count % 2\n            elif bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 1:\n        total_cost += bus_fare * (bus_count // 2)\n        bus_count = bus_count % 2\n    elif bus_count == 1:\n        total_cost += bus_fare\n        bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_cost\n                bus_count = 0\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = 1\n            elif bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            \n            total_cost += tube_fare\n            \n    if bus_count > 1:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = 0\n    elif bus_count == 1:\n        total_cost += bus_fare\n        bus_count = 0\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    is_previous_bus = False\n    for stop in journey:\n        if isinstance(stop, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "4": [
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i == 0 or type(journey[i-1]) != int:\n                total_cost += bus_fare\n                bus_count += 1\n            elif type(journey[i-1]) == int and bus_count % 2 == 1:\n                total_cost += bus_fare\n                bus_count += 1\n        else:\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey)-1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n        i += 1\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            consecutive_buses += 1\n            if i == len(journey) - 1 or type(journey[i+1]) != int:\n                total_cost += (consecutive_buses // 2 + consecutive_buses % 2) * bus_fare\n                consecutive_buses = 0\n        \n        elif type(journey[i]) == str:\n            total_cost += tube_fare\n    \n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n        else:\n            if bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count == 1:\n        total_cost += bus_cost\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * 1.5\n            total_cost += (bus_count % 2) * 1.5\n            total_cost += 2.4\n            bus_count = 0\n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * 1.5\n    total_cost += (bus_count % 2) * 1.5\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            is_previous_bus = False\n        else:\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_fare\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)"
        ]
    },
    "2": {
        "0": [
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            consecutive_buses += 1\n            if consecutive_buses == 2:\n                total_cost += bus_cost\n                consecutive_buses = 0\n        else:\n            if consecutive_buses > 0:\n                total_cost += bus_cost\n                consecutive_buses = 0\n            total_cost += tube_cost\n    \n    if consecutive_buses > 0:\n        total_cost += bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    consecutive_buses = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            if consecutive_buses == 0:\n                total_cost += 1.5\n                consecutive_buses += 1\n            else:\n                consecutive_buses += 1\n                \n                if consecutive_buses == 2:\n                    consecutive_buses = 0\n        else:\n            total_cost += 2.4\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                total_cost += bus_cost * 2\n                i += 1\n            else:\n                total_cost += bus_cost\n        i += 1\n\n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    is_previous_bus = False\n    \n    for travel in journey:\n        if isinstance(travel, int):\n            if is_previous_bus:\n                total_cost += bus_fare\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += bus_cost * ((bus_count + 1) // 2)\n                bus_count = 0\n            elif bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count > 1:\n        total_cost += bus_cost * ((bus_count + 1) // 2)\n    elif bus_count == 1:\n        total_cost += bus_cost\n    \n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_counter = 0\n        else:\n            if bus_counter == 0:\n                total_cost += bus_cost\n            bus_counter = (bus_counter + 1) % 2\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    buses = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            buses += 1\n            if buses % 2 == 0:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            # Check if there are 2 or more adjacent bus journeys\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        else:\n            total_cost += tube_cost\n\n        i += 1\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    \n    is_previous_bus = False\n    for journey_type in journey:\n        if isinstance(journey_type, str):\n            total_cost += 2.4\n            is_previous_bus = False\n        else:\n            if not is_previous_bus:\n                total_cost += 1.5\n                is_previous_bus = True\n            else:\n                is_previous_bus = False\n                \n    return \"\u00a3{:0.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    if bus_count == 1:\n        total_cost += bus_fare\n\n    return '\u00a3{:0.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):  # tube journey\n            total_cost += tube_fare\n        else:  # bus journey\n            total_cost += bus_fare\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):  # check if next journey is also a bus journey\n                total_cost += bus_fare\n                i += 1  # skip the next journey\n                \n        i += 1  # move to the next journey\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += bus_fare\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n            consecutive_buses = 0\n            total_cost += tube_fare\n    \n    if consecutive_buses >= 2:\n        total_cost += bus_fare\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            if bus_count > 1:\n                total_cost -= bus_count * bus_cost\n                bus_count = 0\n        else:\n            bus_count += 1\n\n    total_cost += bus_count * bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            total_cost += 2.4\n            if bus_count >= 2:\n                total_cost -= 1.5\n                bus_count -= 2\n    \n    total_cost += bus_count * 1.5\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0.0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for stop in journey:\n        if isinstance(stop, str):\n            total_cost += tube_cost\n            bus_count = 0\n        else:\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n            else:\n                total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count >= 2:\n                if bus_count % 2 == 0:\n                    total_cost += 1.5\n            else:\n                total_cost += 1.5\n        else:\n            total_cost += 2.4\n            bus_count = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0.0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, str):   # Tube journey\n            total_cost += 2.40\n            if bus_count >= 2:   # If there are 2 or more adjacent bus journeys, subtract one bus fare for each set\n                total_cost -= 1.50\n                bus_count -= 2\n        else:   # Bus journey\n            total_cost += 1.50\n            bus_count += 1\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    bus_fare = 1.50\n    tube_fare = 2.40\n    total_cost = 0\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i < len(journey) - 1 and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 2\n            else:\n                total_cost += bus_fare\n                i += 1\n        else:\n            total_cost += tube_fare\n            i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "1": [
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_counter = 0\n    for trip in journey:\n        if isinstance(trip, int):\n            bus_counter += 1\n        else:\n            if bus_counter >= 2:\n                total_cost += (bus_cost * 2)\n                bus_counter = 0\n            elif bus_counter == 1:\n                total_cost += bus_cost\n                bus_counter = 0\n            total_cost += tube_cost\n    if bus_counter >= 2:\n        total_cost += (bus_cost * 2)\n    elif bus_counter == 1:\n        total_cost += bus_cost\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    consecutive_buses = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            consecutive_buses += 1\n        else:\n            if consecutive_buses >= 2:\n                total_cost += (bus_fare * 2)\n            elif consecutive_buses == 1:\n                total_cost += bus_fare\n\n            total_cost += tube_fare\n            consecutive_buses = 0\n\n    if consecutive_buses >= 2:\n        total_cost += (bus_fare * 2)\n    elif consecutive_buses == 1:\n        total_cost += bus_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.4\n    bus_fare = 1.5\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n\n    if bus_count > 0:\n        total_cost += bus_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += 1.50\n                bus_count = 0\n        else:\n            total_cost += 2.40\n    total_cost += bus_count * 1.50\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int:  # Check if the element is a bus number\n            total_cost += bus_cost\n            bus_count += 1\n        else:  # The element is a tube name\n            total_cost += tube_cost\n            if bus_count >= 2:  # If there are 2 or more adjacent bus journeys\n                total_cost -= (bus_count // 2) * bus_cost\n            bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    prev_journey = ''\n    bus_count = 0\n    \n    for j in journey:\n        if type(j) == int:\n            if prev_journey == 'bus':\n                bus_count += 1\n            else:\n                bus_count = 1\n            prev_journey = 'bus'\n        else:\n            prev_journey = 'tube'\n        \n        if prev_journey == 'bus' and bus_count == 2:\n            total_cost += bus_cost\n            bus_count = 0\n        elif prev_journey == 'tube':\n            total_cost += tube_cost\n            \n    if bus_count == 1:\n        total_cost += bus_cost\n    elif bus_count >= 2:\n        total_cost += 2 * bus_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.5\n    tube_fare = 2.4\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    is_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):  # Tube journey\n            total_cost += tube_cost\n            is_bus = False\n        else:  # Bus journey\n            if not is_bus:  # First bus in a set of adjacent buses\n                total_cost += bus_cost\n                is_bus = True\n            else:  # Second bus in a set of adjacent buses\n                is_bus = False\n\n    return \"\u00a3{:.2f}\".format(total_cost)\n\n\nprint(london_city_hacker(['Central', 1, 2, 3, 'Northern']))",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    i = 0\n    \n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        else:\n            total_cost += bus_cost\n            \n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                i += 1\n                \n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    \n    total_cost = 0\n    is_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            is_bus = False\n        else:\n            if is_bus:\n                is_bus = False\n            else:\n                total_cost += bus_cost\n                is_bus = True\n                \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if i + 1 >= len(journey) or type(journey[i+1]) != int:\n                sets_of_two = bus_count // 2\n                remainder = bus_count % 2\n                total_cost += (sets_of_two * bus_cost) + (remainder * bus_cost)\n                bus_count = 0\n        else:\n            total_cost += tube_cost\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0.0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n        elif isinstance(journey[i], int):\n            bus_count += 1\n            if i == len(journey)-1 or not isinstance(journey[i+1], int):\n                sets = bus_count // 2\n                remaining_bus = bus_count % 2\n                total_cost += sets * bus_fare + remaining_bus * bus_fare\n                bus_count = 0\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if bus_count >= 2:\n                bus_count = 0\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n    \n    if bus_count == 1:\n        total_cost += bus_fare\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if bus_count == 0:\n                total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n        else:\n            total_cost += tube_cost\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n\n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            i += 1\n        else:\n            bus_count = 0\n            while i < len(journey) and isinstance(journey[i], int):\n                bus_count += 1\n                i += 1\n            total_cost += bus_fare * (bus_count // 2 + bus_count % 2)\n\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    bus_fare = 1.50\n    tube_fare = 2.40\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if i + 1 == len(journey) or isinstance(journey[i + 1], str):\n                total_cost += bus_fare * (bus_count // 2 + bus_count % 2)\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int): # check if element is a bus number\n            total_cost += 1.50\n\n            if i < len(journey) - 1 and isinstance(journey[i+1], int): # check if next element is also a bus number\n                bus_count += 1\n            else:\n                if bus_count >= 2:\n                    total_cost -= 1.50 # subtract one bus fare for each set of two adjacent buses\n                bus_count = 0\n\n        else: # element is a tube name\n            total_cost += 2.40\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n        else:\n            total_cost += bus_cost\n            bus_count += 1\n            \n            if bus_count == 2:\n                bus_count = 0\n                total_cost -= bus_cost\n                \n    return \"\u00a3{:.2f}\".format(total_cost)"
        ],
        "2": [
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            if i > 0 and type(journey[i-1]) == int:\n                bus_count += 1\n            else:\n                total_cost += bus_fare\n        \n        if type(journey[i]) == str:\n            total_cost += tube_fare\n    \n    total_cost += (bus_count // 2) * bus_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            if bus_count > 0:\n                total_cost += bus_count * bus_fare\n                bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 0:\n        total_cost += bus_count * bus_fare\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    bus_cost = 1.50\n    tube_cost = 2.40\n\n    total_cost = 0\n    bus_count = 0\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_cost * 2\n            elif bus_count == 1:\n                total_cost += bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_cost * 2\n    elif bus_count == 1:\n        total_cost += bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    prev_bus = False\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                total_cost += bus_fare\n                prev_bus = True\n        else:\n            total_cost += tube_fare\n            prev_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            if i == 0 or not isinstance(journey[i-1], int):\n                total_cost += bus_cost\n                bus_count += 1\n            elif isinstance(journey[i-1], int):\n                if bus_count == 1:\n                    total_cost += bus_cost\n                    bus_count += 1\n                else:\n                    bus_count = 1\n                    \n        elif isinstance(journey[i], str):\n            total_cost += tube_cost\n            \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], int):\n            if i+1 < len(journey) and isinstance(journey[i+1], int):\n                total_cost += bus_fare\n                i += 1\n            else:\n                total_cost += bus_fare\n        else:\n            total_cost += tube_fare\n        i += 1\n        \n    return \"\u00a3\" + \"{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    total_cost = 0\n    is_previous_bus = False\n    \n    for trip in journey:\n        if isinstance(trip, str):\n            total_cost += 2.40\n            is_previous_bus = False\n        elif isinstance(trip, int):\n            total_cost += 1.50\n            if is_previous_bus:\n                total_cost -= 1.50\n                is_previous_bus = False\n            else:\n                is_previous_bus = True\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    for stop in journey:\n        if isinstance(stop, int):\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_fare\n                bus_count = 0\n        else:\n            total_cost += tube_fare\n            if bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n\n    tube_cost = 2.40\n    bus_cost = 1.50\n\n    total_cost = 0\n    bus_counter = 0\n\n    for stop in journey:\n        if type(stop) == int:\n            bus_counter += 1\n            if bus_counter == 2:\n                total_cost += bus_cost\n                bus_counter = 0\n        else:\n            total_cost += tube_cost\n            if bus_counter == 1:\n                total_cost += bus_cost\n                bus_counter = 0\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "```python\ndef london_city_hacker(journey):\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], int):\n            bus_count += 1\n        else:\n            if bus_count > 0:\n                total_cost += 1.5 * (bus_count // 2 + 1)\n                bus_count = 0\n            total_cost += 2.4\n    \n    if bus_count > 0:\n        total_cost += 1.5 * (bus_count // 2 + 1)\n    \n    return \"\u00a3{:.2f}\".format(total_cost)\n```"
        ],
        "3": [
            "def london_city_hacker(journey):\n    tube_cost = 2.4\n    bus_cost = 1.5\n    total_cost = 0\n\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            is_previous_bus = False\n        elif isinstance(journey[i], int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    \n    i = 0\n    while i < len(journey):\n        if type(journey[i]) == int:  # If it's a bus journey\n            if i+1 < len(journey) and type(journey[i+1]) == int:  # If there are more than 1 bus journeys in a row\n                total_cost += bus_fare  # Add fare for the first bus journey\n                i += 1  # Skip the next bus journey\n            else:\n                total_cost += bus_fare  # Add fare for the bus journey\n        else:  # If it's a tube journey\n            total_cost += tube_fare  # Add fare for the tube journey\n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0.00\n    bus_counter = 0\n\n    for i in range(len(journey)):\n        if type(journey[i]) == int: # bus journey\n            bus_counter += 1\n            if i == len(journey) - 1: # last journey is a bus\n                total_cost += bus_fare\n            elif type(journey[i+1]) != int: # next journey is not a bus\n                total_cost += bus_fare\n                bus_counter = 0\n            elif bus_counter == 2: # consecutive bus journeys\n                total_cost += bus_fare\n                bus_counter = 0\n        else: # tube journey\n            total_cost += tube_fare\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    bus_fare = 1.50\n    tube_fare = 2.40\n    \n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += bus_fare * (bus_count // 2)\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_fare\n            bus_count = 0\n            total_cost += tube_fare\n    \n    if bus_count > 1:\n        total_cost += bus_fare * (bus_count // 2)\n        bus_count = bus_count % 2\n    \n    total_cost += bus_count * bus_fare\n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_count = 0\n        elif isinstance(journey[i], int):\n            total_cost += bus_cost\n            bus_count += 1\n            if bus_count == 2:\n                total_cost -= bus_cost\n                bus_count = 0\n    \n    return '\u00a3{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    \n    total_cost = 0\n    bus_count = 0\n    \n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count > 1:\n                total_cost += (bus_count // 2) * bus_fare\n                bus_count = 1\n            elif bus_count == 1:\n                total_cost += bus_fare\n                bus_count = 0\n            \n            total_cost += tube_fare\n            \n    if bus_count > 1:\n        total_cost += (bus_count // 2) * bus_fare\n        bus_count = 0\n    elif bus_count == 1:\n        total_cost += bus_fare\n        bus_count = 0\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    prev_bus = False\n    for step in journey:\n        if isinstance(step, int):\n            if prev_bus:\n                prev_bus = False\n            else:\n                total_cost += 1.5\n                prev_bus = True\n        else:\n            total_cost += 2.4\n            prev_bus = False\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    is_previous_bus = False\n    for stop in journey:\n        if isinstance(stop, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0.00\n    \n    i = 0\n    while i < len(journey):\n        if isinstance(journey[i], str):\n            # tube journey\n            total_cost += tube_cost\n        elif isinstance(journey[i], int):\n            # bus journey\n            if i + 1 < len(journey) and isinstance(journey[i + 1], int):\n                # if there are 2 or more adjacent bus journeys, cap the fare\n                total_cost += bus_cost\n                i += 1\n            else:\n                total_cost += bus_cost\n        \n        i += 1\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n            if bus_count == 2:\n                bus_count = 0\n                total_cost += bus_fare\n        else:\n            if bus_count > 0:\n                bus_count = 0\n                total_cost += bus_fare\n            total_cost += tube_fare\n    if bus_count > 0:\n        total_cost += bus_fare\n    return \"\u00a3{:.2f}\".format(total_cost)\n\nprint(london_city_hacker(['Central', 1, 2, 3, 'Northern']))\nprint(london_city_hacker(['Central', 3, 'Northern', 2, 'Victoria', 'District']))\nprint(london_city_hacker([1, 'Central', 'Victoria', 2, 3]))",
            "def london_city_hacker(journey): \n    bus_cost = 1.50\n    tube_cost = 2.40\n    total_cost = 0.0\n    bus_counter = 0\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_cost\n            bus_counter = 0\n        else:\n            if bus_counter < 1:\n                total_cost += bus_cost\n                bus_counter += 1\n            else:\n                bus_counter = 0\n    return \"\u00a3%.2f\" % total_cost"
        ],
        "4": [
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n    total_cost = 0\n    consecutive_buses = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            consecutive_buses += 1\n            if i == len(journey) - 1 or type(journey[i+1]) != int:\n                total_cost += (consecutive_buses // 2 + consecutive_buses % 2) * bus_fare\n                consecutive_buses = 0\n        \n        elif type(journey[i]) == str:\n            total_cost += tube_fare\n    \n    return '\u00a3' + '{:.2f}'.format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    is_previous_bus = False\n    \n    for stop in journey:\n        if isinstance(stop, int):\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_cost\n                is_previous_bus = True\n        else:\n            total_cost += tube_cost\n            is_previous_bus = False\n    \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n    \n    for i in range(len(journey)):\n        if type(journey[i]) == int:\n            bus_count += 1\n            if bus_count == 2:\n                total_cost += bus_cost\n                bus_count = 0\n        else:\n            if bus_count == 1:\n                total_cost += bus_cost\n                bus_count = 0\n            total_cost += tube_cost\n    \n    if bus_count == 1:\n        total_cost += bus_cost\n        \n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    total_cost = 0\n    bus_count = 0\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * 1.5\n            total_cost += (bus_count % 2) * 1.5\n            total_cost += 2.4\n            bus_count = 0\n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * 1.5\n    total_cost += (bus_count % 2) * 1.5\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey): \n    tube_fare = 2.40\n    bus_fare = 1.50\n\n    total_cost = 0\n    is_previous_bus = False\n\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            total_cost += tube_fare\n            is_previous_bus = False\n        else:\n            if is_previous_bus:\n                is_previous_bus = False\n            else:\n                total_cost += bus_fare\n                is_previous_bus = True\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += bus_count // 2 * bus_cost\n                bus_count = bus_count % 2\n\n            total_cost += bus_count * bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += bus_count // 2 * bus_cost\n        bus_count = bus_count % 2\n\n    total_cost += bus_count * bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)",
            "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n\n    total_cost = 0\n    bus_count = 0\n\n    for item in journey:\n        if isinstance(item, int):\n            bus_count += 1\n        else:\n            if bus_count >= 2:\n                total_cost += (bus_count // 2) * bus_cost\n                bus_count = bus_count % 2\n            total_cost += bus_count * bus_cost\n            bus_count = 0\n            total_cost += tube_cost\n\n    if bus_count >= 2:\n        total_cost += (bus_count // 2) * bus_cost\n        bus_count = bus_count % 2\n    total_cost += bus_count * bus_cost\n\n    return \"\u00a3{:.2f}\".format(total_cost)"
        ]
    }
}