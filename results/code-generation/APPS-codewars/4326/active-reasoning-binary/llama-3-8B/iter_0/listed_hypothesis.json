{
    "0": [
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_count = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            cost += 2.40\n        else:\n            bus_count += 1\n            cost += 1.50\n        if bus_count >= 2 and isinstance(journey[i-1], int):\n            cost -= 1.50\n            bus_count -= 1\n    return f'\u00a3{cost:.2f}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_count = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            cost += 2.40\n        else:\n            bus_count += 1\n            cost += 1.50\n        if bus_count >= 2 and isinstance(journey[i-1], int):\n            cost -= 1.50\n            bus_count -= 1\n    return f'\u00a3{cost:.2f}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_count = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            cost += 2.40\n        else:\n            bus_count += 1\n            cost += 1.50\n        if bus_count >= 2 and isinstance(journey[i-1], int):\n            cost -= 1.50\n            bus_count -= 1\n    return f'\u00a3{cost:.2f}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_count = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            cost += 2.40\n        else:\n            bus_count += 1\n            cost += 1.50\n        if bus_count >= 2 and isinstance(journey[i-1], int):\n            cost -= 1.50\n            bus_count -= 1\n    return f'\u00a3{cost:.2f}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_count = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            cost += 2.40\n        else:\n            bus_count += 1\n            cost += 1.50\n        if bus_count >= 2 and isinstance(journey[i-1], int):\n            cost -= 1.50\n            bus_count -= 1\n    return f'\u00a3{cost:.2f}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    bus_cost = 0\n    for element in journey:\n        if type(element) == str:\n            cost += 2.4\n        elif type(element) == int:\n            bus_cost += element\n            if bus_cost > 1:\n                cost += 3\n                bus_cost = 1\n        else:\n            pass\n    return f'\u00a3{round(cost, 2)}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    bus_cost = 0\n    for element in journey:\n        if type(element) == str:\n            cost += 2.4\n        elif type(element) == int:\n            bus_cost += element\n            if bus_cost > 1:\n                cost += 3\n                bus_cost = 1\n        else:\n            pass\n    return f'\u00a3{round(cost, 2)}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    bus_cost = 0\n    for element in journey:\n        if type(element) == str:\n            cost += 2.4\n        elif type(element) == int:\n            bus_cost += element\n            if bus_cost > 1:\n                cost += 3\n                bus_cost = 1\n        else:\n            pass\n    return f'\u00a3{round(cost, 2)}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    bus_cost = 0\n    for element in journey:\n        if type(element) == str:\n            cost += 2.4\n        elif type(element) == int:\n            bus_cost += element\n            if bus_cost > 1:\n                cost += 3\n                bus_cost = 1\n        else:\n            pass\n    return f'\u00a3{round(cost, 2)}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    bus_cost = 0\n    for element in journey:\n        if type(element) == str:\n            cost += 2.4\n        elif type(element) == int:\n            bus_cost += element\n            if bus_cost > 1:\n                cost += 3\n                bus_cost = 1\n        else:\n            pass\n    return f'\u00a3{round(cost, 2)}'",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_count = 0\n    bus_count = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_count += 1\n            cost += 2.40\n        else:\n            bus_count += 1\n            cost += 1.50\n        if bus_count >= 2 and isinstance(journey[i-1], int):\n            cost -= 1.50\n            bus_count -= 1\n    return '\u00a3{:.2f}'.format(cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    bus_cost = 0\n    for element in journey:\n        if type(element) == str:\n            cost += 2.4\n        elif type(element) == int:\n            bus_cost += element\n            if bus_cost > 1:\n                cost += 3\n                bus_cost = 1\n        else:\n            pass\n    return f'\u00a3{round(cost, 2)}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    tube_cost = 2.40\n    bus_cost = 1.50\n    total_cost = 0\n    bus_cost_set = 0\n    bus_set = 0\n\n    for i in journey:\n        if isinstance(i, str):\n            total_cost += tube_cost\n        elif isinstance(i, int):\n            bus_cost_set += bus_cost\n            bus_set += 1\n            if bus_set == 2:\n                total_cost += bus_cost_set\n                bus_set = 0\n                bus_cost_set = 0\n        else:\n            pass\n    if bus_set > 0:\n        total_cost += bus_cost_set\n    total_cost = round(total_cost, 2)\n    return '\u00a3' + str(total_cost)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    bus_cost = 0\n    for i in journey:\n        if isinstance(i, str):\n            cost += 2.4\n        elif isinstance(i, int):\n            if bus_cost == 0:\n                bus_cost = i * 1.5\n            else:\n                bus_cost += i * 1.5\n                if i == 1:\n                    bus_cost -= 0.5 * 1.5\n    return f'\u00a3{round(cost + bus_cost, 2)}'",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_cost = 0\n    bus_fare = 0\n    bus_counts = 0\n    for item in journey:\n        if isinstance(item, str):\n            tube_cost += 2.4\n        else:\n            bus_fare += 1.5\n            if bus_fare > 3:\n                bus_fare = 3\n            bus_counts += 1\n    cost = tube_cost + (bus_fare / 1.5) * bus_counts\n    return \"\u00a3{:.2f}\".format(cost)",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    cost = 0\n    bus_capped = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            cost += tube_fare\n        elif isinstance(journey[i], int):\n            bus_capped += bus_fare\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                bus_capped += bus_fare\n            else:\n                cost += min(bus_capped, bus_fare)\n                bus_capped = 0\n    return '\u00a3{:.2f}'.format(cost + bus_capped)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_cost = 0\n    bus_fare = 0\n    bus_counts = [0]\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_cost += 2.40\n        elif isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_fare += 1.50\n                bus_counts[-1] += 1\n                if bus_counts[-1] == 2:\n                    bus_fare -= 1.50\n                    bus_counts.pop()\n            else:\n                bus_fare = 1.50\n                bus_counts.append(1)\n        cost = tube_cost + bus_fare\n    return '\u00a3{:,.2f}'.format(cost)",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def london_city_hacker(journey):\n    tube_fare = 2.40\n    bus_fare = 1.50\n    cost = 0\n    bus_capped = 0\n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            cost += tube_fare\n        elif isinstance(journey[i], int):\n            bus_capped += bus_fare\n            if i < len(journey) - 1 and isinstance(journey[i + 1], int):\n                bus_capped += bus_fare\n            else:\n                cost += min(bus_capped, bus_fare)\n                bus_capped = 0\n    return '\u00a3{:.2f}'.format(cost + bus_capped)",
            "logp": null
        },
        {
            "content": "def london_city_hacker(journey):\n    cost = 0\n    tube_cost = 0\n    bus_fare = 0\n    bus_counts = [0]\n    \n    for i in range(len(journey)):\n        if isinstance(journey[i], str):\n            tube_cost += 2.40\n        elif isinstance(journey[i], int):\n            if i > 0 and isinstance(journey[i-1], int):\n                bus_fare += 1.50\n                bus_counts[-1] += 1\n                if bus_counts[-1] == 2:\n                    bus_fare -= 1.50\n                    bus_counts.pop()\n            else:\n                bus_fare = 1.50\n                bus_counts.append(1)\n        cost = tube_cost + bus_fare\n    return '\u00a3{:,.2f}'.format(cost)",
            "logp": null
        }
    ]
}