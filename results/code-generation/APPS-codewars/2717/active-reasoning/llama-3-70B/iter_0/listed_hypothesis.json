{
    "0": [
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = num // gcd(result, num) * gcd(result, num)\n    return result",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n    return result",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n\n    return result",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for i in range(1, len(lst)):\n        result = lcm(result, lst[i])\n\n    for i in range(2, result + 1):\n        is_factor = True\n        for num in lst:\n            if num % i != 0:\n                is_factor = False\n                break\n        if is_factor:\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n\n    for i in range(2, result):\n        if all(result % j == 0 for j in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = num // gcd(result, num) * gcd(result, num)\n    return result",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = num // gcd(result, num) * gcd(result, num)\n    return result",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = num // gcd(result, num) * gcd(result, num)\n    return result if result > 1 else 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for i in range(1, len(lst)):\n        result = lcm(result, lst[i])\n\n    for i in range(2, result + 1):\n        if all(result % j == 0 for j in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    \n    def lcm(a, b):\n        return a * b // gcd(a, b)\n    \n    result = lst[0]\n    for i in lst[1:]:\n        result = lcm(result, i)\n    \n    for i in range(2, result):\n        is_common_factor = True\n        for num in lst:\n            if num % i != 0:\n                is_common_factor = False\n                break\n        if is_common_factor:\n            return i\n    return 1",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = num // gcd(result, num) * gcd(result, num)\n\n    for num in range(2, result):\n        if all(num % i == 0 for i in lst):\n            return num\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    res = lst[0]\n    for num in lst[1:]:\n        res = lcm(res, num)\n\n    for i in range(2, res):\n        if all(num % i == 0 for num in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for i in lst[1:]:\n        result = lcm(result, i)\n\n    for i in range(2, result):\n        if all(i % j == 0 for j in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n    return [i for i in range(2, result + 1) if all(x % i == 0 for x in lst)][0] if any(all(x % i == 0 for x in lst) for i in range(2, result + 1)) else 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    \n    def lcm(a, b):\n        return a * b // gcd(a, b)\n    \n    res = lst[0]\n    for i in lst[1:]:\n        res = lcm(res, i)\n    \n    for i in range(2, res):\n        if all(x % i == 0 for x in lst):\n            return i\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    result = lst[0]\n    for num in lst[1:]:\n        result = num // gcd(result, num) * gcd(result, num)\n    for i in range(2, result):\n        if all(num % i == 0 for num in lst):\n            return i\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n    return [i for i in range(2, result + 1) if all(num % i == 0 for num in lst)][0] if any(all(num % i == 0 for num in lst) for i in range(2, result + 1)) else 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for i in range(1, len(lst)):\n        result = lcm(result, lst[i])\n\n    for i in range(2, result):\n        is_factor = True\n        for j in lst:\n            if j % i != 0:\n                is_factor = False\n                break\n        if is_factor:\n            return i\n\n    return 1",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n\n    for i in range(2, result):\n        if all(num % i == 0 for num in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for i in lst[1:]:\n        result = lcm(result, i)\n\n    for i in range(2, result):\n        if all(x % i == 0 for x in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n    \n    for i in range(2, result):\n        if all(num % i == 0 for num in lst):\n            return i\n    \n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    \n    def lcm(a, b):\n        return a * b // gcd(a, b)\n    \n    result = lst[0]\n    for i in lst[1:]:\n        result = lcm(result, i)\n    \n    for i in range(2, result):\n        is_common_factor = True\n        for num in lst:\n            if num % i != 0:\n                is_common_factor = False\n                break\n        if is_common_factor:\n            return i\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    result = lst[0]\n    for num in lst[1:]:\n        result = num // gcd(result, num) * gcd(result, num)\n    for i in range(2, result):\n        if all(num % i == 0 for num in lst):\n            return i\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n\n    for i in range(2, result):\n        if all(num % i == 0 for num in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for i in range(1, len(lst)):\n        result = lcm(result, lst[i])\n\n    for i in range(2, result):\n        is_factor = True\n        for j in lst:\n            if j % i != 0:\n                is_factor = False\n                break\n        if is_factor:\n            return i\n\n    return 1",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for i in lst[1:]:\n        result = lcm(result, i)\n\n    for i in range(2, result):\n        if all(x % i == 0 for x in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    res = lst[0]\n    for num in lst[1:]:\n        res = lcm(res, num)\n\n    for i in range(2, res):\n        if all(num % i == 0 for num in lst):\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n\n    for i in range(2, result + 1):\n        is_factor = True\n        for num in lst:\n            if num % i != 0:\n                is_factor = False\n                break\n        if is_factor:\n            return i\n\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n    \n    for i in range(2, result):\n        if all(num % i == 0 for num in lst):\n            return i\n    \n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    \n    def lcm(a, b):\n        return a * b // gcd(a, b)\n    \n    res = lst[0]\n    for i in range(1, len(lst)):\n        res = lcm(res, lst[i])\n    \n    for i in range(2, res):\n        if all(j % i == 0 for j in lst):\n            return i\n    \n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    result = lst[0]\n    for num in lst[1:]:\n        result = num // gcd(result, num) * gcd(result, num)\n    for i in range(2, result):\n        if all(num % i == 0 for num in lst):\n            return i\n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for num in lst[1:]:\n        result = lcm(result, num)\n    \n    for i in range(2, result):\n        if all(num % i == 0 for num in lst):\n            return i\n    \n    return 1",
            "logp": null
        },
        {
            "content": "def scf(lst):\n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    result = lst[0]\n    for i in range(1, len(lst)):\n        result = lcm(result, lst[i])\n\n    for i in range(2, result):\n        is_factor = True\n        for j in lst:\n            if j % i != 0:\n                is_factor = False\n                break\n        if is_factor:\n            return i\n\n    return 1",
            "logp": null
        }
    ]
}