{
    "0": [
        {
            "content": "def is_isogram(word):\n    # Check if the input is a string\n    if type(word) != str:\n        return False\n    \n    # Check if the input is not empty\n    if word == \"\":\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    clean_word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # Count the occurrences of each letter\n    letter_counts = Counter(clean_word)\n    \n    # Check if all the letter counts are the same\n    if len(set(letter_counts.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if type(word) != str or word == \"\":\n        return False\n    word = re.sub(r'[^a-zA-Z]', '', word)\n    word = word.lower()\n    count = Counter(word)\n    return len(set(count.values())) == 1\n\nprint(is_isogram(\"hello\")) # False\nprint(is_isogram(\"world\")) # True",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != '':\n        word = re.sub(r'[^a-zA-Z]', '', word)\n        word = word.lower()\n        counts = Counter(word)\n        return len(set(counts.values())) == 1\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if len(word) == 0:\n        return False\n    word = re.sub('[^A-Za-z]', '', word)\n    word = word.lower()\n    letter_count = Counter(word)\n    return len(set(letter_count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != \"\":\n        word = re.sub(r'[^a-zA-Z]', '', word).lower()\n        count = Counter(word)\n        return all(count[char] == count[word[0]] for char in word)\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != \"\":\n        # Remove non-letter characters and convert to lowercase\n        word = re.sub(r'[^a-zA-Z]', '', word.lower())\n        # Count the occurrences of each letter\n        letter_counts = Counter(word)\n        # Check if each letter appears the same number of times\n        return all(count == letter_counts[word[0]] for count in letter_counts.values())\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n    counts = Counter(word)\n    return len(set(counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n\n    # check if input is a string\n    if not isinstance(word, str):\n        return False\n\n    # check if input is empty\n    if len(word) == 0:\n        return False\n\n    # remove non-letter characters and convert to lowercase\n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n\n    # count the frequency of each letter\n    count = Counter(word)\n\n    # check if all letters have the same frequency\n    return all(count[letter] == count[word[0]] for letter in count)",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if word is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if word is not empty\n    if len(word) == 0:\n        return False\n    \n    # Ignore non-letter characters\n    word = re.sub('[^a-zA-Z]', '', word)\n    \n    # Convert word to lowercase\n    word = word.lower()\n    \n    # Count the number of occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # Check if each letter appears the same number of times\n    if len(set(letter_counts.values())) == 1:\n        return True\n    \n    return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if word is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if word is empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n    \n    # Count the frequency of each letter\n    letter_counts = Counter(word)\n    \n    # Check if all letter counts are the same\n    return all(count == letter_counts[word[0]] for count in letter_counts.values())",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if input is empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    cleaned_word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # Count the occurrences of each letter\n    letter_counts = Counter(cleaned_word)\n    \n    # Check if each letter appears the same number of times\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n    \n    word = re.sub(\"[^a-zA-Z]\", \"\", word.lower())\n    counter = Counter(word)\n    \n    return len(counter.values()) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != '':\n        word = re.sub('[^A-Za-z]', '', word.lower())\n        counts = Counter(word)\n        return len(set(counts.values())) == 1\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if word is not empty\n    if len(word) == 0:\n        return False\n    \n    # Convert word to lowercase and remove non-letter characters\n    cleaned_word = re.sub('[^a-zA-Z]', '', word.lower())\n    \n    # Count the occurrences of each letter in the cleaned word\n    letter_counts = Counter(cleaned_word)\n    \n    # Check if the number of occurrences of each letter is the same\n    if len(set(letter_counts.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if input is not empty\n    if len(word) == 0:\n        return False\n    \n    # Ignore non-letter characters\n    word = re.sub(r'[^a-zA-Z]', '', word)\n    \n    # Make all letters lowercase\n    word = word.lower()\n    \n    # Count the occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # Check if all letter counts are the same\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str): # check if the input is a string\n        return False\n    if not word: # check if the string is empty\n        return False\n    word = re.sub('[^a-zA-Z]', '', word) # remove non-letter characters\n    word = word.lower() # convert the string to lowercase\n    letter_counts = Counter(word) # count the number of occurrences of each letter\n    return len(set(letter_counts.values())) == 1 # return True if all letter counts are the same, False otherwise",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if not word:\n        return False\n    \n    word = re.sub('[^a-zA-Z]', '', word.lower())  # Remove non-letter characters and convert to lowercase\n    \n    letter_counts = Counter(word)\n    \n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or word == '':\n        return False\n    \n    word = re.sub(r'[^A-Za-z]', '', word).lower()\n    letter_count = Counter(word)\n    \n    return len(set(letter_count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):   # Check if word is a string\n        return False\n    if len(word) == 0:   # Check if word is empty\n        return False\n    \n    word = re.sub('[^a-zA-Z]', '', word)   # Remove non-letter characters\n    word = word.lower()   # Convert all letters to lowercase\n    count = Counter(word)   # Count the number of occurrences of each letter\n\n    if len(count) == 1:   # If there is only one letter, it is an isogram\n        return True\n\n    # Check if each letter appears the same number of times\n    return len(set(count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    \n    if len(word) == 0:\n        return False\n    \n    word = re.sub(r'[^A-Za-z]', '', word)\n    word = word.lower()\n    \n    counter = Counter(word)\n    \n    return len(set(counter.values())) == 1",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def is_isogram(word):\n    if type(word) != str or len(word) == 0:\n        return False\n    \n    word = re.sub('[^a-zA-Z]', '', word)\n    word = word.lower()\n    \n    letter_count = Counter(word)\n    \n    if len(set(letter_count.values())) == 1:\n        return True\n    \n    return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n\n    if not isinstance(word, str):  # check if word is a string\n        return False\n\n    if len(word) == 0:  # check if word is empty\n        return False\n\n    word = re.sub('[^a-zA-Z]', '', word)  # remove non-letter characters\n    word = word.lower()  # convert word to lowercase\n\n    # count the number of occurrences of each letter in the word\n    letter_counts = Counter(word)\n\n    # check if the number of occurrences of each letter is the same\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n    word = re.sub('[^A-Za-z]+', '', word.lower())\n    letter_count = Counter(word)\n    return len(set(letter_count.values())) == 1",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    if isinstance(word, str) and word != \"\":\n        # Remove non-letter characters and convert to lowercase\n        word = re.sub(\"[^a-zA-Z]\", \"\", word.lower())\n        \n        # Count the number of occurrences of each letter\n        counts = Counter(word)\n        \n        # Check if each letter appears the same number of times\n        return len(set(counts.values())) == 1\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != \"\":\n        word = re.sub('[^a-zA-Z]', '', word.lower())\n        count = Counter(word)\n        return len(set(count.values())) == 1\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n\n    if not isinstance(word, str):\n        return False\n\n    if len(word) == 0:\n        return False\n\n    word = word.lower()\n    word = re.sub('[^a-z]', '', word)\n\n    counts = Counter(word)\n\n    return len(set(counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if len(word) == 0:\n        return False\n    word = word.lower()\n    word = re.sub(r'[^a-z]', '', word)\n    counter = Counter(word)\n    return len(set(counter.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if the input is a string\n    if type(word) is not str:\n        return False\n    \n    # Check if the input is empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub('[^A-Za-z]', '', word.lower())\n    \n    # Check if the letters appear the same number of times\n    letter_counts = Counter(word)\n    if len(set(letter_counts.values())) == 1:\n        return True\n    \n    return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    \n    if not word:\n        return False\n    \n    word = re.sub('[^a-zA-Z]', '', word)\n    word = word.lower()\n    \n    counter = Counter(word)\n    \n    return len(set(counter.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if type(word) != str or word == '':\n        return False\n\n    word = re.sub('[^a-zA-Z]', '', word)\n    word = word.lower()\n    counts = Counter(word)\n\n    return len(set(counts.values())) == 1\n",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def is_isogram(word):\n    # check if the input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # check if the input is not empty\n    if not word:\n        return False\n    \n    # remove non-letter characters and convert to lowercase\n    cleaned_word = re.sub('[^a-zA-Z]', '', word).lower()\n    \n    # count the occurrences of each letter in the cleaned word\n    letter_counts = Counter(cleaned_word)\n    \n    # check if each letter appears the same number of times\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != \"\":\n        word = re.sub(\"[^a-zA-Z]+\", \"\", word.lower())\n        counts = Counter(word)\n        return len(set(counts.values())) == 1\n    return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if the input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if the string is empty\n    if len(word) == 0:\n        return False\n    \n    # Ignore non-letter characters and convert the string to lowercase\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n    \n    # Count the number of occurrences of each letter in the word\n    letter_counts = Counter(word)\n    \n    # Check if all letters have the same number of occurrences\n    if len(set(letter_counts.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    if type(word) != str or word == \"\":\n        return False\n    \n    word = word.lower()\n    word = re.sub(\"[^a-z]\", \"\", word)\n    \n    letter_counts = Counter(word)\n    counts = list(letter_counts.values())\n    \n    return len(set(counts)) == 1",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    if isinstance(word, str) and word != '':\n        # Remove non-letter characters and convert to lowercase\n        word = re.sub('[^a-zA-Z]', '', word).lower()\n        # Count the occurrence of each letter in the word\n        letter_count = Counter(word)\n        # Check if all letters have the same count\n        return len(set(letter_count.values())) == 1\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # check if word is empty or None\n    if not word:\n        return False\n    \n    # remove non-letter characters and convert to lowercase\n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # count the occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # check if all letter counts are the same\n    if len(set(letter_counts.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word:\n        # Remove non-letter characters\n        word = re.sub(r'[^a-zA-Z]', '', word)\n        # Convert all letters to lowercase for case insensitivity\n        word = word.lower()\n        # Count the frequency of each letter\n        letter_counts = Counter(word)\n        # Check if the frequency of each letter is the same\n        if len(set(letter_counts.values())) == 1:\n            return True\n    return False",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    # Check if the input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if the input is not empty\n    if not word:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n    \n    # Count the occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # Check if all the letter counts are the same\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if type(word) != str or len(word) == 0:\n        return False\n    \n    cleaned_word = re.sub(r'[^a-zA-Z]', '', word)\n    cleaned_word = cleaned_word.lower()\n    \n    char_count = Counter(cleaned_word)\n    \n    return len(set(char_count.values())) == 1",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    # Check if word is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if word is not empty\n    if not word:\n        return False\n    \n    # Convert word to lowercase and remove non-letter characters\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n    \n    # Count the occurrences of each letter in the word\n    letter_counts = Counter(word)\n    \n    # Check if each letter appears the same number of times\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        }
    ]
}