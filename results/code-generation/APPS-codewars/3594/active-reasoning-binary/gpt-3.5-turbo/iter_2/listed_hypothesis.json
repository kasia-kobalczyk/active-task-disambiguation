{
    "0": [
        {
            "content": "def is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if input is empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n    \n    # Count the number of occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # Check if each letter appears the same number of times\n    if len(set(letter_counts.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n\n    letter_counts = Counter(word)\n\n    return len(letter_counts) == 1\n\nprint(is_isogram(\"isogram\")) # True\nprint(is_isogram(\"word\")) # False\nprint(is_isogram(\"wordd\")) # False\nprint(is_isogram(\"WorD\")) # True\nprint(is_isogram(\"wordd-\")) # False\nprint(is_isogram(\"\")) # False\nprint(is_isogram(123)) # False",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    # Check if word is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if word is not empty\n    if len(word) == 0:\n        return False\n    \n    # Ignore non-letter characters\n    word = re.sub('[^a-zA-Z]', '', word)\n    \n    # Convert word to lowercase\n    word = word.lower()\n    \n    # Count the number of occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # Check if each letter appears the same number of times\n    return all(count == letter_counts[word[0]] for count in letter_counts.values())",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != \"\":\n        # Remove non-letter characters and convert to lowercase\n        word = re.sub(\"[^a-zA-Z]\", \"\", word.lower())\n        # Count the occurrences of each letter\n        letter_count = Counter(word)\n        # Check if all letter counts are the same\n        return len(set(letter_count.values())) == 1\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if type(word) != str or word == \"\":\n        return False\n    word = word.lower()\n    word = re.sub('[^a-zA-Z]', '', word)\n    count = Counter(word)\n    return len(set(count.values())) == 1",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if input is empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n    \n    # Count the occurrences of each letter\n    letter_count = Counter(word)\n    \n    # Check if each letter appears the same number of times\n    return len(set(letter_count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if len(word) == 0:\n        return False\n    \n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    letter_count = Counter(word)\n    \n    return len(set(letter_count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != \"\":\n        word = re.sub('[^a-zA-Z]', '', word.lower())\n        counts = Counter(word)\n        if len(set(counts.values())) == 1:\n            return True\n    return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if the input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if the string is not empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub('[^a-zA-Z]', '', word).lower()\n    \n    # Count the occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # Check if the count of any letter is not equal to the count of the first letter\n    first_letter_count = letter_counts[word[0]]\n    for count in letter_counts.values():\n        if count != first_letter_count:\n            return False\n    \n    return True",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if isinstance(word, str) and word != \"\":\n        word = re.sub(\"[^a-zA-Z]\", \"\", word)\n        word = word.lower()\n        counts = Counter(word)\n        if len(set(counts.values())) == 1:\n            return True\n        else:\n            return False\n    else:\n        return False",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str): # checks if word is not a string\n        return False\n    if not word: # checks if word is empty or None\n        return False\n    word = re.sub('[^a-zA-Z]', '', word.lower()) # removes non-letter characters and converts word to lowercase\n    counter = Counter(word) # counts the occurrence of each letter in the word\n    return len(set(counter.values())) == 1 # checks if all letter occurrences are the same",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if not word:\n        return False\n    word = re.sub('[^a-zA-Z]', '', word.lower())\n    counts = Counter(word)\n    return len(set(counts.values())) == 1",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    if not isinstance(word, str) or word == \"\":\n        return False\n    \n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    counts = Counter(word)\n    \n    return len(set(counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n\n    if not word:\n        return False\n\n    word = re.sub(r'[^a-zA-Z]', '', word)\n    word = word.lower()\n    letter_count = Counter(word)\n\n    return len(set(letter_count.values())) == 1",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    if type(word) != str or not word:\n        return False\n    \n    word = re.sub(r'[^a-zA-Z]', '', word)\n    word = word.lower()\n    \n    count = Counter(word)\n    \n    return len(set(count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if not word:\n        return False\n    \n    word = re.sub('[^a-zA-Z]+', '', word)\n    word = word.lower()\n    letter_counts = Counter(word)\n    if len(set(letter_counts.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    if not isinstance(word, str) or word == \"\":\n        return False\n    word = re.sub(r'[^A-Za-z]+', '', word.lower())\n    counts = Counter(word)\n    return all(count == counts[word[0]] for count in counts.values())",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if word is empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub('[^a-zA-Z]', '', word).lower()\n    \n    # Check if each letter appears the same number of times\n    letter_counts = Counter(word)\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # check if the input is a string\n    if type(word) != str:\n        return False\n    \n    # check if the string is not empty\n    if len(word) == 0:\n        return False\n    \n    # convert the string to lowercase\n    word = word.lower()\n    \n    # remove non-letter characters\n    word = re.sub(r'[^a-zA-Z]', '', word)\n    \n    # check if the string is an isogram\n    if len(set(word)) == len(word):\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "from collections import Counter\n\ndef is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if len(word) == 0:\n        return False\n\n    word = word.lower()\n\n    counts = Counter(word)\n\n    for count in counts.values():\n        if count > 1:\n            return False\n\n    return True",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def is_isogram(word):\n    # Check if word is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if word is not empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert word to lowercase\n    word = re.sub('[^a-zA-Z]', '', word).lower()\n    \n    # Create a counter object to count the occurrences of each letter\n    counter = Counter(word)\n    \n    # Check if all letters appear the same number of times\n    return len(set(counter.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if input is not empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # Count the frequency of each letter\n    letter_counts = Counter(word)\n    \n    # Check if all letters have the same frequency\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n\n    # check if input is a string\n    if not isinstance(word, str):\n        return False\n\n    # check if word is not empty\n    if len(word) == 0:\n        return False\n\n    # convert word to lower case\n    word = word.lower()\n\n    # remove non-letter characters\n    word = re.sub('[^a-z]', '', word)\n\n    # count the frequency of each letter in the word\n    letter_count = Counter(word)\n\n    # check if all letters have the same frequency\n    if len(set(letter_count.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n    \n    word = re.sub(r'[^a-zA-Z]', '', word)\n    word = word.lower()\n    count = Counter(word)\n    \n    return len(set(count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # check if word is a string\n    if not isinstance(word, str):\n        return False\n    \n    # check if word is not empty\n    if len(word) == 0:\n        return False\n    \n    # remove non-letter characters and convert to lowercase\n    word = re.sub('[^a-zA-Z]', '', word).lower()\n    \n    # count the occurrences of each letter\n    letter_count = Counter(word)\n    \n    # check if each letter appears the same number of times\n    if len(set(letter_count.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if string is not empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # Count the occurrences of each letter in the string\n    letter_counts = Counter(word)\n    \n    # Check if each letter appears the same number of times\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    if isinstance(word, str) and word:\n        word = re.sub('[^A-Za-z]', '', word.lower())\n        counts = Counter(word)\n        return len(set(counts.values())) == 1\n    return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n    \n    # remove non-letter characters and convert to lowercase\n    cleaned_word = re.sub(\"[^a-zA-Z]\", \"\", word.lower())\n    \n    letter_counts = Counter(cleaned_word)\n    \n    # check if all letter counts are the same\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n\n    # Remove non-letter characters and convert to lowercase\n    clean_word = re.sub('[^a-zA-Z]', '', word.lower())\n\n    # Count the frequency of each letter\n    letter_count = Counter(clean_word)\n\n    # Check if all frequencies are the same\n    return len(set(letter_count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if len(word) == 0:\n        return False\n    \n    # remove non-letter characters and convert to lowercase\n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # count the occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # check if each letter appears the same number of times\n    if len(set(letter_counts.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def is_isogram(word):\n    # Check if word is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if word is not empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert word to lowercase\n    word = re.sub('[^a-zA-Z]', '', word).lower()\n    \n    # Count the frequency of each letter in the word\n    letter_counts = Counter(word)\n    \n    # Check if the frequency of each letter is the same\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if input is not empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # Count the frequency of each letter\n    letter_counts = Counter(word)\n    \n    # Check if all letters have the same frequency\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n\n    # check if input is a string\n    if not isinstance(word, str):\n        return False\n\n    # check if word is not empty\n    if len(word) == 0:\n        return False\n\n    # convert word to lower case\n    word = word.lower()\n\n    # remove non-letter characters\n    word = re.sub('[^a-z]', '', word)\n\n    # count the frequency of each letter in the word\n    letter_count = Counter(word)\n\n    # check if all letters have the same frequency\n    if len(set(letter_count.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n    \n    word = re.sub(r'[^a-zA-Z]', '', word)\n    word = word.lower()\n    count = Counter(word)\n    \n    return len(set(count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # check if word is a string\n    if not isinstance(word, str):\n        return False\n    \n    # check if word is not empty\n    if len(word) == 0:\n        return False\n    \n    # remove non-letter characters and convert to lowercase\n    word = re.sub('[^a-zA-Z]', '', word).lower()\n    \n    # count the occurrences of each letter\n    letter_count = Counter(word)\n    \n    # check if each letter appears the same number of times\n    if len(set(letter_count.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    # Check if input is a string\n    if not isinstance(word, str):\n        return False\n    \n    # Check if string is not empty\n    if len(word) == 0:\n        return False\n    \n    # Remove non-letter characters and convert to lowercase\n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # Count the occurrences of each letter in the string\n    letter_counts = Counter(word)\n    \n    # Check if each letter appears the same number of times\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "from collections import Counter\nimport re\n\ndef is_isogram(word):\n    if isinstance(word, str) and word:\n        word = re.sub('[^A-Za-z]', '', word.lower())\n        counts = Counter(word)\n        return len(set(counts.values())) == 1\n    return False",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n    \n    # remove non-letter characters and convert to lowercase\n    cleaned_word = re.sub(\"[^a-zA-Z]\", \"\", word.lower())\n    \n    letter_counts = Counter(cleaned_word)\n    \n    # check if all letter counts are the same\n    return len(set(letter_counts.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str) or len(word) == 0:\n        return False\n\n    # Remove non-letter characters and convert to lowercase\n    clean_word = re.sub('[^a-zA-Z]', '', word.lower())\n\n    # Count the frequency of each letter\n    letter_count = Counter(clean_word)\n\n    # Check if all frequencies are the same\n    return len(set(letter_count.values())) == 1",
            "logp": null
        },
        {
            "content": "def is_isogram(word):\n    if not isinstance(word, str):\n        return False\n    if len(word) == 0:\n        return False\n    \n    # remove non-letter characters and convert to lowercase\n    word = re.sub(r'[^a-zA-Z]', '', word.lower())\n    \n    # count the occurrences of each letter\n    letter_counts = Counter(word)\n    \n    # check if each letter appears the same number of times\n    if len(set(letter_counts.values())) == 1:\n        return True\n    else:\n        return False",
            "logp": null
        }
    ]
}