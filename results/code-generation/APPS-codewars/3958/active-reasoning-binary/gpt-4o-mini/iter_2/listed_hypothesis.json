{
    "0": [
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    result = signature[:]\n    for _ in range(len(signature), n + 1):\n        next_value = sum(result[i] for i in indexes)\n        result.append(next_value)\n    \n    return result[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    values = signature[:]\n    for i in range(len(signature), n + 1):\n        next_value = sum(values[index] for index in indexes)\n        values.append(next_value)\n    return values[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    sequence = signature[:]\n    for i in range(len(signature), n + 1):\n        next_value = sum(sequence[j] for j in indexes)\n        sequence.append(next_value)\n    \n    return sequence[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    seq = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(seq[idx] for idx in indexes)\n        seq.append(next_value)\n    \n    return seq[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    sequence = signature[:]\n    for _ in range(len(signature), n + 1):\n        next_value = sum(sequence[i] for i in indexes)\n        sequence.append(next_value)\n    \n    return sequence[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    result = signature[:]\n    for i in range(len(signature), n + 1):\n        result.append(sum(result[j] for j in indexes))\n    return result[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    fib_sequence = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(fib_sequence[i - 1 - idx] for idx in indexes)\n        fib_sequence.append(next_value)\n    \n    return fib_sequence[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    results = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(results[j] for j in indexes)\n        results.append(next_value)\n    \n    return results[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    seq = signature[:]\n    for i in range(len(signature), n + 1):\n        next_value = sum(seq[j] for j in indexes)\n        seq.append(next_value)\n    \n    return seq[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    for i in range(len(signature), n + 1):\n        next_value = sum(signature[j] for j in indexes)\n        signature.append(next_value)\n    return signature[n]\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    fib_sequence = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(fib_sequence[i - index - 1] for index in indexes)\n        fib_sequence.append(next_value)\n    \n    return fib_sequence[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    sequence = signature[:]\n    for i in range(len(signature), n + 1):\n        next_value = sum(sequence[j] for j in indexes)\n        sequence.append(next_value)\n        sequence.pop(0)  # Keep the length of the sequence equal to the signature length\n    \n    return sequence[-1]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    fib_sequence = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(fib_sequence[i - 1 - idx] for idx in indexes)\n        fib_sequence.append(next_value)\n    \n    return fib_sequence[n]\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    fib_sequence = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(fib_sequence[i - index - 1] for index in indexes)\n        fib_sequence.append(next_value)\n    \n    return fib_sequence[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    sequence = signature[:]\n    for i in range(len(signature), n + 1):\n        next_value = sum(sequence[j] for j in indexes)\n        sequence.append(next_value)\n        sequence.pop(0)\n    \n    return sequence[-1]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    fib_sequence = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(fib_sequence[i - 1 - idx] for idx in indexes)\n        fib_sequence.append(next_value)\n    \n    return fib_sequence[n]\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    fib_sequence = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(fib_sequence[i - index - 1] for index in indexes)\n        fib_sequence.append(next_value)\n    \n    return fib_sequence[n]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef custom_fib(signature, indexes, n):\n    if n < len(signature):\n        return signature[n]\n    \n    fib_sequence = signature[:]\n    \n    for i in range(len(signature), n + 1):\n        next_value = sum(fib_sequence[i - 1 - idx] for idx in indexes)\n        fib_sequence.append(next_value)\n    \n    return fib_sequence[n]\n```",
            "logp": null
        }
    ]
}