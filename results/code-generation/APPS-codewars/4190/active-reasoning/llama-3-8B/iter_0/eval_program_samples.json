{
    "0": {
        "0": [
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if (s[i] in v and s[i+1] in v) or (s[i] not in v and s[i+1] not in v):\n            return False\n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    if len(vowels) == 0: \n        return False \n    if s[0] in 'aeiou': \n        prev = 'vowel' \n    else: \n        prev = 'consonant' \n    for i in range(1, len(s)): \n        if s[i] in 'aeiou': \n            curr = 'vowel' \n        else: \n            curr = 'consonant' \n        if curr == prev: \n            return False \n        prev = curr \n    return True"
        ],
        "1": [
            "def is_alt(s):\n    for char, next_char in zip(s, s[1:]):\n        if re.match('[aeiou]', char) and re.match('[aeiou]', next_char):\n            return False\n        if not re.match('[aeiou]', char) and not re.match('[aeiou]', next_char):\n            return False\n    return True",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s): \n    vowels = 'aeiou'\n    res = []\n    for char in s:\n        if char in vowels:\n            res.append(1)\n        else:\n            res.append(0)\n    for i in range(len(res)-1):\n        if res[i] == res[i+1]:\n            return False\n    return True"
        ],
        "2": [
            "def is_alt(s):\n    vowels = 'aeiou'\n    s = re.sub('[^a-z]', '', s)\n    for i in range(0, len(s)-1):\n        if s[i] in vowels and s[i+1] in vowels or s[i] not in vowels and s[i+1] not in vowels:\n            return False\n    return True",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s)\n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s)\n    return len(vowels) > 0 and len(consonants) > 0 and (vowels[0] != consonants[0] and (len(vowels) == len(consonants) and all(vowels[i] != consonants[i] for i in range(len(vowels)))))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))"
        ],
        "3": [
            "def is_alt(s):\n    for char, next_char in zip(s, s[1:]):\n        if re.match('[aeiou]', char) and re.match('[aeiou]', next_char):\n            return False\n        if not re.match('[aeiou]', char) and not re.match('[aeiou]', next_char):\n            return False\n    return True",
            "def is_alt(s):\n    prev = None\n    for c in s:\n        if prev is None:\n            prev = c in 'aeiou'\n        elif prev == (c in 'aeiou'):\n            return False\n        prev = c in 'aeiou'\n    return True",
            "def is_alt(s): \n    vowels = 'aeiou'\n    res = []\n    for char in s:\n        if char in vowels:\n            res.append(1)\n        else:\n            res.append(0)\n    for i in range(len(res)-1):\n        if res[i] == res[i+1]:\n            return False\n    return True"
        ],
        "4": [
            "def is_alt(s):\n    str = list(s)\n    for i in range(len(str)-1):\n        if str[i] in 'aeiou' and str[i+1] in 'aeiou':\n            return False\n        if str[i] not in 'aeiou' and str[i+1] not in 'aeiou':\n            return False\n    return True"
        ]
    },
    "1": {
        "0": [
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s) \n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s) \n    if len(vowels) != len(consonants): \n        return False \n    alt = True \n    for vowel, consonant in zip(vowels, consonants): \n        if s.index(vowel) > s.index(consonant): \n            alt = False \n            break \n    return alt",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True"
        ],
        "1": [
            "def is_alt(s):\n    vowels = \"aeiou\"\n    if len(s) % 2 != 0:\n        return False\n    for i in range(0, len(s), 2):\n        if s[i] in vowels:\n            for j in range(i+1, len(s), 2):\n                if s[j] in vowels:\n                    return False\n        else:\n            for j in range(i+1, len(s), 2):\n                if s[j] not in vowels:\n                    return False\n    return True",
            "def is_alt(s): \n    vowels = 'aeiou'\n    res = []\n    for char in s:\n        if char in vowels:\n            res.append(1)\n        else:\n            res.append(0)\n    for i in range(len(res)-1):\n        if res[i] == res[i+1]:\n            return False\n    return True"
        ],
        "2": [
            "def is_alt(s): \n    vowels = re.findall(r'[aeiou]', s)\n    consonants = re.findall(r'[bcdfghjklmnpqrstvwxyz]', s)\n    return len(vowels) > 0 and len(consonants) > 0 and (vowels[0] != consonants[0] and (len(vowels) == len(consonants) and all(vowels[i] != consonants[i] for i in range(len(vowels)))))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s): \n    vowels = \"aeiou\"\n    char_list = list(s)\n    i = 0\n    while i < len(char_list):\n        if char_list[i] in vowels:\n            i += 1\n        elif i == 0:\n            return False\n        elif char_list[i-1] not in vowels:\n            return False\n        else:\n            i += 1\n    return True"
        ],
        "3": [
            "def is_alt(s):\n    prev = None\n    for c in s:\n        if prev is None:\n            prev = c in 'aeiou'\n        elif prev == (c in 'aeiou'):\n            return False\n        prev = c in 'aeiou'\n    return True",
            "def is_alt(s): \n    vowels = 'aeiou'\n    res = []\n    for char in s:\n        if char in vowels:\n            res.append(1)\n        else:\n            res.append(0)\n    for i in range(len(res)-1):\n        if res[i] == res[i+1]:\n            return False\n    return True"
        ],
        "4": [
            "def is_alt(s): \n    if len(s) <= 1:\n        return False\n    vowels = 'aeiou'\n    prev_was_vowel = s[0] in vowels\n    for char in s[1:]:\n        if (char in vowels) == prev_was_vowel:\n            return False\n        prev_was_vowel = char in vowels\n    return True"
        ]
    },
    "2": {
        "0": [
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):  \n    s = re.sub('b', '', s)\n    v = ['a', 'e', 'i', 'o', 'u']\n    for i in v:\n        s = s.replace(i, '')\n    if len(s) % 2 == 0:\n        return False\n    else:\n        return True",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))"
        ],
        "1": [
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstwxyz]', s)\n    return bool(len(vowels) == len(consonants))",
            "def is_alt(s): \n    vowels = 'aeiou'\n    res = []\n    for char in s:\n        if char in vowels:\n            res.append(1)\n        else:\n            res.append(0)\n    for i in range(len(res)-1):\n        if res[i] == res[i+1]:\n            return False\n    return True"
        ],
        "2": [
            "def is_alt(s): \n    if len(s) <= 1:\n        return False\n    vowels = 'aeiou'\n    prev_was_vowel = s[0] in vowels\n    for char in s[1:]:\n        if (prev_was_vowel and char in vowels) or (not prev_was_vowel and char not in vowels):\n            return False\n        prev_was_vowel = not prev_was_vowel\n    return True",
            "def is_alt(s):\n    vowels = re.findall('[aeiou]', s)\n    consonants = re.findall('[bcdfghjklmnpqrstvwxyz]', s)\n    if len(vowels) != len(consonants):\n        return False\n    for i in range(len(vowels)):\n        if i >= len(consonants) or i >= len(vowels):\n            break\n        if s[i] in vowels and s[i+1] in consonants or s[i] in consonants and s[i+1] in vowels:\n            continue\n        return False\n    return True"
        ],
        "3": [
            "def is_alt(s):\n    prev = None\n    for c in s:\n        if prev is None:\n            prev = c in 'aeiou'\n        elif prev == (c in 'aeiou'):\n            return False\n        prev = c in 'aeiou'\n    return True",
            "def is_alt(s): \n    vowels = 'aeiou'\n    res = []\n    for char in s:\n        if char in vowels:\n            res.append(1)\n        else:\n            res.append(0)\n    for i in range(len(res)-1):\n        if res[i] == res[i+1]:\n            return False\n    return True"
        ],
        "4": [
            "def is_alt(s): \n    if len(s) <= 1:\n        return False\n    vowels = 'aeiou'\n    prev_was_vowel = s[0] in vowels\n    for char in s[1:]:\n        if (prev_was_vowel and char in vowels) or (not prev_was_vowel and char not in vowels):\n            return False\n        prev_was_vowel = not prev_was_vowel\n    return True",
            "def is_alt(s):\n    vowels = 'aeiou'\n    s = re.sub('[^a-z]', '', s)\n    for i in range(len(s)-1):\n        if s[i] in vowels and s[i+1] in vowels or s[i] not in vowels and s[i+1] not in vowels:\n            return False\n    return True"
        ]
    }
}