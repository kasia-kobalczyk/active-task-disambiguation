{
    "0": [
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return \"GT\"\n    elif v1 < v2:\n        return \"LT\"\n    else:\n        return \"EQ\"",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return True\n    elif v1 < v2:\n        return False\n    else:\n        return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1_list = list(map(int, ver1.split('.')))\n    ver2_list = list(map(int, ver2.split('.')))\n\n    max_len = max(len(ver1_list), len(ver2_list))\n\n    ver1_list += [0] * (max_len - len(ver1_list))\n    ver2_list += [0] * (max_len - len(ver2_list))\n\n    for i in range(max_len):\n        if ver1_list[i] > ver2_list[i]:\n            return True\n        elif ver1_list[i] < ver2_list[i]:\n            return False\n\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1 = list(map(int, ver1.split('.')))\n    ver2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(ver1), len(ver2))\n    ver1 += [0]*(max_len - len(ver1))\n    ver2 += [0]*(max_len - len(ver2))\n    \n    if ver1 > ver2:\n        return \"GT\"\n    elif ver1 < ver2:\n        return \"LT\"\n    else:\n        return \"EQ\"",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return \"GT\"\n    elif v1 < v2:\n        return \"LT\"\n    else:\n        return \"EQ\"",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0]*(max_len - len(v1))\n    v2 += [0]*(max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    \n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return \"GT\"\n        elif v1[i] < v2[i]:\n            return \"LT\"\n    \n    return \"EQ\"",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1 = list(map(int, ver1.split('.')))\n    ver2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(ver1), len(ver2))\n    ver1 += [0] * (max_len - len(ver1))\n    ver2 += [0] * (max_len - len(ver2))\n    \n    for i in range(max_len):\n        if ver1[i] > ver2[i]:\n            return True\n        elif ver1[i] < ver2[i]:\n            return False\n    \n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1, ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return 'GT'\n        elif v1[i] < v2[i]:\n            return 'LT'\n    return 'EQ'",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return True\n    elif v1 < v2:\n        return False\n    else:\n        return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1_list = list(map(int, ver1.split('.')))\n    ver2_list = list(map(int, ver2.split('.')))\n\n    max_len = max(len(ver1_list), len(ver2_list))\n\n    ver1_list += [0] * (max_len - len(ver1_list))\n    ver2_list += [0] * (max_len - len(ver2_list))\n\n    for i in range(max_len):\n        if ver1_list[i] > ver2_list[i]:\n            return True\n        elif ver1_list[i] < ver2_list[i]:\n            return False\n\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1 = list(map(int, ver1.split('.')))\n    ver2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(ver1), len(ver2))\n    ver1 += [0]*(max_len - len(ver1))\n    ver2 += [0]*(max_len - len(ver2))\n    \n    for i in range(max_len):\n        if ver1[i] > ver2[i]:\n            return True\n        elif ver1[i] < ver2[i]:\n            return False\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return True\n    elif v1 < v2:\n        return False\n    else:\n        return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    \n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n    \n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0]*(max_len - len(v1))\n    v2 += [0]*(max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] < v2[i]:\n            return False\n        elif v1[i] > v2[i]:\n            return True\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1 = list(map(int, ver1.split('.')))\n    ver2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(ver1), len(ver2))\n    ver1 += [0] * (max_len - len(ver1))\n    ver2 += [0] * (max_len - len(ver2))\n    \n    for i in range(max_len):\n        if ver1[i] > ver2[i]:\n            return True\n        elif ver1[i] < ver2[i]:\n            return False\n    \n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1, ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return True\n    elif v1 < v2:\n        return False\n    else:\n        return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] < v2[i]:\n            return False\n        elif v1[i] > v2[i]:\n            return True\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1 = list(map(int, ver1.split('.')))\n    ver2 = list(map(int, ver2.split('.')))\n    \n    while len(ver1) < len(ver2):\n        ver1.append(0)\n    while len(ver2) < len(ver1):\n        ver2.append(0)\n        \n    for i in range(len(ver1)):\n        if ver1[i] > ver2[i]:\n            return True\n        elif ver1[i] < ver2[i]:\n            return False\n            \n    return True",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return True\n    elif v1 < v2:\n        return False\n    else:\n        return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    \n    for i in range(max_len):\n        if v1[i] < v2[i]:\n            return False\n        elif v1[i] > v2[i]:\n            return True\n    \n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1 = list(map(int, ver1.split('.')))\n    ver2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(ver1), len(ver2))\n    ver1 += [0]*(max_len - len(ver1))\n    ver2 += [0]*(max_len - len(ver2))\n    \n    for i in range(max_len):\n        if ver1[i] > ver2[i]:\n            return True\n        elif ver1[i] < ver2[i]:\n            return False\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return True\n    elif v1 < v2:\n        return False\n    else:\n        return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    \n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n    \n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0]*(max_len - len(v1))\n    v2 += [0]*(max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] < v2[i]:\n            return False\n        elif v1[i] > v2[i]:\n            return True\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1 = list(map(int, ver1.split('.')))\n    ver2 = list(map(int, ver2.split('.')))\n    \n    max_len = max(len(ver1), len(ver2))\n    ver1 += [0] * (max_len - len(ver1))\n    ver2 += [0] * (max_len - len(ver2))\n    \n    for i in range(max_len):\n        if ver1[i] > ver2[i]:\n            return True\n        elif ver1[i] < ver2[i]:\n            return False\n    \n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1, ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return True\n        elif v1[i] < v2[i]:\n            return False\n\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    if v1 > v2:\n        return True\n    elif v1 < v2:\n        return False\n    else:\n        return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    v1 = list(map(int, ver1.split('.')))\n    v2 = list(map(int, ver2.split('.')))\n    max_len = max(len(v1), len(v2))\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n    for i in range(max_len):\n        if v1[i] < v2[i]:\n            return False\n        elif v1[i] > v2[i]:\n            return True\n    return True",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    ver1 = list(map(int, ver1.split('.')))\n    ver2 = list(map(int, ver2.split('.')))\n    \n    while len(ver1) < len(ver2):\n        ver1.append(0)\n    while len(ver2) < len(ver1):\n        ver2.append(0)\n        \n    for i in range(len(ver1)):\n        if ver1[i] > ver2[i]:\n            return True\n        elif ver1[i] < ver2[i]:\n            return False\n            \n    return True",
            "logp": null
        }
    ],
    "3": []
}