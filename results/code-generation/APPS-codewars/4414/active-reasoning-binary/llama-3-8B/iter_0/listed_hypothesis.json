{
    "0": [
        {
            "content": "def compare_versions(ver1,ver2):\n    def split_versions(version):\n        return list(map(int, version.split('.')))\n\n    v1 = split_versions(ver1)\n    v2 = split_versions(ver2)\n\n    max_len = max(len(v1), len(v2))\n\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return 1\n        elif v1[i] < v2[i]:\n            return -1\n\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def split_versions(version):\n        return list(map(int, version.split('.')))\n\n    v1 = split_versions(ver1)\n    v2 = split_versions(ver2)\n\n    max_len = max(len(v1), len(v2))\n\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return 1\n        elif v1[i] < v2[i]:\n            return -1\n\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def split_versions(version):\n        return list(map(int, version.split('.')))\n\n    v1 = split_versions(ver1)\n    v2 = split_versions(ver2)\n\n    max_len = max(len(v1), len(v2))\n\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return 1\n        elif v1[i] < v2[i]:\n            return -1\n\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def split_versions(version):\n        return list(map(int, version.split('.')))\n\n    v1 = split_versions(ver1)\n    v2 = split_versions(ver2)\n\n    max_len = max(len(v1), len(v2))\n\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return 1\n        elif v1[i] < v2[i]:\n            return -1\n\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def split_versions(version):\n        return list(map(int, version.split('.')))\n\n    v1 = split_versions(ver1)\n    v2 = split_versions(ver2)\n\n    max_len = max(len(v1), len(v2))\n\n    v1 += [0] * (max_len - len(v1))\n    v2 += [0] * (max_len - len(v2))\n\n    for i in range(max_len):\n        if v1[i] > v2[i]:\n            return 1\n        elif v1[i] < v2[i]:\n            return -1\n\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def splitter(version):\n        return list(map(int, version.split('.')))\n    version1 = splitter(ver1)\n    version2 = splitter(ver2)\n    len1 = len(version1)\n    len2 = len(version2)\n    \n    for i in range(max(len1, len2)):\n        v1 = (version1[i] if i < len1 else 0)\n        v2 = (version2[i] if i < len2 else 0)\n        if v1 > v2:\n            return 1\n        elif v1 < v2:\n            return -1\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def splitter(version):\n        return list(map(int, version.split('.')))\n    version1 = splitter(ver1)\n    version2 = splitter(ver2)\n    len1 = len(version1)\n    len2 = len(version2)\n    \n    for i in range(max(len1, len2)):\n        v1 = (version1[i] if i < len1 else 0)\n        v2 = (version2[i] if i < len2 else 0)\n        if v1 > v2:\n            return 1\n        elif v1 < v2:\n            return -1\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def splitter(version):\n        return list(map(int, version.split('.')))\n    version1 = splitter(ver1)\n    version2 = splitter(ver2)\n    len1 = len(version1)\n    len2 = len(version2)\n    \n    for i in range(max(len1, len2)):\n        v1 = (version1[i] if i < len1 else 0)\n        v2 = (version2[i] if i < len2 else 0)\n        if v1 > v2:\n            return 1\n        elif v1 < v2:\n            return -1\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def splitter(version):\n        return list(map(int, version.split('.')))\n    version1 = splitter(ver1)\n    version2 = splitter(ver2)\n    len1 = len(version1)\n    len2 = len(version2)\n    \n    for i in range(max(len1, len2)):\n        v1 = (version1[i] if i < len1 else 0)\n        v2 = (version2[i] if i < len2 else 0)\n        if v1 > v2:\n            return 1\n        elif v1 < v2:\n            return -1\n    return 0",
            "logp": null
        },
        {
            "content": "def compare_versions(ver1,ver2):\n    def splitter(version):\n        return list(map(int, version.split('.')))\n    version1 = splitter(ver1)\n    version2 = splitter(ver2)\n    len1 = len(version1)\n    len2 = len(version2)\n    \n    for i in range(max(len1, len2)):\n        v1 = (version1[i] if i < len1 else 0)\n        v2 = (version2[i] if i < len2 else 0)\n        if v1 > v2:\n            return 1\n        elif v1 < v2:\n            return -1\n    return 0",
            "logp": null
        }
    ],
    "1": [],
    "2": [],
    "3": []
}