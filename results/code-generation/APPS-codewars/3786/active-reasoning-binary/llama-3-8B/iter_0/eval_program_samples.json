{
    "0": {
        "0": [
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```"
        ],
        "1": [],
        "2": [],
        "3": [
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt"
        ],
        "4": []
    },
    "1": {
        "0": [
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\",                     # Week 1\n               \"ph\": \"f\",                                           # Week 2\n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\",      # Week 4\n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}  # Week 5\n    for i in range(week):\n        for p, c in zip(patterns[i].finditer(txt), [s.lower() for s in changes.values()]):\n            txt = txt.replace(p.group(), c if changes[p.group().lower()] else p.group().lower())\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```"
        ],
        "1": [],
        "2": [],
        "3": [
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt"
        ],
        "4": [
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt"
        ]
    },
    "2": {
        "0": [
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if pattern.group(0).islower() else change.title(), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```"
        ],
        "1": [],
        "2": [],
        "3": [
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt"
        ],
        "4": [
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('iu', 'i')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt"
        ]
    }
}