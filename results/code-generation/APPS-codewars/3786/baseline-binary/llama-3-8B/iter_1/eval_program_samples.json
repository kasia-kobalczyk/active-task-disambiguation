{
    "0": {
        "0": [
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    text = txt\n\n    if week == 1:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 2:\n        for pattern in patterns[:2]:\n            text = re.sub(pattern, change, text)\n\n    elif week == 3:\n        for pattern in patterns[:3]:\n            text = re.sub(pattern, change, text)\n        text = re.sub(r'(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1', change, text)\n\n    elif week == 4:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    elif week == 5:\n        for pattern in patterns:\n            text = re.sub(pattern, change, text)\n\n    return text\n```"
        ],
        "1": [
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern in PATTERNS[i].findall(txt):\n            txt = re.sub(pattern, change, txt)\n    \n    return txt"
        ],
        "2": [
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(change, txt)\n    \n    return txt"
        ],
        "3": [
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt"
        ],
        "4": [
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "def siegfried(week, txt):\n    global PATTERNS, CHANGES\n    \n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i == 4 and len(m.group(0)) > 1 or i == 5 and m.group(0).endswith('m') else change, txt)\n            \n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\":\"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\",  \"wr\": \"r\",  \"wh\":  \"v\",   \"w\": \"v\", \n               \"ou\": \"u\",  \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    for p, c in zip(patterns, changes.values()):\n        txt = p.sub(lambda m: change(m), txt)\n\n    if week == 1:\n        return txt\n    elif week == 2:\n        return txt.lower()\n    elif week == 3:\n        return txt.capitalize()\n    elif week == 4:\n        return txt.lower().strip().replace(\"ze\", \"the\").replace(\"fifz\", \"five\").replace(\"viz\", \"with\").replace(\"un\", \"an\")\n    elif week == 5:\n        return txt.lower().replace(\"schmiles\", \"smiles\").replace(\"viel\", \"very\").replace(\"aksent\", \"accent\").replace(\"trubl\", \"trouble\")\n    else:\n        return txt"
        ]
    },
    "1": {
        "0": [
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    patterns = [re.compile(r'(?i)ci|ce|c(?!h)'),\n                re.compile(r'(?i)ph'),\n                re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                re.compile(r'(?i)th|w[rh]?'),\n                re.compile(r'(?i)ou|an|ing\\b|\\bsm')]\n\n    changes = {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\", \n               \"ph\": \"f\", \n               \"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\", \n               \"ou\": \"u\", \"an\": \"un\", \"ing\": \"ink\", \"sm\": \"schm\"}\n\n    def change(m):\n        tok = m.group(0)\n        rep = changes.get(tok.lower(), \"\" if None in m.groups() else m.group()[0])\n        if tok[0].isupper():\n            rep = rep.title()\n        return rep\n\n    for i in range(week):\n        for pattern, change in zip(patterns, [re.compile(r'(?i)ci|ce|c(?!h)'), \n                                               re.compile(r'(?i)ph'), \n                                               re.compile(r'(?i)(?<!\\b[a-z]{1})(?<!\\b[a-z]{2})e\\b|([a-z])\\1'),\n                                               re.compile(r'(?i)th|w[rh]?'),\n                                               re.compile(r'(?i)ou|an|ing\\b|\\bsm')]):\n            txt = re.sub(pattern, change, txt)\n\n    return txt",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```"
        ],
        "1": [
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ese', 'se').replace('ice', 'si')\n        txt = txt.replace('iae', 'si').replace('oe', 'o').replace('ue', 'u')\n        txt = txt.title()\n    if week == 4:\n        txt = txt.lower()\n        txt = txt.replace('wo', 'w').replace('wha', 'w').replace('who', 'w')\n        txt = txt.title()\n    return txt"
        ],
        "2": [],
        "3": [],
        "4": []
    },
    "2": {
        "0": [
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for i in range(week):\n        for pattern, change in zip(PATTERNS, CHANGES.values()):\n            txt = pattern.sub(lambda m: change if i != 2 or not any(c.islower() for c in m.group()) else change(m), txt)\n    return txt\n```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```",
            "```\ndef siegfried(week, txt):\n    for patterns, changes in [(PATTERNS[0], {\"ci\": \"si\", \"ce\": \"se\", \"c\": \"k\"}), \n                             (PATTERNS[1], {\"ph\": \"f\"}), \n                             (PATTERNS[2], {\"e$\": \"\", r\"(\\w)\\1\": r\"\\1\"}), \n                             (PATTERNS[3], {\"th\": \"z\", \"wr\": \"r\", \"wh\": \"v\", \"w\": \"v\"}), \n                             (PATTERNS[4], {\"ou\": \"u\", \"an\": \"un\", \"ing$\": \"ink\", \"sm\": \"schm\"})]:\n        for p, c in zip(patterns, list(changes.values()) + [changes]):\n            txt = p.sub(lambda m: change(m), txt)\n    return txt```"
        ],
        "1": [],
        "2": [],
        "3": [
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt",
            "```\ndef siegfried(week, txt):\n    for pat, rule in zip(PATTERNS, CHANGES.keys()):\n        txt = pat.sub(lambda m: change(m), txt)\n    if week == 5:\n        txt = txt.replace(' ', ' ').replace('   ', ' ').replace('  ', ' ')\n        txt = txt.split()\n        for i in range(len(txt)):\n            if i > 0:\n                if txt[i].endswith('ink'):\n                    txt[i-1] += 'nk'\n        txt = ' '.join(txt)\n    if week == 1:\n        txt = txt.lower()\n        txt = txt.replace('ise', 'sei').replace('ise ', ' sei').replace('ise\\\\,' , ' sei').replace('ses', 'se').replace('isee', 'se').replace('ies', 'se').replace('iseees', 'se').replace('isse', 'se').replace('isest', 'se').replace('ise be', 'sei be').replace('ise ie', 'sei ie').replace('ise pee', 'sei pee').replace('ise bee', 'sei bee').replace('ise gie', 'sei gie').replace('ise kee', 'sei kee').replace('ise pee', 'sei pee').replace('ise see', 'sei see').replace('ise vee', 'sei vee').replace('ise wee', 'sei wee').replace('ise wee kee', 'sei wee kee').replace('ise ,', 'sei ,').replace('eise', 'sei').replace('sei e', 'sei e').replace('sei ie', 'sei ie').replace('sei kee', 'sei kee').replace('sei pee', 'sei pee').replace('sei see', 'sei see').replace('sei vee', 'sei vee').replace('sei wee', 'sei wee').replace('sei ,', 'sei ,').replace('sie ,', ' sie ,')\n        txt = txt.title()\n    return txt"
        ],
        "4": []
    }
}