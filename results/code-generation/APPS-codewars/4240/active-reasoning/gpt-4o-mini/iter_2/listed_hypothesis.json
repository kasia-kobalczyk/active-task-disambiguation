{
    "0": [
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in vowels.upper():\n            transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants.upper():\n            transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n                transformed.append(new_char.upper() if char.isupper() else new_char)\n            elif char in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n                transformed.append(new_char.upper() if char.isupper() else new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = 3\n    consonant_shift = 10\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            is_upper = char.isupper()\n            index = vowels.index(char.lower())\n            new_index = (index + vowel_shift) % 6\n            new_char = vowels[new_index]\n            decoded.append(new_char.upper() if is_upper else new_char)\n        elif char in consonants:\n            is_upper = char.isupper()\n            index = consonants.index(char.lower())\n            new_index = (index + consonant_shift) % 20\n            new_char = consonants[new_index]\n            decoded.append(new_char.upper() if is_upper else new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            translated.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            translated.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            translated.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            translated.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded_vowels = 'eouaiy'\n    decoded_consonants = 'rscwzgkvtbflxhjmdqpn'\n    \n    def decode_char(c):\n        if c in vowels:\n            return decoded_vowels[vowels.index(c)]\n        elif c in consonants:\n            return decoded_consonants[consonants.index(c)]\n        elif c in vowels.upper():\n            return decoded_vowels[vowels.index(c.lower())].upper()\n        elif c in consonants.upper():\n            return decoded_consonants[consonants.index(c.lower())].upper()\n        else:\n            return c\n    \n    return ''.join(decode_char(c) for c in code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            decoded.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            decoded.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            decoded.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            decoded.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    vowel_shift.update({vowels[i + 6]: vowels[(i + 3 + 6) % 6 + 6] for i in range(len(vowels) // 2)})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    \n    result = []\n    for char in code:\n        if char in vowel_shift:\n            result.append(vowel_shift[char])\n        elif char in consonant_shift:\n            result.append(consonant_shift[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char.lower() in consonant_map:\n            mapped_char = consonant_map[char.lower()]\n            result.append(mapped_char.upper() if char.isupper() else mapped_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    vowel_shift = 'eouaiEOUAI'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    consonant_shift = 'pvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            decoded.append(vowel_shift[index])\n        elif char in consonants:\n            index = consonants.index(char)\n            decoded.append(consonant_shift[index])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_shift = 3\n    consonants_shift = 10\n    \n    def translate_char(c):\n        if c.isalpha():\n            if c.lower() in vowels:\n                idx = vowels.index(c.lower())\n                new_idx = (idx + vowels_shift) % len(vowels)\n                return vowels[new_idx].upper() if c.isupper() else vowels[new_idx]\n            elif c.lower() in consonants:\n                idx = consonants.index(c.lower())\n                new_idx = (idx + consonants_shift) % len(consonants)\n                return consonants[new_idx].upper() if c.isupper() else consonants[new_idx]\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    result = []\n\n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            result.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            result.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            result.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            result.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                transformed.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                transformed.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                transformed.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                transformed.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed_code = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                transformed_code.append(new_char.upper())\n            else:\n                transformed_code.append(new_char)\n        else:\n            transformed_code.append(char)\n\n    return ''.join(transformed_code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded_message = []\n    \n    for char in code:\n        if char in vowels:\n            decoded_message.append(vowels[(vowels.index(char) + 3) % 6])\n        elif char in vowels_upper:\n            decoded_message.append(vowels_upper[(vowels_upper.index(char) + 3) % 6])\n        elif char in consonants:\n            decoded_message.append(consonants[(consonants.index(char) + 10) % 20])\n        elif char in consonants_upper:\n            decoded_message.append(consonants_upper[(consonants_upper.index(char) + 10) % 20])\n        else:\n            decoded_message.append(char)\n    \n    return ''.join(decoded_message)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_index = (index + 3) % len(vowels)\n                new_char = vowels[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_index = (index + 10) % len(consonants)\n                new_char = consonants[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    \n    result = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowel_map:\n                result.append(vowel_map[char])\n            elif char in consonant_map:\n                result.append(consonant_map[char])\n            else:\n                result.append(char)\n        elif char.isupper():\n            lower_char = char.lower()\n            if lower_char in vowel_map:\n                result.append(vowel_map[lower_char].upper())\n            elif lower_char in consonant_map:\n                result.append(consonant_map[lower_char].upper())\n            else:\n                result.append(char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char in vowels:\n            translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            translated.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            translated.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    result = []\n    \n    for char in code:\n        if char.lower() in vowels:\n            index = vowels.index(char.lower())\n            new_index = (index + vowel_shift) % len(vowels)\n            new_char = vowels[new_index]\n            result.append(new_char.upper() if char.isupper() else new_char)\n        elif char.lower() in consonants:\n            index = consonants.index(char.lower())\n            new_index = (index + consonant_shift) % len(consonants)\n            new_char = consonants[new_index]\n            result.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % 6].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % 20].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translated = []\n    for char in code:\n        if char in vowel_mapping:\n            translated.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translated.append(consonant_mapping[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                transformed.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                transformed.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                transformed.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                transformed.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + 3) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + 10) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            translated.append(new_char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels_upper[i]: vowels_upper[(i + 3) % 6] for i in range(6)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants_upper[i]: consonants_upper[(i + 10) % 20] for i in range(20)})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                translated.append(new_char.upper() if char.isupper() else new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                translated.append(new_char.upper() if char.isupper() else new_char)\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "logp": null
        }
    ]
}