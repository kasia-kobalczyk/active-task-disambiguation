{
    "0": {
        "0": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({v.upper(): vowel_mapping[v].upper() for v in vowel_mapping})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({c.upper(): consonant_mapping[c].upper() for c in consonant_mapping})\n\n    translation = []\n    for char in code:\n        if char in vowel_mapping:\n            translation.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translation.append(consonant_mapping[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({v.upper(): vowel_map[v].upper() for v in vowels})\n    consonant_map = {consonants[i]: consonants[(i + 10) % 16] for i in range(16)}\n    consonant_map.update({c.upper(): consonant_map[c].upper() for c in consonants})\n\n    translation = []\n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n\n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    decoded = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels_lower:\n            index = vowels_lower.index(char)\n            translated.append(vowels_lower[(index + 3) % 6])\n        elif char in vowels_upper:\n            index = vowels_upper.index(char)\n            translated.append(vowels_upper[(index + 3) % 6])\n        elif char in consonants_lower:\n            index = consonants_lower.index(char)\n            translated.append(consonants_lower[(index + 10) % 20])\n        elif char in consonants_upper:\n            index = consonants_upper.index(char)\n            translated.append(consonants_upper[(index + 10) % 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_upper = vowels.upper()\n    consonants_upper = consonants.upper()\n    \n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % 6]\n        elif c in vowels_upper:\n            return vowels_upper[(vowels_upper.index(c) + 3) % 6]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % 16]\n        elif c in consonants_upper:\n            return consonants_upper[(consonants_upper.index(c) + 10) % 16]\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + 3) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + 10) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcpvjqtsrlmfBKXZNHDCPLJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % 6] if char.islower() else vowels[(index + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % 20] if char.islower() else consonants[(index + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                if char.isupper():\n                    transformed.append(new_char.upper())\n                else:\n                    transformed.append(new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                if char.isupper():\n                    transformed.append(new_char.upper())\n                else:\n                    transformed.append(new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n\n    result = []\n    \n    for char in code:\n        if char in vowels:\n            new_char = vowels[(vowels.index(char) + 3) % 6]\n            result.append(new_char)\n        elif char in vowels_upper:\n            new_char = vowels_upper[(vowels_upper.index(char) + 3) % 6]\n            result.append(new_char)\n        elif char in consonants:\n            new_char = consonants[(consonants.index(char) + 10) % 16]\n            result.append(new_char)\n        elif char in consonants_upper:\n            new_char = consonants_upper[(consonants_upper.index(char) + 10) % 16]\n            result.append(new_char)\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char.lower() in consonant_map:\n            transformed = consonant_map[char.lower()]\n            decoded.append(transformed.upper() if char.isupper() else transformed)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = 'eouaiEOUAI'\n    consonant_shift = 'vjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            translated.append(vowel_shift[index])\n        elif char in consonants:\n            index = consonants.index(char)\n            translated.append(consonant_shift[(index + 10) % len(consonant_shift)])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6 + 6] for i in range(6, 12)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```"
        ],
        "1": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)]\n            else:\n                new_char = char\n            \n            if char.isupper():\n                new_char = new_char.upper()\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                translated.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                translated.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                translated.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                transformed.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                transformed.append(new_char)\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                transformed.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                transformed.append(new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    translated = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    translation = []\n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n\n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels_lower:\n            decoded.append(vowels_lower[(vowels_lower.index(char) + 3) % len(vowels_lower)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants_lower:\n            decoded.append(consonants_lower[(consonants_lower.index(char) + 10) % len(consonants_lower)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels_lower:\n            translated.append(vowels_lower[(vowels_lower.index(char) + 3) % 6])\n        elif char in vowels_upper:\n            translated.append(vowels_upper[(vowels_upper.index(char) + 3) % 6])\n        elif char in consonants_lower:\n            translated.append(consonants_lower[(consonants_lower.index(char) + 10) % 20])\n        elif char in consonants_upper:\n            translated.append(consonants_upper[(consonants_upper.index(char) + 10) % 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                index = vowels.index(char)\n                decoded.append(vowels[(index + 3) % 6])\n            else:\n                index = vowels.index(char)\n                decoded.append(vowels[(index + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                index = consonants.index(char)\n                decoded.append(consonants[(index + 10) % 20])\n            else:\n                index = consonants.index(char)\n                decoded.append(consonants[(index + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            idx = vowels.index(char)\n            decoded.append(vowels[(idx + 3) % len(vowels)])\n        elif char in vowels.upper():\n            idx = vowels.index(char.lower())\n            decoded.append(vowels[(idx + 3) % len(vowels)].upper())\n        elif char in consonants:\n            idx = consonants.index(char)\n            decoded.append(consonants[(idx + 10) % len(consonants)])\n        elif char in consonants.upper():\n            idx = consonants.index(char.lower())\n            decoded.append(consonants[(idx + 10) % len(consonants)].upper())\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_shift = 3\n    consonants_shift = 10\n    \n    def translate_char(c):\n        if c.isalpha():\n            if c.lower() in vowels:\n                idx = vowels.index(c.lower())\n                new_idx = (idx + vowels_shift) % len(vowels)\n                return vowels[new_idx].upper() if c.isupper() else vowels[new_idx]\n            elif c.lower() in consonants:\n                idx = consonants.index(c.lower())\n                new_idx = (idx + consonants_shift) % len(consonants)\n                return consonants[new_idx].upper() if c.isupper() else consonants[new_idx]\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6].upper())\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20].upper())\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowels_upper = vowels.upper()\n    consonants_upper = consonants.upper()\n    \n    decoded_message = []\n    \n    for char in code:\n        if char in vowels:\n            decoded_message.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded_message.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded_message.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded_message.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded_message.append(char)\n    \n    return ''.join(decoded_message)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_shift.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_shift.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n\n    translation = []\n    \n    for char in code:\n        if char in vowel_shift:\n            translation.append(vowel_shift[char])\n        elif char in consonant_shift:\n            translation.append(consonant_shift[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({v.upper(): vowel_mapping[v].upper() for v in vowel_mapping})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({c.upper(): consonant_mapping[c].upper() for c in consonant_mapping})\n    \n    translation = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translation.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translation.append(consonant_mapping[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            transformed.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            transformed.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            transformed.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            transformed.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(char):\n        if char.islower():\n            if char in vowels:\n                return vowels[(vowels.index(char) + vowel_shift) % len(vowels)]\n            elif char in consonants:\n                return consonants[(consonants.index(char) + consonant_shift) % len(consonants)]\n        elif char.isupper():\n            if char.lower() in vowels:\n                return vowels[(vowels.index(char.lower()) + vowel_shift) % len(vowels)].upper()\n            elif char.lower() in consonants:\n                return consonants[(consonants.index(char.lower()) + consonant_shift) % len(consonants)].upper()\n        return char\n    \n    return ''.join(transform_char(c) for c in code)\n```"
        ],
        "2": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    result = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_idx = (idx + vowel_shift) % len(vowels)\n                new_char = vowels[new_idx]\n                if char.isupper():\n                    new_char = new_char.upper()\n                result.append(new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_idx = (idx + consonant_shift) % len(consonants)\n                new_char = consonants[new_idx]\n                if char.isupper():\n                    new_char = new_char.upper()\n                result.append(new_char)\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_mapping = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_mapping = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n    \n    result = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowel_mapping:\n                result.append(vowel_mapping[char])\n            elif char in consonant_mapping:\n                result.append(consonant_mapping[char])\n            else:\n                result.append(char)\n        elif char.isupper():\n            lower_char = char.lower()\n            if lower_char in vowel_mapping:\n                result.append(vowel_mapping[lower_char].upper())\n            elif lower_char in consonant_mapping:\n                result.append(consonant_mapping[lower_char].upper())\n            else:\n                result.append(char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed_code = []\n\n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            transformed_code.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            transformed_code.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            transformed_code.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            transformed_code.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            transformed_code.append(char)\n\n    return ''.join(transformed_code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def transform_char(char):\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                transformed = vowels[(index + vowel_shift) % len(vowels)]\n                return transformed.upper() if char.isupper() else transformed\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                transformed = consonants[(index + consonant_shift) % len(consonants)]\n                return transformed.upper() if char.isupper() else transformed\n        return char\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                transformed.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                transformed.append(new_char)\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                transformed.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                transformed.append(new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    translated = []\n    \n    for char in code:\n        if char.lower() in vowels:\n            index = vowels.index(char.lower())\n            new_char = vowels[(index + vowel_shift) % len(vowels)]\n            if char.isupper():\n                new_char = new_char.upper()\n            translated.append(new_char)\n        elif char.lower() in consonants:\n            index = consonants.index(char.lower())\n            new_char = consonants[(index + consonant_shift) % len(consonants)]\n            if char.isupper():\n                new_char = new_char.upper()\n            translated.append(new_char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    transformed_code = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                transformed_code.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                transformed_code.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                transformed_code.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                transformed_code.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            transformed_code.append(char)\n\n    return ''.join(transformed_code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_index = (index + 3) % len(vowels)\n                new_char = vowels[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_index = (index + 10) % len(consonants)\n                new_char = consonants[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char in vowels:\n            translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            translated.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            translated.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_vowel = vowels[(idx + 3) % 6]\n                transformed.append(new_vowel.upper() if char.isupper() else new_vowel)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_consonant = consonants[(idx + 10) % 20]\n                transformed.append(new_consonant.upper() if char.isupper() else new_consonant)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_map = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n    \n    vowel_map_upper = {v.upper(): vowel_map[v].upper() for v in vowels}\n    consonant_map_upper = {c.upper(): consonant_map[c].upper() for c in consonants}\n    \n    translation_map = {**vowel_map, **consonant_map, **vowel_map_upper, **consonant_map_upper}\n    \n    translated = ''.join(translation_map.get(char, char) for char in code)\n    \n    return translated\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_map = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n\n    result = []\n    for char in code:\n        if char.islower():\n            if char in vowel_map:\n                result.append(vowel_map[char])\n            elif char in consonant_map:\n                result.append(consonant_map[char])\n            else:\n                result.append(char)\n        elif char.isupper():\n            lower_char = char.lower()\n            if lower_char in vowel_map:\n                result.append(vowel_map[lower_char].upper())\n            elif lower_char in consonant_map:\n                result.append(consonant_map[lower_char].upper())\n            else:\n                result.append(char)\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```"
        ],
        "3": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n\n    for char in code:\n        if char in vowels:\n            translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            translated.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            translated.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def transform_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    result = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            else:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            \n            if char.isupper():\n                new_char = new_char.upper()\n            \n            result.append(new_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    translated = []\n    for char in code:\n        if char in vowel_mapping:\n            translated.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translated.append(consonant_mapping[char])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    transformed_code = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                index = vowels.index(char)\n                transformed_code.append(vowels[(index + 3) % 6])\n            else:\n                index = vowels.index(char)\n                transformed_code.append(vowels[(index + 3) % 6].upper())\n        elif char in consonants:\n            if char.islower():\n                index = consonants.index(char)\n                transformed_code.append(consonants[(index + 10) % 20])\n            else:\n                index = consonants.index(char)\n                transformed_code.append(consonants[(index + 10) % 20].upper())\n        else:\n            transformed_code.append(char)\n\n    return ''.join(transformed_code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % 6].upper() for i in range(6)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % 20].upper() for i in range(20)})\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                translated.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                translated.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                translated.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def decode_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n    \n    return ''.join(decode_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % 6].upper() for i in range(6)})\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % 20].upper() for i in range(20)})\n    \n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    result = []\n\n    for char in code:\n        if char in vowels:\n            new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n            result.append(new_char)\n        elif char in vowels.upper():\n            new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n            result.append(new_char)\n        elif char in consonants:\n            new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n            result.append(new_char)\n        elif char in consonants.upper():\n            new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n            result.append(new_char)\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_map = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n\n    def translate_char(c):\n        if c.islower():\n            if c in vowel_map:\n                return vowel_map[c]\n            elif c in consonant_map:\n                return consonant_map[c]\n        elif c.isupper():\n            lower_c = c.lower()\n            if lower_c in vowel_map:\n                return vowel_map[lower_c].upper()\n            elif lower_c in consonant_map:\n                return consonant_map[lower_c].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n            transformed.append(new_char)\n        elif char in vowels.upper():\n            new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n            transformed.append(new_char)\n        elif char in consonants:\n            new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n            transformed.append(new_char)\n        elif char in consonants.upper():\n            new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                transformed.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                transformed.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                transformed.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                transformed.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_shift.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_shift.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_shift:\n            result.append(vowel_shift[char])\n        elif char in consonant_shift:\n            result.append(consonant_shift[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            transformed.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```"
        ],
        "4": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                transformed.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                transformed.append(new_char)\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                transformed.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                transformed.append(new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            else:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            translated_char = new_char.upper() if char.isupper() else new_char\n            translated.append(translated_char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)]\n            else:\n                new_char = char\n\n            if char.isupper():\n                new_char = new_char.upper()\n\n            translated.append(new_char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                index = vowels.index(char)\n                decoded.append(vowels[(index + 3) % len(vowels)])\n            elif char in consonants:\n                index = consonants.index(char)\n                decoded.append(consonants[(index + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                decoded.append(vowels[(index + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                decoded.append(consonants[(index + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_shift = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n\n    result = []\n    for char in code:\n        if char.islower():\n            if char in vowel_shift:\n                result.append(vowel_shift[char])\n            elif char in consonant_shift:\n                result.append(consonant_shift[char])\n            else:\n                result.append(char)\n        elif char.isupper():\n            lower_char = char.lower()\n            if lower_char in vowel_shift:\n                result.append(vowel_shift[lower_char].upper())\n            elif lower_char in consonant_shift:\n                result.append(consonant_shift[lower_char].upper())\n            else:\n                result.append(char)\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_shift = 3\n    consonants_shift = 10\n    \n    def transform_char(char):\n        if char.islower():\n            if char in vowels:\n                return vowels[(vowels.index(char) + vowels_shift) % len(vowels)]\n            elif char in consonants:\n                return consonants[(consonants.index(char) + consonants_shift) % len(consonants)]\n        elif char.isupper():\n            if char.lower() in vowels:\n                return vowels[(vowels.index(char.lower()) + vowels_shift) % len(vowels)].upper()\n            elif char.lower() in consonants:\n                return consonants[(consonants.index(char.lower()) + consonants_shift) % len(consonants)].upper()\n        return char\n    \n    return ''.join(transform_char(char) for char in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = \"aiyeou\"\n    consonants = \"bkxznhdcwgpvjqtsrlmf\"\n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_index = (index + 3) % 6\n                new_char = vowels[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_index = (index + 10) % 20\n                new_char = consonants[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    translated = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                translated.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        elif char.isupper():\n            lower_char = char.lower()\n            if lower_char in vowels:\n                new_char = vowels[(vowels.index(lower_char) + 3) % len(vowels)].upper()\n                translated.append(new_char)\n            elif lower_char in consonants:\n                new_char = consonants[(consonants.index(lower_char) + 10) % len(consonants)].upper()\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = \"aiyeouAIYEOU\"\n    consonants = \"bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF\"\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                index = vowels.index(char)\n                decoded.append(vowels[(index + 3) % 6])\n            else:\n                index = vowels.index(char)\n                decoded.append(vowels[(index + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                index = consonants.index(char)\n                decoded.append(consonants[(index + 10) % 20])\n            else:\n                index = consonants.index(char)\n                decoded.append(consonants[(index + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                translated.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                translated.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % len(vowels)]\n            decoded.append(new_char)\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            new_char = vowels[(index + 3) % len(vowels)].upper()\n            decoded.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % len(consonants)]\n            decoded.append(new_char)\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            new_char = consonants[(index + 10) % len(consonants)].upper()\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels.upper()[(vowels.index(c.lower()) + 3) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants.upper()[(consonants.index(c.lower()) + 10) % len(consonants)]\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n    \n    return ''.join(transform_char(c) for c in code)\n```"
        ]
    },
    "1": {
        "0": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % 6] if char.islower() else vowels[(index + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % 20] if char.islower() else consonants[(index + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                if char.isupper():\n                    transformed.append(new_char.upper())\n                else:\n                    transformed.append(new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                if char.isupper():\n                    transformed.append(new_char.upper())\n                else:\n                    transformed.append(new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n\n    result = []\n    \n    for char in code:\n        if char in vowels:\n            new_char = vowels[(vowels.index(char) + 3) % 6]\n            result.append(new_char)\n        elif char in vowels_upper:\n            new_char = vowels_upper[(vowels_upper.index(char) + 3) % 6]\n            result.append(new_char)\n        elif char in consonants:\n            new_char = consonants[(consonants.index(char) + 10) % 16]\n            result.append(new_char)\n        elif char in consonants_upper:\n            new_char = consonants_upper[(consonants_upper.index(char) + 10) % 16]\n            result.append(new_char)\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char.lower() in consonant_map:\n            transformed = consonant_map[char.lower()]\n            decoded.append(transformed.upper() if char.isupper() else transformed)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = 'eouaiEOUAI'\n    consonant_shift = 'vjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            translated.append(vowel_shift[index])\n        elif char in consonants:\n            index = consonants.index(char)\n            translated.append(consonant_shift[(index + 10) % len(consonant_shift)])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6 + 6] for i in range(6, 12)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    \n    result = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowel_map:\n                result.append(vowel_map[char])\n            elif char in consonant_map:\n                result.append(consonant_map[char])\n            else:\n                result.append(char)\n        elif char.isupper():\n            lower_char = char.lower()\n            if lower_char in vowel_map:\n                result.append(vowel_map[lower_char].upper())\n            elif lower_char in consonant_map:\n                result.append(consonant_map[lower_char].upper())\n            else:\n                result.append(char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    vowel_replacement = 'eouaiEOUAI'\n    \n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    consonant_replacement = 'vjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    result = []\n    \n    for char in code:\n        if char in vowels:\n            idx = vowels.index(char)\n            result.append(vowel_replacement[idx])\n        elif char in consonants:\n            idx = consonants.index(char)\n            result.append(consonants[(idx + 10) % 20])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcpvjqtsrlmfBKXZNHDCPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {'a': 'e', 'i': 'o', 'y': 'u', 'e': 'a', 'o': 'i', 'u': 'y',\n                   'A': 'E', 'I': 'O', 'Y': 'U', 'E': 'A', 'O': 'I', 'U': 'Y'}\n    \n    consonant_shift = {}\n    consonant_list = 'bkxznhdcwgpvjqtsrlmf'\n    for i in range(len(consonant_list)):\n        consonant_shift[consonant_list[i]] = consonant_list[(i + 10) % len(consonant_list)]\n    \n    consonant_list_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    for i in range(len(consonant_list_upper)):\n        consonant_shift[consonant_list_upper[i]] = consonant_list_upper[(i + 10) % len(consonant_list_upper)]\n    \n    result = []\n    for char in code:\n        if char in vowel_shift:\n            result.append(vowel_shift[char])\n        elif char in consonant_shift:\n            result.append(consonant_shift[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6 + (0 if v.islower() else 6)] for i, v in enumerate(vowels)}\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20 + (0 if c.islower() else 20)] for i, c in enumerate(consonants)}\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in vowels.upper():\n            transformed.append(vowels.upper()[(vowels.index(char.lower()) + 3) % len(vowels)])\n        elif char in consonants.upper():\n            transformed.append(consonants.upper()[(consonants.index(char.lower()) + 10) % len(consonants)])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            idx = vowels.index(c)\n            return vowels[(idx + vowel_shift) % len(vowels)]\n        elif c in consonants:\n            idx = consonants.index(c)\n            return consonants[(idx + consonant_shift) % len(consonants)]\n        elif c in vowels.upper():\n            idx = vowels.index(c.lower())\n            return vowels[(idx + vowel_shift) % len(vowels)].upper()\n        elif c in consonants.upper():\n            idx = consonants.index(c.lower())\n            return consonants[(idx + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    consonant_mapping = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translated.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translated.append(consonant_mapping[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```"
        ],
        "1": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels_lower:\n            decoded.append(vowels_lower[(vowels_lower.index(char) + 3) % len(vowels_lower)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants_lower:\n            decoded.append(consonants_lower[(consonants_lower.index(char) + 10) % len(consonants_lower)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels_lower:\n            translated.append(vowels_lower[(vowels_lower.index(char) + 3) % 6])\n        elif char in vowels_upper:\n            translated.append(vowels_upper[(vowels_upper.index(char) + 3) % 6])\n        elif char in consonants_lower:\n            translated.append(consonants_lower[(consonants_lower.index(char) + 10) % 20])\n        elif char in consonants_upper:\n            translated.append(consonants_upper[(consonants_upper.index(char) + 10) % 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                index = vowels.index(char)\n                decoded.append(vowels[(index + 3) % 6])\n            else:\n                index = vowels.index(char)\n                decoded.append(vowels[(index + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                index = consonants.index(char)\n                decoded.append(consonants[(index + 10) % 20])\n            else:\n                index = consonants.index(char)\n                decoded.append(consonants[(index + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            new_index = (vowels.index(char) + 3) % len(vowels)\n            transformed.append(vowels[new_index])\n        elif char in vowels.upper():\n            new_index = (vowels.index(char.lower()) + 3) % len(vowels)\n            transformed.append(vowels[new_index].upper())\n        elif char in consonants:\n            new_index = (consonants.index(char) + 10) % len(consonants)\n            transformed.append(consonants[new_index])\n        elif char in consonants.upper():\n            new_index = (consonants.index(char.lower()) + 10) % len(consonants)\n            transformed.append(consonants[new_index].upper())\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_shift = 3\n    consonants_shift = 10\n    \n    def translate_char(c):\n        if c.isalpha():\n            if c.lower() in vowels:\n                idx = vowels.index(c.lower())\n                new_idx = (idx + vowels_shift) % len(vowels)\n                return vowels[new_idx].upper() if c.isupper() else vowels[new_idx]\n            elif c.lower() in consonants:\n                idx = consonants.index(c.lower())\n                new_idx = (idx + consonants_shift) % len(consonants)\n                return consonants[new_idx].upper() if c.isupper() else consonants[new_idx]\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n\n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_shift.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_shift.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n\n    translation = []\n    \n    for char in code:\n        if char in vowel_shift:\n            translation.append(vowel_shift[char])\n        elif char in consonant_shift:\n            translation.append(consonant_shift[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({v.upper(): vowel_mapping[v].upper() for v in vowel_mapping})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({c.upper(): consonant_mapping[c].upper() for c in consonant_mapping})\n    \n    translation = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translation.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translation.append(consonant_mapping[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            transformed.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            transformed.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            transformed.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            transformed.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(char):\n        if char.islower():\n            if char in vowels:\n                return vowels[(vowels.index(char) + vowel_shift) % len(vowels)]\n            elif char in consonants:\n                return consonants[(consonants.index(char) + consonant_shift) % len(consonants)]\n        elif char.isupper():\n            if char.lower() in vowels:\n                return vowels[(vowels.index(char.lower()) + vowel_shift) % len(vowels)].upper()\n            elif char.lower() in consonants:\n                return consonants[(consonants.index(char.lower()) + consonant_shift) % len(consonants)].upper()\n        return char\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                transformed.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                transformed.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                transformed.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                transformed.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                decoded.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                decoded.append(new_char)\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                decoded.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                decoded.append(new_char)\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed_code = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                transformed_code.append(new_char.upper())\n            else:\n                transformed_code.append(new_char)\n        else:\n            transformed_code.append(char)\n\n    return ''.join(transformed_code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + 3) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + 10) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % 6 + (0 if char.islower() else 6)]\n            decoded.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % 20 + (0 if char.islower() else 20)]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```"
        ],
        "2": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def transform_char(char):\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                transformed = vowels[(index + vowel_shift) % len(vowels)]\n                return transformed.upper() if char.isupper() else transformed\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                transformed = consonants[(index + consonant_shift) % len(consonants)]\n                return transformed.upper() if char.isupper() else transformed\n        return char\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n            else:\n                new_char = char\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n            else:\n                new_char = char\n        else:\n            new_char = char\n        \n        transformed.append(new_char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    translated = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + vowel_shift) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + consonant_shift) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            translated.append(new_char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded_message = []\n    \n    for char in code:\n        if char in vowels:\n            decoded_message.append(vowels[(vowels.index(char) + 3) % 6])\n        elif char in vowels_upper:\n            decoded_message.append(vowels_upper[(vowels_upper.index(char) + 3) % 6])\n        elif char in consonants:\n            decoded_message.append(consonants[(consonants.index(char) + 10) % 20])\n        elif char in consonants_upper:\n            decoded_message.append(consonants_upper[(consonants_upper.index(char) + 10) % 20])\n        else:\n            decoded_message.append(char)\n    \n    return ''.join(decoded_message)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_index = (index + 3) % len(vowels)\n                new_char = vowels[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_index = (index + 10) % len(consonants)\n                new_char = consonants[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_idx = (idx + 3) % len(vowels)\n                new_char = vowels[new_idx]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_idx = (idx + 10) % len(consonants)\n                new_char = consonants[new_idx]\n            else:\n                new_char = char\n\n            if char.isupper():\n                new_char = new_char.upper()\n\n            translated.append(new_char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_vowel = vowels[(idx + 3) % 6]\n                transformed.append(new_vowel.upper() if char.isupper() else new_vowel)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_consonant = consonants[(idx + 10) % 20]\n                transformed.append(new_consonant.upper() if char.isupper() else new_consonant)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_map = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n    \n    vowel_map_upper = {v.upper(): vowel_map[v].upper() for v in vowels}\n    consonant_map_upper = {c.upper(): consonant_map[c].upper() for c in consonants}\n    \n    translation_map = {**vowel_map, **consonant_map, **vowel_map_upper, **consonant_map_upper}\n    \n    translated = ''.join(translation_map.get(char, char) for char in code)\n    \n    return translated\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_map = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n\n    result = []\n    for char in code:\n        if char.islower():\n            if char in vowel_map:\n                result.append(vowel_map[char])\n            elif char in consonant_map:\n                result.append(consonant_map[char])\n            else:\n                result.append(char)\n        elif char.isupper():\n            lower_char = char.lower()\n            if lower_char in vowel_map:\n                result.append(vowel_map[lower_char].upper())\n            elif lower_char in consonant_map:\n                result.append(consonant_map[lower_char].upper())\n            else:\n                result.append(char)\n        else:\n            result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_mapping.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_mapping.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translated.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translated.append(consonant_mapping[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    result = []\n    \n    for char in code:\n        if char.lower() in vowels:\n            index = vowels.index(char.lower())\n            new_index = (index + vowel_shift) % len(vowels)\n            new_char = vowels[new_index]\n            result.append(new_char.upper() if char.isupper() else new_char)\n        elif char.lower() in consonants:\n            index = consonants.index(char.lower())\n            new_index = (index + consonant_shift) % len(consonants)\n            new_char = consonants[new_index]\n            result.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                if char.isupper():\n                    new_char = new_char.upper()\n                decoded.append(new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                if char.isupper():\n                    new_char = new_char.upper()\n                decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                transformed.append(new_char.upper() if char.isupper() else new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                transformed.append(new_char.upper() if char.isupper() else new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char.lower() in vowels:\n            idx = vowels.index(char.lower())\n            new_char = vowels[(idx + 3) % len(vowels)]\n            transformed.append(new_char.upper() if char.isupper() else new_char)\n        elif char.lower() in consonants:\n            idx = consonants.index(char.lower())\n            new_char = consonants[(idx + 10) % len(consonants)]\n            transformed.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowels_upper = vowels.upper()\n    consonants_upper = consonants.upper()\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % 6])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % 6])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % 20])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```"
        ],
        "3": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % 6].upper() for i in range(6)})\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % 20].upper() for i in range(20)})\n    \n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_map = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n\n    def translate_char(c):\n        if c.islower():\n            if c in vowel_map:\n                return vowel_map[c]\n            elif c in consonant_map:\n                return consonant_map[c]\n        elif c.isupper():\n            lower_c = c.lower()\n            if lower_c in vowel_map:\n                return vowel_map[lower_c].upper()\n            elif lower_c in consonant_map:\n                return consonant_map[lower_c].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n            transformed.append(new_char)\n        elif char in vowels.upper():\n            new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n            transformed.append(new_char)\n        elif char in consonants:\n            new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n            transformed.append(new_char)\n        elif char in consonants.upper():\n            new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translation = []\n    \n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def translate_char(c):\n        if c.isalpha():\n            if c.lower() in vowels:\n                index = vowels.index(c.lower())\n                new_index = (index + vowel_shift) % len(vowels)\n                return vowels[new_index].upper() if c.isupper() else vowels[new_index]\n            elif c.lower() in consonants:\n                index = consonants.index(c.lower())\n                new_index = (index + consonant_shift) % len(consonants)\n                return consonants[new_index].upper() if c.isupper() else consonants[new_index]\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = \"aiyeouAIYEOU\"\n    consonants = \"bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF\"\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                transformed.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                transformed.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                transformed.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                transformed.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_shift.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_shift.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_shift:\n            result.append(vowel_shift[char])\n        elif char in consonant_shift:\n            result.append(consonant_shift[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            transformed.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + 3) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + 10) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.lower() in vowels:\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c.lower() in consonants:\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translation = []\n    \n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n            else:\n                new_char = char\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n            else:\n                new_char = char\n        else:\n            new_char = char\n        \n        decoded.append(new_char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({v.upper(): vowel_map[v].upper() for v in vowel_map})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({c.upper(): consonant_map[c].upper() for c in consonant_map})\n\n    translation = []\n    \n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels_upper[i]: vowels_upper[(i + 3) % 6] for i in range(6)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants_upper[i]: consonants_upper[(i + 10) % 20] for i in range(20)})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_cap = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_cap = 'BKXZNHDCWGPVJQTSRLMF'\n\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_cap:\n            transformed.append(vowels_cap[(vowels_cap.index(char) + 3) % len(vowels_cap)])\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_cap:\n            transformed.append(consonants_cap[(consonants_cap.index(char) + 10) % len(consonants_cap)])\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            \n            if char.isupper():\n                new_char = new_char.upper()\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    consonant_shift = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    vowel_shift.update({v.upper(): v_shift.upper() for v, v_shift in vowel_shift.items()})\n    consonant_shift.update({c.upper(): c_shift.upper() for c, c_shift in consonant_shift.items()})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_shift:\n            decoded.append(vowel_shift[char])\n        elif char in consonant_shift:\n            decoded.append(consonant_shift[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(transform_char(c) for c in code)\n```"
        ],
        "4": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels_upper:\n            return vowels_upper[(vowels_upper.index(c) + 3) % len(vowels_upper)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants_upper:\n            return consonants_upper[(consonants_upper.index(c) + 10) % len(consonants_upper)]\n        else:\n            return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            idx = vowels.index(char)\n            new_char = vowels[(idx + 3) % 6 + (0 if char.islower() else 6)]\n            transformed.append(new_char)\n        elif char in consonants:\n            idx = consonants.index(char)\n            new_char = consonants[(idx + 10) % 20 + (0 if char.islower() else 20)]\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + 3) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + 10) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    translated = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            \n            if char.isupper():\n                new_char = new_char.upper()\n                \n            translated.append(new_char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = \"aiyeouAIYEOU\"\n    consonants = \"bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF\"\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6 + 6] for i in range(6, 12)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i]: consonants[(i + 10) % 20 + 20] for i in range(20, 40)})\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                translated.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                translated.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = \"aiyeouAIYEOU\"\n    consonants = \"bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF\"\n    \n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_shift.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_shift.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_shift:\n            translated.append(vowel_shift[char])\n        elif char in consonant_shift:\n            translated.append(consonant_shift[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % 6].upper() for i in range(6)})\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % 20].upper() for i in range(20)})\n\n    translation = []\n    \n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n\n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    translation = []\n    \n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels.upper()[(vowels.index(c.lower()) + 3) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants.upper()[(consonants.index(c.lower()) + 10) % len(consonants)]\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n\n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_shift.update({v.upper(): vowel_shift[v].upper() for v in vowels})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_shift.update({c.upper(): consonant_shift[c.lower()].upper() for c in consonants})\n\n    translation = []\n    for char in code:\n        if char in vowel_shift:\n            translation.append(vowel_shift[char])\n        elif char in consonant_shift:\n            translation.append(consonant_shift[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            result.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            result.append(consonant_mapping[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def transform_char(char):\n        if char.islower():\n            if char in vowels:\n                index = vowels.index(char)\n                return vowels[(index + vowel_shift) % len(vowels)]\n            elif char in consonants:\n                index = consonants.index(char)\n                return consonants[(index + consonant_shift) % len(consonants)]\n        elif char.isupper():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                return vowels[(index + vowel_shift) % len(vowels)].upper()\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                return consonants[(index + consonant_shift) % len(consonants)].upper()\n        return char\n\n    return ''.join(transform_char(char) for char in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    translated = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            translated.append(new_char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_shift = 3\n    consonants_shift = 10\n\n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowels_shift) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonants_shift) % len(consonants)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowels_shift) % len(vowels)].upper()\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonants_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(transform_char(c) for c in code)\n```"
        ]
    },
    "2": {
        "0": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in vowels.upper():\n            transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants.upper():\n            transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n                transformed.append(new_char.upper() if char.isupper() else new_char)\n            elif char in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n                transformed.append(new_char.upper() if char.isupper() else new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {v: vowels[(i + 3) % 6] for i, v in enumerate(vowels)}\n    consonant_shift = {c: consonants[(i + 10) % 20] for i, c in enumerate(consonants)}\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_shift:\n            result.append(vowel_shift[char])\n        elif char in consonant_shift:\n            result.append(consonant_shift[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            translated.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            translated.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            translated.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            translated.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            translated.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            translated.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in vowels.upper():\n            transformed.append(vowels.upper()[(vowels.index(char.lower()) + 3) % len(vowels)])\n        elif char in consonants.upper():\n            transformed.append(consonants.upper()[(consonants.index(char.lower()) + 10) % len(consonants)])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            idx = vowels.index(c)\n            return vowels[(idx + vowel_shift) % len(vowels)]\n        elif c in consonants:\n            idx = consonants.index(c)\n            return consonants[(idx + consonant_shift) % len(consonants)]\n        elif c in vowels.upper():\n            idx = vowels.index(c.lower())\n            return vowels[(idx + vowel_shift) % len(vowels)].upper()\n        elif c in consonants.upper():\n            idx = consonants.index(c.lower())\n            return consonants[(idx + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    consonant_mapping = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translated.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translated.append(consonant_mapping[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded_vowels = 'eouaiy'\n    decoded_consonants = 'rscwzgkvtbjdqpmhf'\n\n    def decode_char(c):\n        if c.islower():\n            if c in vowels:\n                return decoded_vowels[vowels.index(c)]\n            elif c in consonants:\n                return decoded_consonants[consonants.index(c)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return decoded_vowels[vowels.index(c.lower())].upper()\n            elif c.lower() in consonants:\n                return decoded_consonants[consonants.index(c.lower())].upper()\n        return c\n\n    return ''.join(decode_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels_lower:\n            translated.append(vowels_lower[(vowels_lower.index(char) + 3) % 6])\n        elif char in vowels_upper:\n            translated.append(vowels_upper[(vowels_upper.index(char) + 3) % 6])\n        elif char in consonants_lower:\n            translated.append(consonants_lower[(consonants_lower.index(char) + 10) % 20])\n        elif char in consonants_upper:\n            translated.append(consonants_upper[(consonants_upper.index(char) + 10) % 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    vowel_shift.update({vowels[i + 6]: vowels[(i + 3) % 6 + 6] for i in range(len(vowels) // 2)})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    \n    result = []\n    for char in code:\n        if char in vowel_shift:\n            result.append(vowel_shift[char])\n        elif char in consonant_shift:\n            result.append(consonant_shift[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char.lower() in vowel_map:\n            result.append(vowel_map[char.lower()].upper())\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        elif char.lower() in consonant_map:\n            result.append(consonant_map[char.lower()].upper())\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6 + (0 if v.islower() else 6)] for i, v in enumerate(vowels)}\n    \n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20 + (0 if c.islower() else 20)] for i, c in enumerate(consonants)}\n    \n    translation = []\n    for char in code:\n        if char in vowel_shift:\n            translation.append(vowel_shift[char])\n        elif char in consonant_shift:\n            translation.append(consonant_shift[char])\n        else:\n            translation.append(char)\n\n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                index = vowels.index(char)\n                decoded.append(vowels[(index + 3) % 6])\n            elif char in consonants:\n                index = consonants.index(char)\n                decoded.append(consonants[(index + 10) % 20])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                decoded.append(vowels[(index + 3) % 6].upper())\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                decoded.append(consonants[(index + 10) % 20].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % len(vowels)]\n            translated.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % len(consonants)]\n            translated.append(new_char)\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            new_char = vowels[(index + 3) % len(vowels)].upper()\n            translated.append(new_char)\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            new_char = consonants[(index + 10) % len(consonants)].upper()\n            translated.append(new_char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({v.upper(): vowel_mapping[v].upper() for v in vowel_mapping})\n\n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({c.upper(): consonant_mapping[c].upper() for c in consonant_mapping})\n\n    translation = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translation.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translation.append(consonant_mapping[char])\n        else:\n            translation.append(char)\n\n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels_lower:\n            decoded.append(vowels_lower[(vowels_lower.index(char) + 3) % len(vowels_lower)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants_lower:\n            decoded.append(consonants_lower[(consonants_lower.index(char) + 10) % len(consonants_lower)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```"
        ],
        "1": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_shift = 3\n    consonants_shift = 10\n    \n    def translate_char(c):\n        if c.isalpha():\n            if c.lower() in vowels:\n                idx = vowels.index(c.lower())\n                new_idx = (idx + vowels_shift) % len(vowels)\n                return vowels[new_idx].upper() if c.isupper() else vowels[new_idx]\n            elif c.lower() in consonants:\n                idx = consonants.index(c.lower())\n                new_idx = (idx + consonants_shift) % len(consonants)\n                return consonants[new_idx].upper() if c.isupper() else consonants[new_idx]\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n\n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowels_upper = vowels.upper()\n    consonants_upper = consonants.upper()\n    \n    decoded_message = []\n    \n    for char in code:\n        if char in vowels:\n            decoded_message.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded_message.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded_message.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded_message.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded_message.append(char)\n    \n    return ''.join(decoded_message)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({v.upper(): vowel_mapping[v].upper() for v in vowel_mapping})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({c.upper(): consonant_mapping[c].upper() for c in consonant_mapping})\n    \n    translation = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translation.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translation.append(consonant_mapping[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            transformed.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            transformed.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            transformed.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            transformed.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(char):\n        if char.islower():\n            if char in vowels:\n                return vowels[(vowels.index(char) + vowel_shift) % len(vowels)]\n            elif char in consonants:\n                return consonants[(consonants.index(char) + consonant_shift) % len(consonants)]\n        elif char.isupper():\n            if char.lower() in vowels:\n                return vowels[(vowels.index(char.lower()) + vowel_shift) % len(vowels)].upper()\n            elif char.lower() in consonants:\n                return consonants[(consonants.index(char.lower()) + consonant_shift) % len(consonants)].upper()\n        return char\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char in vowels:\n            new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n            translated.append(new_char)\n        elif char in vowels.upper():\n            new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n            translated.append(new_char)\n        elif char in consonants:\n            new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n            translated.append(new_char)\n        elif char in consonants.upper():\n            new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n            translated.append(new_char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                transformed.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                transformed.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                transformed.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                transformed.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                decoded.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                decoded.append(new_char)\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                decoded.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                decoded.append(new_char)\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed_code = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                transformed_code.append(new_char.upper())\n            else:\n                transformed_code.append(new_char)\n        else:\n            transformed_code.append(char)\n\n    return ''.join(transformed_code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c.lower() in vowels:\n            return vowels[(vowels.index(c.lower()) + 3) % len(vowels)].upper()\n        elif c.lower() in consonants:\n            return consonants[(consonants.index(c.lower()) + 10) % len(consonants)].upper()\n        return c\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                if char.isupper():\n                    new_char = new_char.upper()\n                transformed.append(new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    result = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                result.append(new_char.upper())\n            else:\n                result.append(new_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    translated = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % 6].upper() for i in range(6)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % 20].upper() for i in range(20)})\n\n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```"
        ],
        "2": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    translated = []\n\n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_vowel = vowels[(idx + 3) % 6]\n                transformed.append(new_vowel.upper() if char.isupper() else new_vowel)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_consonant = consonants[(idx + 10) % 20]\n                transformed.append(new_consonant.upper() if char.isupper() else new_consonant)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {v: vowels[(i + 3) % len(vowels)] for i, v in enumerate(vowels)}\n    consonant_map = {c: consonants[(i + 10) % len(consonants)] for i, c in enumerate(consonants)}\n    \n    vowel_map_upper = {v.upper(): vowel_map[v].upper() for v in vowels}\n    consonant_map_upper = {c.upper(): consonant_map[c].upper() for c in consonants}\n    \n    translation_map = {**vowel_map, **consonant_map, **vowel_map_upper, **consonant_map_upper}\n    \n    translated = ''.join(translation_map.get(char, char) for char in code)\n    \n    return translated\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    translated = []\n    \n    for char in code:\n        if char in vowels_lower:\n            translated.append(vowels_lower[(vowels_lower.index(char) + 3) % 6])\n        elif char in vowels_upper:\n            translated.append(vowels_upper[(vowels_upper.index(char) + 3) % 6])\n        elif char in consonants_lower:\n            translated.append(consonants_lower[(consonants_lower.index(char) + 10) % 20])\n        elif char in consonants_upper:\n            translated.append(consonants_upper[(consonants_upper.index(char) + 10) % 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_mapping.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_mapping.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translated.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translated.append(consonant_mapping[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    result = []\n    \n    for char in code:\n        if char.lower() in vowels:\n            index = vowels.index(char.lower())\n            new_index = (index + vowel_shift) % len(vowels)\n            new_char = vowels[new_index]\n            result.append(new_char.upper() if char.isupper() else new_char)\n        elif char.lower() in consonants:\n            index = consonants.index(char.lower())\n            new_index = (index + consonant_shift) % len(consonants)\n            new_char = consonants[new_index]\n            result.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n\n    decoded_message = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded_message.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded_message.append(consonant_map[char])\n        else:\n            decoded_message.append(char)\n\n    return ''.join(decoded_message)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                transformed.append(new_char.upper() if char.isupper() else new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                transformed.append(new_char.upper() if char.isupper() else new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_shift.update({v.upper(): vowel_shift[v].upper() for v in vowels})\n\n    consonant_shift = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_shift.update({c.upper(): consonant_shift[c.lower()].upper() for c in consonants})\n\n    translation = []\n    for char in code:\n        if char in vowel_shift:\n            translation.append(vowel_shift[char])\n        elif char in consonant_shift:\n            translation.append(consonant_shift[char])\n        else:\n            translation.append(char)\n\n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed_code = []\n    \n    for char in code:\n        if char.lower() in vowels:\n            idx = vowels.index(char.lower())\n            new_char = vowels[(idx + 3) % len(vowels)]\n            transformed_code.append(new_char.upper() if char.isupper() else new_char)\n        elif char.lower() in consonants:\n            idx = consonants.index(char.lower())\n            new_char = consonants[(idx + 10) % len(consonants)]\n            transformed_code.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            transformed_code.append(char)\n    \n    return ''.join(transformed_code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def translate_char(c):\n        if c in vowels:\n            idx = vowels.index(c)\n            return vowels[(idx + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            idx = vowels.index(c.lower())\n            return vowels[(idx + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            idx = consonants.index(c)\n            return consonants[(idx + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            idx = consonants.index(c.lower())\n            return consonants[(idx + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % 6].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % 20].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_shift.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_shift = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_shift.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    decoded = []\n    for char in code:\n        if char in vowel_shift:\n            decoded.append(vowel_shift[char])\n        elif char in consonant_shift:\n            decoded.append(consonant_shift[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowels_upper = vowels.upper()\n    consonants_upper = consonants.upper()\n    \n    translated = []\n\n    for char in code:\n        if char in vowels:\n            translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            translated.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            translated.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```"
        ],
        "3": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({v.upper(): vowel_mapping[v].upper() for v in vowel_mapping})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({c.upper(): consonant_mapping[c].upper() for c in consonant_mapping})\n    \n    translation = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translation.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translation.append(consonant_mapping[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def translate_char(c):\n        if c.isalpha():\n            if c.lower() in vowels:\n                index = vowels.index(c.lower())\n                new_index = (index + vowel_shift) % len(vowels)\n                return vowels[new_index].upper() if c.isupper() else vowels[new_index]\n            elif c.lower() in consonants:\n                index = consonants.index(c.lower())\n                new_index = (index + consonant_shift) % len(consonants)\n                return consonants[new_index].upper() if c.isupper() else consonants[new_index]\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            transformed.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + 3) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + 10) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c in vowels:\n            idx = vowels.index(c)\n            return vowels[(idx + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            idx = vowels.index(c.lower())\n            return vowels[(idx + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            idx = consonants.index(c)\n            return consonants[(idx + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            idx = consonants.index(c.lower())\n            return consonants[(idx + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translation = []\n    \n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.lower() in vowels:\n            idx = vowels.index(char.lower())\n            new_char = vowels[(idx + 3) % len(vowels)]\n            transformed.append(new_char.upper() if char.isupper() else new_char)\n        elif char.lower() in consonants:\n            idx = consonants.index(char.lower())\n            new_char = consonants[(idx + 10) % len(consonants)]\n            transformed.append(new_char.upper() if char.isupper() else new_char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                translated.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                translated.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_mapping:\n            result.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            result.append(consonant_mapping[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    translation = []\n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n\n    return ''.join(translation)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels_upper[i]: vowels_upper[(i + 3) % 6] for i in range(6)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants_upper[i]: consonants_upper[(i + 10) % 20] for i in range(20)})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_cap = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_cap = 'BKXZNHDCWGPVJQTSRLMF'\n\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_cap:\n            transformed.append(vowels_cap[(vowels_cap.index(char) + 3) % len(vowels_cap)])\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_cap:\n            transformed.append(consonants_cap[(consonants_cap.index(char) + 10) % len(consonants_cap)])\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + 10) % len(consonants)]\n            else:\n                new_char = char\n            \n            if char.isupper():\n                new_char = new_char.upper()\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                translated.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                translated.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                translated.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels_lower:\n            transformed.append(vowels_lower[(vowels_lower.index(char) + 3) % len(vowels_lower)])\n        elif char in vowels_upper:\n            transformed.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants_lower:\n            transformed.append(consonants_lower[(consonants_lower.index(char) + 10) % len(consonants_lower)])\n        elif char in consonants_upper:\n            transformed.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            \n            if char.isupper():\n                new_char = new_char.upper()\n            translated.append(new_char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    transformed = []\n    \n    for char in code:\n        if char in vowels_lower:\n            index = vowels_lower.index(char)\n            transformed.append(vowels_lower[(index + 3) % 6])\n        elif char in vowels_upper:\n            index = vowels_upper.index(char)\n            transformed.append(vowels_upper[(index + 3) % 6])\n        elif char in consonants_lower:\n            index = consonants_lower.index(char)\n            transformed.append(consonants_lower[(index + 10) % 20])\n        elif char in consonants_upper:\n            index = consonants_upper.index(char)\n            transformed.append(consonants_upper[(index + 10) % 20])\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "```python\ndef tongues(code):\n    vowels_lower = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants_lower = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n\n    def translate_char(char):\n        if char in vowels_lower:\n            return vowels_lower[(vowels_lower.index(char) + 3) % len(vowels_lower)]\n        elif char in vowels_upper:\n            return vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)]\n        elif char in consonants_lower:\n            return consonants_lower[(consonants_lower.index(char) + 10) % len(consonants_lower)]\n        elif char in consonants_upper:\n            return consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)]\n        else:\n            return char\n\n    return ''.join(translate_char(char) for char in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_shift = 3\n    consonant_shift = 10\n    \n    decoded_message = []\n    \n    for char in code:\n        if char in vowels:\n            is_upper = char.isupper()\n            index = vowels.index(char.lower())\n            new_index = (index + vowel_shift) % 6\n            new_char = vowels[new_index]\n            decoded_message.append(new_char.upper() if is_upper else new_char)\n        elif char in consonants:\n            is_upper = char.isupper()\n            index = consonants.index(char.lower())\n            new_index = (index + consonant_shift) % 20\n            new_char = consonants[new_index]\n            decoded_message.append(new_char.upper() if is_upper else new_char)\n        else:\n            decoded_message.append(char)\n    \n    return ''.join(decoded_message)\n```"
        ],
        "4": [
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_index = (index + 3) % 6\n                new_char = vowels[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_index = (index + 10) % 20\n                new_char = consonants[new_index]\n                if char.isupper():\n                    new_char = new_char.upper()\n            else:\n                new_char = char\n        else:\n            new_char = char\n        decoded.append(new_char)\n\n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            decoded.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            decoded.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    translated = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                translated.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        elif char.isupper():\n            lower_char = char.lower()\n            if lower_char in vowels:\n                new_char = vowels[(vowels.index(lower_char) + 3) % len(vowels)].upper()\n                translated.append(new_char)\n            elif lower_char in consonants:\n                new_char = consonants[(consonants.index(lower_char) + 10) % len(consonants)].upper()\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n                translated.append(new_char)\n            elif char in consonants:\n                new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                new_char = vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper()\n                translated.append(new_char)\n            elif char.lower() in consonants:\n                new_char = consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper()\n                translated.append(new_char)\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % len(vowels)]\n            decoded.append(new_char)\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            new_char = vowels[(index + 3) % len(vowels)].upper()\n            decoded.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % len(consonants)]\n            decoded.append(new_char)\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            new_char = consonants[(index + 10) % len(consonants)].upper()\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n    \n    translated = []\n    for char in code:\n        if char in vowel_map:\n            translated.append(vowel_map[char])\n        elif char in consonant_map:\n            translated.append(consonant_map[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels.upper()[(vowels.index(c.lower()) + 3) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants.upper()[(consonants.index(c.lower()) + 10) % len(consonants)]\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowel_map[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonant_map[consonants[i]].upper() for i in range(len(consonants))})\n\n    decoded_chars = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded_chars.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded_chars.append(consonant_map[char])\n        else:\n            decoded_chars.append(char)\n    \n    return ''.join(decoded_chars)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            index = vowels.index(c)\n            return vowels[(index + vowel_shift) % len(vowels)]\n        elif c in consonants:\n            index = consonants.index(c)\n            return consonants[(index + consonant_shift) % len(consonants)]\n        elif c in vowels.upper():\n            index = vowels.index(c.lower())\n            return vowels[(index + vowel_shift) % len(vowels)].upper()\n        elif c in consonants.upper():\n            index = consonants.index(c.lower())\n            return consonants[(index + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    decoded = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                new_char = vowels[(index + vowel_shift) % len(vowels)]\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                new_char = consonants[(index + consonant_shift) % len(consonants)]\n            else:\n                new_char = char\n            \n            if char.isupper():\n                new_char = new_char.upper()\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            result.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            result.append(consonant_mapping[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    result = []\n    for char in code:\n        if char in vowel_map:\n            result.append(vowel_map[char])\n        elif char in consonant_map:\n            result.append(consonant_map[char])\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n\n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def transform_char(char):\n        if char.islower():\n            if char in vowels:\n                index = vowels.index(char)\n                return vowels[(index + vowel_shift) % len(vowels)]\n            elif char in consonants:\n                index = consonants.index(char)\n                return consonants[(index + consonant_shift) % len(consonants)]\n        elif char.isupper():\n            if char.lower() in vowels:\n                index = vowels.index(char.lower())\n                return vowels[(index + vowel_shift) % len(vowels)].upper()\n            elif char.lower() in consonants:\n                index = consonants.index(char.lower())\n                return consonants[(index + consonant_shift) % len(consonants)].upper()\n        return char\n\n    return ''.join(transform_char(char) for char in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n    \n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n    \n    return ''.join(translate_char(c) for c in code)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    translated = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            translated.append(new_char)\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_shift = 3\n    consonants_shift = 10\n\n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + vowels_shift) % len(vowels)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + consonants_shift) % len(consonants)]\n        elif c in vowels.upper():\n            return vowels[(vowels.index(c.lower()) + vowels_shift) % len(vowels)].upper()\n        elif c in consonants.upper():\n            return consonants[(consonants.index(c.lower()) + consonants_shift) % len(consonants)].upper()\n        else:\n            return c\n\n    return ''.join(transform_char(c) for c in code)\n```"
        ]
    }
}