{
    "0": [
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                translated.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                translated.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                translated.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                translated.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({vowels[i]: vowels[(i + 3) % 6].upper() for i in range(6, 12)})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(20)}\n    consonant_map.update({consonants[i]: consonants[(i + 10) % 20].upper() for i in range(20, 40)})\n    \n    decoded = []\n    \n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translation = []\n    for char in code:\n        if char in vowel_mapping:\n            translation.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translation.append(consonant_mapping[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(6)}\n    vowel_map.update({v.upper(): vowel_map[v].upper() for v in vowels})\n    consonant_map = {consonants[i]: consonants[(i + 10) % 16] for i in range(16)}\n    consonant_map.update({c.upper(): consonant_map[c].upper() for c in consonants})\n\n    translation = []\n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n\n    return ''.join(translation)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    def transform_char(c):\n        if c in vowels:\n            return vowels[(vowels.index(c) + 3) % 6 + (0 if c.islower() else 6)]\n        elif c in consonants:\n            return consonants[(consonants.index(c) + 10) % 20 + (0 if c.islower() else 20)]\n        else:\n            return c\n    \n    return ''.join(transform_char(c) for c in code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n\n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % 6] if char.islower() else vowels[(index + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % 20] if char.islower() else consonants[(index + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            translated.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            translated.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            translated.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            translated.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % 6] for i in range(len(vowels))}\n    consonant_map = {consonants[i]: consonants[(i + 10) % 20] for i in range(len(consonants))}\n    \n    decoded = []\n    for char in code:\n        if char in vowel_map:\n            decoded.append(vowel_map[char])\n        elif char in consonant_map:\n            decoded.append(consonant_map[char])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n                if char.isupper():\n                    transformed.append(new_char.upper())\n                else:\n                    transformed.append(new_char)\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n                if char.isupper():\n                    transformed.append(new_char.upper())\n                else:\n                    transformed.append(new_char)\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    result = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % len(vowels)]\n            result.append(new_char)\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            new_char = vowels[(index + 3) % len(vowels)].upper()\n            result.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % len(consonants)]\n            result.append(new_char)\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            new_char = consonants[(index + 10) % len(consonants)].upper()\n            result.append(new_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    transformed = []\n    \n    for char in code:\n        if char.isalpha():\n            if char.lower() in vowels:\n                idx = vowels.index(char.lower())\n                new_char = vowels[(idx + 3) % len(vowels)]\n            elif char.lower() in consonants:\n                idx = consonants.index(char.lower())\n                new_char = consonants[(idx + 10) % len(consonants)]\n            else:\n                new_char = char\n            if char.isupper():\n                new_char = new_char.upper()\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            transformed.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed_code = []\n\n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            transformed_code.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            transformed_code.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            transformed_code.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            transformed_code.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            transformed_code.append(char)\n\n    return ''.join(transformed_code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_map = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_map.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_map = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_map.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translation = []\n    for char in code:\n        if char in vowel_map:\n            translation.append(vowel_map[char])\n        elif char in consonant_map:\n            translation.append(consonant_map[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            decoded.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            decoded.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            decoded.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            decoded.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            transformed.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            transformed.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    result = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % len(vowels)]\n            result.append(new_char)\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            new_char = vowels[(index + 3) % len(vowels)].upper()\n            result.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % len(consonants)]\n            result.append(new_char)\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            new_char = consonants[(index + 10) % len(consonants)].upper()\n            result.append(new_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({vowels[i].upper(): vowel_mapping[vowels[i]].upper() for i in range(len(vowels))})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({consonants[i].upper(): consonant_mapping[consonants[i]].upper() for i in range(len(consonants))})\n    \n    translation = []\n    for char in code:\n        if char in vowel_mapping:\n            translation.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translation.append(consonant_mapping[char])\n        else:\n            translation.append(char)\n    \n    return ''.join(translation)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_upper = vowels.upper()\n    consonants_upper = consonants.upper()\n    \n    decoded_message = []\n    \n    for char in code:\n        if char in vowels:\n            new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n            decoded_message.append(new_char)\n        elif char in consonants:\n            new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n            decoded_message.append(new_char)\n        elif char in vowels_upper:\n            new_char = vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)]\n            decoded_message.append(new_char)\n        elif char in consonants_upper:\n            new_char = consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)]\n            decoded_message.append(new_char)\n        else:\n            decoded_message.append(char)\n    \n    return ''.join(decoded_message)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            transformed.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed_code = []\n\n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            transformed_code.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            transformed_code.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            transformed_code.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            transformed_code.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            transformed_code.append(char)\n\n    return ''.join(transformed_code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            decoded.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            decoded.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            decoded.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            decoded.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                transformed.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                transformed.append(char)\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    vowels_upper = 'AIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    consonants_upper = 'BKXZNHDCWGPVJQTSRLMF'\n\n    transformed = []\n\n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels_upper:\n            transformed.append(vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)])\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants_upper:\n            transformed.append(consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)])\n        else:\n            transformed.append(char)\n\n    return ''.join(transformed)\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    result = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            new_char = vowels[(index + 3) % len(vowels)]\n            result.append(new_char)\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            new_char = vowels[(index + 3) % len(vowels)].upper()\n            result.append(new_char)\n        elif char in consonants:\n            index = consonants.index(char)\n            new_char = consonants[(index + 10) % len(consonants)]\n            result.append(new_char)\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            new_char = consonants[(index + 10) % len(consonants)].upper()\n            result.append(new_char)\n        else:\n            result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    \n    vowel_mapping = {vowels[i]: vowels[(i + 3) % len(vowels)] for i in range(len(vowels))}\n    vowel_mapping.update({vowels[i].upper(): vowels[(i + 3) % len(vowels)].upper() for i in range(len(vowels))})\n    \n    consonant_mapping = {consonants[i]: consonants[(i + 10) % len(consonants)] for i in range(len(consonants))}\n    consonant_mapping.update({consonants[i].upper(): consonants[(i + 10) % len(consonants)].upper() for i in range(len(consonants))})\n    \n    translated = []\n    \n    for char in code:\n        if char in vowel_mapping:\n            translated.append(vowel_mapping[char])\n        elif char in consonant_mapping:\n            translated.append(consonant_mapping[char])\n        else:\n            translated.append(char)\n    \n    return ''.join(translated)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            decoded.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            decoded.append(new_char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowels_upper = vowels.upper()\n    consonants_upper = consonants.upper()\n    \n    decoded_message = []\n    \n    for char in code:\n        if char in vowels:\n            new_char = vowels[(vowels.index(char) + 3) % len(vowels)]\n            decoded_message.append(new_char)\n        elif char in consonants:\n            new_char = consonants[(consonants.index(char) + 10) % len(consonants)]\n            decoded_message.append(new_char)\n        elif char in vowels_upper:\n            new_char = vowels_upper[(vowels_upper.index(char) + 3) % len(vowels_upper)]\n            decoded_message.append(new_char)\n        elif char in consonants_upper:\n            new_char = consonants_upper[(consonants_upper.index(char) + 10) % len(consonants_upper)]\n            decoded_message.append(new_char)\n        else:\n            decoded_message.append(char)\n    \n    return ''.join(decoded_message)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                new_char = vowels[(vowels.index(char) + 3) % 6]\n            else:\n                new_char = vowels[(vowels.index(char) + 3) % 6 + 6]\n            transformed.append(new_char)\n        elif char in consonants:\n            if char.islower():\n                new_char = consonants[(consonants.index(char) + 10) % 20]\n            else:\n                new_char = consonants[(consonants.index(char) + 10) % 20 + 20]\n            transformed.append(new_char)\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char.islower():\n            if char in vowels:\n                decoded.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                decoded.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                decoded.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                decoded.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                decoded.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                decoded.append(char)\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeouAIYEOU'\n    consonants = 'bkxznhdcwgpvjqtsrlmfBKXZNHDCWGPVJQTSRLMF'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            if char.islower():\n                decoded.append(vowels[(vowels.index(char) + 3) % 6])\n            else:\n                decoded.append(vowels[(vowels.index(char) + 3) % 6 + 6])\n        elif char in consonants:\n            if char.islower():\n                decoded.append(consonants[(consonants.index(char) + 10) % 20])\n            else:\n                decoded.append(consonants[(consonants.index(char) + 10) % 20 + 20])\n        else:\n            decoded.append(char)\n    \n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    vowel_shift = 3\n    consonant_shift = 10\n\n    def translate_char(c):\n        if c.islower():\n            if c in vowels:\n                return vowels[(vowels.index(c) + vowel_shift) % len(vowels)]\n            elif c in consonants:\n                return consonants[(consonants.index(c) + consonant_shift) % len(consonants)]\n        elif c.isupper():\n            if c.lower() in vowels:\n                return vowels[(vowels.index(c.lower()) + vowel_shift) % len(vowels)].upper()\n            elif c.lower() in consonants:\n                return consonants[(consonants.index(c.lower()) + consonant_shift) % len(consonants)].upper()\n        return c\n\n    return ''.join(translate_char(c) for c in code)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    transformed = []\n    \n    for char in code:\n        if char in vowels:\n            transformed.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n        elif char in vowels.upper():\n            transformed.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n        elif char in consonants:\n            transformed.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n        elif char in consonants.upper():\n            transformed.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n        else:\n            transformed.append(char)\n    \n    return ''.join(transformed)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    decoded = []\n    \n    for char in code:\n        if char in vowels:\n            index = vowels.index(char)\n            decoded.append(vowels[(index + 3) % len(vowels)])\n        elif char in vowels.upper():\n            index = vowels.index(char.lower())\n            decoded.append(vowels[(index + 3) % len(vowels)].upper())\n        elif char in consonants:\n            index = consonants.index(char)\n            decoded.append(consonants[(index + 10) % len(consonants)])\n        elif char in consonants.upper():\n            index = consonants.index(char.lower())\n            decoded.append(consonants[(index + 10) % len(consonants)].upper())\n        else:\n            decoded.append(char)\n\n    return ''.join(decoded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef tongues(code):\n    vowels = 'aiyeou'\n    consonants = 'bkxznhdcwgpvjqtsrlmf'\n    translated = []\n\n    for char in code:\n        if char.islower():\n            if char in vowels:\n                translated.append(vowels[(vowels.index(char) + 3) % len(vowels)])\n            elif char in consonants:\n                translated.append(consonants[(consonants.index(char) + 10) % len(consonants)])\n            else:\n                translated.append(char)\n        elif char.isupper():\n            if char.lower() in vowels:\n                translated.append(vowels[(vowels.index(char.lower()) + 3) % len(vowels)].upper())\n            elif char.lower() in consonants:\n                translated.append(consonants[(consonants.index(char.lower()) + 10) % len(consonants)].upper())\n            else:\n                translated.append(char)\n        else:\n            translated.append(char)\n\n    return ''.join(translated)\n```",
            "logp": null
        }
    ]
}