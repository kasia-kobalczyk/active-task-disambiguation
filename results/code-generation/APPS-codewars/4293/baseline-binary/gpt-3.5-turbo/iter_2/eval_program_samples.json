{
    "0": {
        "0": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r / 30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return max(round(epley), round(mcglothin), round(lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100*w) / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.1\n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123*r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))"
        ],
        "1": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r / 30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return max(round(epley), round(mcglothin), round(lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100*w) / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.1\n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123*r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))"
        ],
        "2": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r / 30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return max(round(epley), round(mcglothin), round(lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r / 30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100*w) / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123*r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))"
        ],
        "3": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = w * (100 / (101.3 - 2.67123 * r))\n        lombardi = w * r**0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "import math\n\ndef calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r / 30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        max_weight = max(epley, mcglothin, lombardi)\n        \n        return round(max_weight)",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100*w / (101.3 - 2.67123*r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n\n    epley = w * (1 + r/30)\n    mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n\n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = (100 * w) / (101.3 - (2.67123 * r))\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.1)\n        \n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.1)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))"
        ],
        "4": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = w * (100 / (101.3 - 2.67123 * r))\n        lombardi = w * r**0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n\n    return max(round(epley), round(mcglothin), round(lombardi))",
            "import math\n\ndef calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r / 30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        max_weight = max(epley, mcglothin, lombardi)\n        \n        return round(max_weight)",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n\n    epley = w * (1 + r/30)\n    mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n\n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = (100 * w) / (101.3 - (2.67123 * r))\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.1)\n        \n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.1)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))"
        ]
    },
    "1": {
        "0": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100*w) / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123*r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + (0.0333 * r))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r**0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))"
        ],
        "1": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100*w) / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123*r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + (0.0333 * r))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r**0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))"
        ],
        "2": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100*w) / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.1\n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "```python\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return round(max(epley, mcglothin, lombardi))\n```",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123*r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + (0.0333 * r))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r**0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))"
        ],
        "3": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r / 30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        max_weight = max(epley, mcglothin, lombardi)\n        \n        return round(max_weight)",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n\n    epley = w * (1 + r/30)\n    mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n\n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = (100 * w) / (101.3 - (2.67123 * r))\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.1)\n        \n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.1)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return int(max(epley, mcglothin, lombardi))",
            "import math\n\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100*w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100 * w) / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))"
        ],
        "4": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r / 30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        max_weight = max(epley, mcglothin, lombardi)\n        \n        return round(max_weight)",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n\n    epley = w * (1 + r/30)\n    mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n\n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = (100 * w) / (101.3 - (2.67123 * r))\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.1)\n        \n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.10\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return int(max(epley, mcglothin, lombardi))",
            "import math\n\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100*w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100 * w) / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))"
        ]
    },
    "2": {
        "0": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + (0.0333 * r))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r**0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return int(max(epley, mcglothin, lombardi))\n\n# test cases\nprint(calculate_1RM(100, 5)) # expected output: 132\nprint(calculate_1RM(150, 1)) # expected output: 150\nprint(calculate_1RM(200, 0)) # expected output: 0",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))"
        ],
        "1": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + (0.0333 * r))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return int(max(epley, mcglothin, lombardi))\n\n# test cases\nprint(calculate_1RM(100, 5)) # expected output: 132\nprint(calculate_1RM(150, 1)) # expected output: 150\nprint(calculate_1RM(200, 0)) # expected output: 0",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))"
        ],
        "2": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + (0.0333 * r))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    \n    if r == 1:\n        return w\n    \n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r**0.10)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        return int(max(epley, mcglothin, lombardi))\n\n# test cases\nprint(calculate_1RM(100, 5)) # expected output: 132\nprint(calculate_1RM(150, 1)) # expected output: 150\nprint(calculate_1RM(200, 0)) # expected output: 0",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.1\n    \n    return round(max(epley, mcglothin, lombardi))"
        ],
        "3": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n\n    epley = w * (1 + (r/30))\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n\n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r**0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.1)\n        \n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.1)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return int(max(epley, mcglothin, lombardi))",
            "import math\n\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100*w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100 * w) / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))"
        ],
        "4": [
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    if r == 1:\n        return w\n\n    epley = w * (1 + r/30)\n    mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n    lombardi = w * r ** 0.10\n\n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    \n    epley = w * (1 + r/30)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * r**0.1\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (0.0333 * r))\n        mcglothin = (100 * w) / (101.3 - (2.67123 * r))\n        lombardi = w * (r ** 0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.1)\n        \n        return int(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    else:\n        epley = w * (1 + r / 30)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 1:\n        return w\n    elif r == 0:\n        return 0\n    \n    epley = w * (1 + 0.0333 * r)\n    mcglothin = 100 * w / (101.3 - 2.67123 * r)\n    lombardi = w * (r ** 0.1)\n    \n    return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return int(max(epley, mcglothin, lombardi))",
            "import math\n\ndef calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = 100 * w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.1\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.1)\n        return max(round(epley), round(mcglothin), round(lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r / 30))\n        mcglothin = (100 * w) / (101.3 - 2.67123 * r)\n        lombardi = w * (r ** 0.10)\n        \n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + r/30)\n        mcglothin = 100*w / (101.3 - 2.67123*r)\n        lombardi = w * (r**0.10)\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + 0.0333 * r)\n        mcglothin = 100 * w / (101.3 - 2.67123 * r)\n        lombardi = w * r ** 0.10\n        return round(max(epley, mcglothin, lombardi))",
            "def calculate_1RM(w, r):\n    if r == 0:\n        return 0\n    elif r == 1:\n        return w\n    else:\n        epley = w * (1 + (r/30))\n        mcglothin = (100 * w) / (101.3 - 2.67123*r)\n        lombardi = w * r**0.10\n        return round(max(epley, mcglothin, lombardi))"
        ]
    }
}