{
    "0": {
        "0": [
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    multiplier = ''\n    for char in s:\n        if char.isdigit():\n            multiplier += char\n        else:\n            if multiplier:\n                result += char * int(multiplier)\n                multiplier = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    multiplier = ''\n    for char in s:\n        if char.isalpha():\n            if multiplier:\n                result += char * int(multiplier)\n                multiplier = ''\n            else:\n                result += char\n        else:\n            multiplier += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            count = ''\n            j = i + 1\n            while j < len(s) and s[j].isdigit():\n                count += s[j]\n                j += 1\n            if count == '':\n                result += s[i]\n            else:\n                result += s[i] * int(count)\n            i = j\n        else:\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    num = \"\"\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = \"\"\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            if i < len(s) and s[i].isalpha():\n                result += s[i] * int(count)\n            else:\n                i -= 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isalpha():\n            if num:\n                result += char * int(num)\n                num = ''\n            else:\n                result += char\n        else:\n            num += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    count = 1\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            result += char * count\n            count = 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            if i < len(s) and s[i].isalpha():\n                result += s[i] * count\n        elif s[i].isalpha():\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    multiplier = ''\n    for char in s:\n        if char.isalpha():\n            if multiplier:\n                result += char * int(multiplier)\n                multiplier = ''\n            else:\n                result += char\n        else:\n            multiplier += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            result += s[j] * count\n            i = j + 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isalpha():\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n        else:\n            num_str += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isalpha():\n            if num:\n                result += char * int(num)\n                num = ''\n            else:\n                result += char\n        else:\n            num += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    \n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n                \n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            j = i + 1\n            count = ''\n            while j < len(s) and s[j].isdigit():\n                count += s[j]\n                j += 1\n            if count == '':\n                result += s[i]\n            else:\n                result += s[i] * int(count)\n            i = j\n        else:\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    multiplier = 1\n    for char in s:\n        if char.isalpha():\n            result += char * multiplier\n            multiplier = 1\n        elif char.isdigit():\n            multiplier = int(char)\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            count = int(count)\n            i -= 1\n            while count > 0:\n                result += result[-1]\n                count -= 1\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        else:\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            result += s[j]*count\n            i = j + 1\n    return result"
        ],
        "1": [
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result"
        ],
        "2": [
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result"
        ],
        "3": [
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result"
        ],
        "4": [
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result"
        ]
    },
    "1": {
        "0": [
            "def string_expansion(s):\n    result = ''\n    multiplier = ''\n    for char in s:\n        if char.isalpha():\n            if multiplier:\n                result += char * int(multiplier)\n                multiplier = ''\n            else:\n                result += char\n        else:\n            multiplier += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            result += s[j] * count\n            i = j + 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isalpha():\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n        else:\n            num_str += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isalpha():\n            if num:\n                result += char * int(num)\n                num = ''\n            else:\n                result += char\n        else:\n            num += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    \n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n                \n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            j = i + 1\n            count = ''\n            while j < len(s) and s[j].isdigit():\n                count += s[j]\n                j += 1\n            if count == '':\n                result += s[i]\n            else:\n                result += s[i] * int(count)\n            i = j\n        else:\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    multiplier = 1\n    for char in s:\n        if char.isalpha():\n            result += char * multiplier\n            multiplier = 1\n        elif char.isdigit():\n            multiplier = int(char)\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            count = int(count)\n            i -= 1\n            while count > 0:\n                result += result[-1]\n                count -= 1\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        else:\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            result += s[j]*count\n            i = j + 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isdigit():\n            num_str += char\n        else:\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isdigit():\n            num_str += char\n        else:\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            count = ''\n            j = i + 1\n            while j < len(s) and s[j].isdigit():\n                count += s[j]\n                j += 1\n            if count == '':\n                count = 1\n            else:\n                count = int(count)\n            result += s[i] * count\n            i = j\n        else:\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            count = ''\n            j = i + 1\n            while j < len(s) and s[j].isdigit():\n                count += s[j]\n                j += 1\n            if count == '':\n                result += s[i]\n            else:\n                result += s[i] * int(count)\n            i = j\n        else:\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isalpha():\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n        else:\n            num_str += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    num = \"\"\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = \"\"\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num == '':\n                result += char\n            else:\n                result += char * int(num)\n                num = ''\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            if i < len(s):\n                char = s[i]\n                result += char * count\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            char = s[j]\n            result += char * count\n            i = j + 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "1": [
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isalpha():\n                char = s[i]\n                result += char * count\n                i += 1\n            else:\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "2": [
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isalpha():\n                char = s[i]\n                result += char * count\n                i += 1\n            else:\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "3": [
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isalpha():\n                char = s[i]\n                result += char * count\n                i += 1\n            else:\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "4": [
            "def string_expansion(s):\n    result = \"\"\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isalpha():\n                char = s[i]\n                result += char * count\n                i += 1\n            else:\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ]
    },
    "2": {
        "0": [
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isdigit():\n            num_str += char\n        else:\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isdigit():\n            num_str += char\n        else:\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            count = ''\n            j = i + 1\n            while j < len(s) and s[j].isdigit():\n                count += s[j]\n                j += 1\n            if count == '':\n                count = 1\n            else:\n                count = int(count)\n            result += s[i] * count\n            i = j\n        else:\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            count = ''\n            j = i + 1\n            while j < len(s) and s[j].isdigit():\n                count += s[j]\n                j += 1\n            if count == '':\n                result += s[i]\n            else:\n                result += s[i] * int(count)\n            i = j\n        else:\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isalpha():\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n        else:\n            num_str += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    num = \"\"\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = \"\"\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num == '':\n                result += char\n            else:\n                result += char * int(num)\n                num = ''\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            if i < len(s):\n                char = s[i]\n                result += char * count\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            char = s[j]\n            result += char * count\n            i = j + 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result += char * multiplier\n            multiplier = 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isalpha():\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n        else:\n            count += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            result += s[j] * count\n            i = j + 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    num = \"\"\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = \"\"\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            if i < len(s) and s[i].isalpha():\n                result += s[i] * int(count)\n            else:\n                i -= 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            if i < len(s) and s[i].isalpha():\n                result += s[i] * count\n                i += 1\n            else:\n                i -= 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    count = \"\"\n    \n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = \"\"\n            else:\n                result += char\n                \n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        else:\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            count = int(count) if count else 1\n            while count > 0:\n                result += result[-1]\n                count -= 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            count = int(count)\n            while count > 0:\n                if i < len(s) and s[i].isalpha():\n                    result += s[i]\n                    i += 1\n                    count -= 1\n                else:\n                    break\n    return result"
        ],
        "1": [
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isalpha():\n                char = s[i]\n                result += char * count\n                i += 1\n            else:\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "2": [
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isalpha():\n                char = s[i]\n                result += char * count\n                i += 1\n            else:\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "3": [
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isalpha():\n                char = s[i]\n                result += char * count\n                i += 1\n            else:\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "4": [
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isalpha():\n                char = s[i]\n                result += char * count\n                i += 1\n            else:\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ]
    }
}