{
    "0": [
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 1\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    num = \"\"\n    for char in s:\n        if char.isdigit():\n            num += char\n        elif char.isalpha():\n            if num:\n                result += char * int(num)\n                num = \"\"\n            else:\n                result += char\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 0\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    return result\n\nprint(string_expansion('3D2a5d2f'))",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isnumeric():\n            if i+1 < len(s) and s[i+1].isnumeric():\n                i += 1\n            else:\n                num = int(s[i])\n                for _ in range(num):\n                    result += s[i-1]\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 1\n\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count += s[i]\n        elif s[i].isalpha():\n            if count == \"\":\n                count = \"1\"\n            result += s[i] * int(count)\n            count = \"\"\n        i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 1\n    for i in range(len(s)):\n        if s[i].isnumeric():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 1\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 1\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = \"\"\n    count = 1\n    i = 0\n    \n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n        else:\n            result += s[i] * count\n            count = 1\n            i += 1\n            \n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 0\n    \n    for i in s:\n        if i.isnumeric():\n            count = int(i)\n        else:\n            result += i * count\n            \n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 0\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            result += char * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 1\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    repeat = 1\n    for char in s:\n        if char.isdigit():\n            repeat = int(char)\n        else:\n            result += char * repeat\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 0\n    for char in s:\n        if char.isalpha():\n            if count == 0:\n                result += char\n            else:\n                result += char * count\n                count = 0\n        elif char.isdigit():\n            count = int(char)\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result += s[i] * count\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            repeat = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result += s[i] * repeat\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 1\n    \n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    \n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if count == 0:\n                result += s[i]\n            else:\n                result += s[i] * count\n                count = 0\n        else:\n            count = int(s[i])\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            j = i\n            while j < len(s) and s[j].isdigit() == False:\n                j += 1\n            result += s[i:j] * num\n            i = j\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 1\n    \n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    \n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 0\n    \n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    \n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 0\n    \n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            result += char * count\n    \n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 0\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            result += char * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 0\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            result += char * count\n    return result\n\nprint(string_expansion('3D2a5d2f')) # expected: DDDaadddddff\nprint(string_expansion('3abc')) # expected: aaabbbccc\nprint(string_expansion('3d332f2a')) # expected: dddffaa\nprint(string_expansion('abcde')) # expected: abcde\nprint(string_expansion('')) # expected: ''",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            j = i\n            while j < len(s) and s[j].isalpha():\n                result += s[j] * num\n                j += 1\n            i = j\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n\n    result = \"\"\n    i = 0\n\n    while i < len(s):\n        if s[i].isnumeric():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result += s[i] * count\n                i += 1\n        else:\n            result += s[i]\n            i += 1\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 1\n    \n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n            \n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    repeat = 1\n    for char in s:\n        if char.isdigit():\n            repeat = int(char)\n        else:\n            result += char * repeat\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            repeat = int(s[i])\n            i += 1\n            continue\n        result += s[i] * repeat\n        i += 1\n    return result",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 1\n\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 0\n    for i in s:\n        if i.isdigit():\n            count = int(i)\n        else:\n            result += i * count\n    return result\n\nprint(string_expansion('3D2a5d2f')) # 'DDDaadddddff'\nprint(string_expansion('3abc')) # 'aaabbbccc'\nprint(string_expansion('3d332f2a')) # 'dddffaa'\nprint(string_expansion('abcde')) # 'abcde'\nprint(string_expansion('')) # ''",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 1\n\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n\n    result = \"\"\n    repeat = 1\n\n    for char in s:\n        if char.isdigit():\n            repeat = int(char)\n        else:\n            result += char * repeat\n\n    return result\n\n# Test cases:\n\nprint(string_expansion('3D2a5d2f')) # 'DDDaadddddff'\nprint(string_expansion('3abc')) # 'aaabbbccc'\nprint(string_expansion('3d332f2a')) # 'dddffaa'\nprint(string_expansion('abcde')) # 'abcde'\nprint(string_expansion('')) # ''",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 1\n    for i in range(len(s)):\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            result += s[i] * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    count = ''\n    result = ''\n    for char in s:\n        if char.isdigit():\n            count = char\n        else:\n            result += char * int(count)\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n\n    result = \"\"\n    num = 1\n    i = 0\n\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n        else:\n            result += s[i] * num\n            i += 1\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    if s == '':\n        return ''\n    \n    result = ''\n    count = 1\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n        else:\n            result += s[i] * count\n            i += 1\n    \n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    num = 1\n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            result += char * num\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    count = 0\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            result += char * count\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = 0\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            result += char * count\n    return result",
            "logp": null
        }
    ]
}