{
    "0": [
        {
            "content": "def string_expansion(s):\n    if not s:\n        return \"\"\n\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            prev_char = \"\"\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            for _ in range(count):\n                if i < len(s):\n                    char = s[i]\n                    if prev_char:\n                        result += char * count\n                    else:\n                        result += char\n                    prev_char = char\n                else:\n                    break\n        else:\n            if i < len(s):\n                result += s[i]\n            i += 1\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    if not s:\n        return \"\"\n\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            prev_char = \"\"\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            for _ in range(count):\n                if i < len(s):\n                    char = s[i]\n                    if prev_char:\n                        result += char * count\n                    else:\n                        result += char\n                    prev_char = char\n                else:\n                    break\n        else:\n            if i < len(s):\n                result += s[i]\n            i += 1\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    if not s:\n        return \"\"\n\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            prev_char = \"\"\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            for _ in range(count):\n                if i < len(s):\n                    char = s[i]\n                    if prev_char:\n                        result += char * count\n                    else:\n                        result += char\n                    prev_char = char\n                else:\n                    break\n        else:\n            if i < len(s):\n                result += s[i]\n            i += 1\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    if not s:\n        return \"\"\n\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            prev_char = \"\"\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            for _ in range(count):\n                if i < len(s):\n                    char = s[i]\n                    if prev_char:\n                        result += char * count\n                    else:\n                        result += char\n                    prev_char = char\n                else:\n                    break\n        else:\n            if i < len(s):\n                result += s[i]\n            i += 1\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    if not s:\n        return \"\"\n\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            prev_char = \"\"\n            while i < len(s) and s[i].isdigit():\n                i += 1\n            for _ in range(count):\n                if i < len(s):\n                    char = s[i]\n                    if prev_char:\n                        result += char * count\n                    else:\n                        result += char\n                    prev_char = char\n                else:\n                    break\n        else:\n            if i < len(s):\n                result += s[i]\n            i += 1\n\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "logp": null
        }
    ],
    "1": [],
    "2": [],
    "3": []
}