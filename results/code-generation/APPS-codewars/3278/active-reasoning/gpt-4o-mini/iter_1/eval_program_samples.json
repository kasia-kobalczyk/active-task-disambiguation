{
    "0": {
        "0": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    count = 0\n    \n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            if count > 0:\n                result.append(char * count)\n                count = 0\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i + 1 < len(s) and s[i + 1].isalpha():\n                count = int(s[i])\n                char = s[i + 1]\n                result.append(char * count)\n                i += 2\n            else:\n                i += 1\n        elif s[i].isalpha():\n            result.append(s[i])\n            i += 1\n        else:\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    multiplier = 1\n    \n    for char in s:\n        if char.isdigit():\n            multiplier = max(1, int(char))  # Ensure we don't go below 1\n        else:\n            result.append(char * multiplier)\n            multiplier = 1  # Reset multiplier after using it\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n            last_num = 1  # Reset for the next character\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isdigit():\n                i += 1\n                continue\n            repeat_count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_num = 0\n\n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n            last_num = 1  # reset to 1 for next character if no number follows\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        if i > 0 and s[i - 1].isdigit():\n            count = int(s[i - 1])\n        else:\n            count = 1\n        result.append(s[i] * count)\n        i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    count = 0\n\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            if count == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * count)\n            count = 0\n        i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    multiplier = 1\n    \n    while i < len(s):\n        if s[i].isdigit():\n            multiplier = int(s[i])\n        else:\n            result.append(s[i] * multiplier)\n            multiplier = 1\n        i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_num = 1\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n            last_num = 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isalpha():\n                count = int(s[i])\n                j = i - 1\n                while j >= 0 and s[j].isalpha():\n                    result.append(s[j] * count)\n                    j -= 1\n            i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        if i > 0 and s[i - 1].isdigit():\n            count = int(s[i - 1])\n            result.append(s[i] * count)\n        else:\n            result.append(s[i])\n        i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    length = len(s)\n    current_count = 1\n    \n    while i < length:\n        if s[i].isdigit():\n            current_count = int(s[i]) if s[i] != '0' else 1\n            i += 1\n            continue\n        else:\n            result.append(s[i] * current_count)\n            current_count = 1\n        i += 1\n    \n    return ''.join(result)\n```"
        ],
        "1": [
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    prev_char = ''\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                prev_char = s[i]\n                i += 1\n        elif s[i].isalpha():\n            if prev_char != s[i]:\n                result.append(s[i])\n            prev_char = s[i]\n            i += 1\n        else:\n            i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_num = 0\n\n    for char in s:\n        if char.isdigit():\n            prev_num = int(char)\n        else:\n            if prev_num > 0:\n                result.append(char * prev_num)\n            else:\n                result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_num = 0\n\n    for char in s:\n        if char.isdigit():\n            prev_num = int(char)  # Update prev_num to the current digit\n        else:\n            if prev_num > 0:\n                result.append(char * prev_num)  # Repeat the char prev_num times\n            else:\n                result.append(char)  # If no number before, add the char as is\n\n    return ''.join(result)\n```"
        ],
        "2": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    prev_num = 0\n\n    while i < n:\n        if s[i].isdigit():\n            prev_num = int(s[i])\n            i += 1\n        elif s[i].isalpha():\n            result.append(s[i] * (prev_num if prev_num > 0 else 1))\n            i += 1\n        else:\n            i += 1  # Skip any non-alphanumeric characters\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                result.append(char)\n            else:\n                result.append(char * num)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    \n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                result.append(char)\n            else:\n                result.append(char * num)\n    \n    return ''.join(result)\n```"
        ],
        "3": [
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    expanded_string = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                expanded_string.append(s[i] * count)\n                i += 1\n        else:\n            expanded_string.append(s[i])\n            i += 1\n            \n    return ''.join(expanded_string)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i < len(s) - 1 and s[i + 1].isdigit():\n                i += 1\n                continue\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    n = len(s)\n    last_num = 1\n    \n    while i < n:\n        if s[i].isdigit():\n            last_num = int(s[i])\n            i += 1\n            continue\n        \n        if s[i].isalpha():\n            result.append(s[i] * last_num)\n        \n        i += 1\n    \n    return ''.join(result)\n```"
        ],
        "4": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n\n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```"
        ]
    },
    "1": {
        "0": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        if i > 0 and s[i-1].isdigit():\n            result.append(s[i] * int(s[i-1]))\n        else:\n            result.append(s[i])\n        i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    count = 0\n\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            if count == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * count)\n            count = 0\n        i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    multiplier = 1\n\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)  # Update the multiplier\n        else:\n            if multiplier > 0:\n                result.append(char * multiplier)  # Expand the character\n            multiplier = 1  # Reset multiplier for the next character\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_num = 1\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n            last_num = 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isalpha():\n                count = int(s[i])\n                j = i - 1\n                while j >= 0 and s[j].isalpha():\n                    result.append(s[j] * count)\n                    j -= 1\n            i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i - 1].isdigit():\n                i += 1\n                continue\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    length = len(s)\n    current_count = 1\n    \n    while i < length:\n        if s[i].isdigit():\n            current_count = int(s[i]) if s[i] != '0' else 1\n            i += 1\n        elif s[i].isalpha():\n            result.append(s[i] * current_count)\n            i += 1\n        else:\n            i += 1  # skip any non-alphanumeric characters\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isalpha():\n                repeat_count = int(s[i])\n                last_char = s[i-1]\n                result.append(last_char * (repeat_count - 1))\n            i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i + 1 < len(s) and s[i] == s[i + 1]:\n                i += 1\n                continue\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            repeat = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    prev_char = \"\"\n    count = 1\n\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            if count > 0:\n                result.append(char * count)\n            count = 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    current_multiplier = 0\n    \n    while i < len(s):\n        if s[i].isdigit():\n            current_multiplier = int(s[i])\n        else:\n            if current_multiplier > 0:\n                result.append(s[i] * current_multiplier)\n            else:\n                result.append(s[i])\n            current_multiplier = 0\n        i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_num = 1\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char) if int(char) > 0 else last_num\n        else:\n            result.append(char * last_num)\n            last_num = 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    multiplier = 1\n    \n    for char in s:\n        if char.isdigit():\n            multiplier = max(int(char), 1)\n        else:\n            result.append(char * multiplier)\n            multiplier = 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    prev_char = ''\n    count = 0\n\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            if count > 0:\n                result.append(char * count)\n            else:\n                result.append(char)\n            count = 0\n\n    return ''.join(result)\n```"
        ],
        "1": [
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    prev_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            prev_num = int(char)\n        elif char.isalpha():\n            result.append(char * prev_num)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    n = len(s)\n    current_number = 0\n\n    while i < n:\n        if s[i].isdigit():\n            current_number = int(s[i])\n            i += 1\n        elif s[i].isalpha():\n            if current_number == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * current_number)\n            i += 1\n        else:\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            prev_num = int(char)  # Update the previous number\n        else:\n            if prev_num > 0:\n                result.append(char * prev_num)  # Expand character by the previous number\n            else:\n                result.append(char)  # No expansion, add character as is\n                \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_num = 0\n\n    for char in s:\n        if char.isdigit():\n            prev_num = int(char)  # Update prev_num to the current digit\n        else:\n            if prev_num > 0:\n                result.append(char * prev_num)  # Repeat the char prev_num times\n            else:\n                result.append(char)  # If no number before, add the char as is\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    length = len(s)\n    while i < length:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < length and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    current_num = 0\n    \n    while i < len(s):\n        if s[i].isdigit():\n            current_num = int(s[i])\n            i += 1\n        elif s[i].isalpha():\n            if current_num == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * current_num)\n            i += 1\n        else:\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```"
        ],
        "2": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                result.append(char)\n            else:\n                result.append(char * num)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    \n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                result.append(char)\n            else:\n                result.append(char * num)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    length = len(s)\n    prev_char = ''\n    \n    while i < length:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * num)\n                prev_char = s[i]\n                i += 1\n        else:\n            if not prev_char or prev_char != s[i]:\n                result.append(s[i])\n            prev_char = s[i]\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    previous_char = ''\n    current_multiplier = 0\n\n    for char in s:\n        if char.isdigit():\n            current_multiplier = int(char)\n        else:\n            if current_multiplier > 0:\n                result.append(char * current_multiplier)\n            else:\n                if previous_char != char:\n                    result.append(char)\n            previous_char = char\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```"
        ],
        "3": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    expanded_string = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                expanded_string.append(s[i] * count)\n                i += 1\n        else:\n            expanded_string.append(s[i])\n            i += 1\n            \n    return ''.join(expanded_string)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            multiplier = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * multiplier)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```"
        ],
        "4": [
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n\n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    \n    while i < length:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```"
        ]
    },
    "2": {
        "0": [
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    repeat_count = 0\n    \n    for char in s:\n        if char.isdigit():\n            repeat_count = int(char)\n        else:\n            if repeat_count > 0:\n                result.append(char * repeat_count)\n            else:\n                result.append(char)\n            repeat_count = 0\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            else:\n                result.append(char)\n            num = 0\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isdigit():\n                i += 1\n                continue\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            repeat = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            i += 1\n            continue\n            \n        count = 1\n        if i > 0 and s[i - 1].isdigit():\n            count = int(s[i - 1])\n        \n        result.append(s[i] * count)\n        i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    current_num = 0\n    \n    while i < len(s):\n        if s[i].isdigit():\n            current_num = int(s[i])\n        else:\n            if current_num == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * current_num)\n            current_num = 0\n        i += 1\n        \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_num = 1\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char) if char != '0' else last_num\n        else:\n            result.append(char * last_num)\n            last_num = 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n                num = 0\n            else:\n                result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            else:\n                result.append(char)\n            num = 0\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        count = 1\n        if i > 0 and s[i-1].isdigit():\n            count = int(s[i-1])\n        result.append(s[i] * count)\n        i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    count = 0\n    \n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            if count > 0:\n                result.append(char * count)\n            else:\n                result.append(char)\n            count = 0\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    prev_char = \"\"\n    count = 0\n    \n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            if count == 0:\n                result.append(char)\n            else:\n                result.append(char * count)\n            count = 0\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    prev_char = ''\n    \n    for char in s:\n        if char.isdigit():\n            if prev_char and prev_char.isalpha():\n                count = int(char)\n                result.append(prev_char * (count - 1))\n            continue\n        else:\n            result.append(char)\n            prev_char = char\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    \n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        count = 1\n        if i > 0 and s[i-1].isdigit():\n            count = int(s[i-1])\n        result.append(s[i] * count)\n        i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        if i > 0 and s[i-1].isdigit():\n            count = int(s[i-1])\n            result.append(s[i] * count)\n        else:\n            result.append(s[i])\n        i += 1\n    return ''.join(result)\n```"
        ],
        "1": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    previous_char = ''\n    previous_num = 1\n    \n    for char in s:\n        if char.isdigit():\n            previous_num = int(char)\n        else:\n            if previous_char != char:\n                result.append(char * previous_num)\n                previous_char = char\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)  # update last_num with the current digit\n        else:\n            if last_num > 0:\n                result.append(char * last_num)  # repeat the character last_num times\n            else:\n                result.append(char)  # append the character without repetition\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    num = 0\n\n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                result.append(char)\n            else:\n                result.append(char * num)\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    expanded_string = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                expanded_string += s[i] * num\n                i += 1\n        else:\n            expanded_string += s[i]\n            i += 1\n            \n    return expanded_string\n```"
        ],
        "2": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    prev_num = 0\n\n    while i < n:\n        if s[i].isdigit():\n            prev_num = int(s[i])\n            i += 1\n        elif s[i].isalpha():\n            result.append(s[i] * (prev_num if prev_num > 0 else 1))\n            i += 1\n        else:\n            i += 1  # Skip any non-alphanumeric characters\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    \n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                result.append(char)\n            else:\n                result.append(char * num)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    length = len(s)\n    prev_char = ''\n    \n    while i < length:\n        if s[i].isdigit():\n            multiplier = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * multiplier)\n                prev_char = s[i]\n                i += 1\n        else:\n            if prev_char != s[i]:\n                result.append(s[i])\n            prev_char = s[i]\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    previous_char = ''\n    current_multiplier = 0\n\n    for char in s:\n        if char.isdigit():\n            current_multiplier = int(char)\n        else:\n            if current_multiplier > 0:\n                result.append(char * current_multiplier)\n            else:\n                if previous_char != char:\n                    result.append(char)\n            previous_char = char\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```"
        ],
        "3": [
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    expanded_string = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                expanded_string.append(s[i] * count)\n                i += 1\n        else:\n            expanded_string.append(s[i])\n            i += 1\n            \n    return ''.join(expanded_string)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    n = len(s)\n    last_num = 1\n    \n    while i < n:\n        if s[i].isdigit():\n            last_num = int(s[i])\n            i += 1\n            continue\n        \n        if s[i].isalpha():\n            result.append(s[i] * last_num)\n        \n        i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            multiplier = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * multiplier)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    n = len(s)\n    last_number = 1  # Default multiplier if no number is found\n    \n    while i < n:\n        if s[i].isdigit():\n            last_number = int(s[i])  # Update multiplier\n            i += 1\n        elif s[i].isalpha():\n            result.append(s[i] * last_number)  # Repeat character\n            i += 1\n        else:\n            i += 1  # Ignore any other characters if present\n            \n    return ''.join(result)\n```"
        ],
        "4": [
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    \n    while i < length:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    num = 0\n\n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                continue\n            result.append(char * num)\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```"
        ]
    }
}