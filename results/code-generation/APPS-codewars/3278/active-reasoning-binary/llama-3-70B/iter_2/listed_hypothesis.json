{
    "0": [
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count:\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    multiplier = ''\n    for char in s:\n        if char.isalpha():\n            if multiplier:\n                result += char * int(multiplier)\n                multiplier = ''\n            else:\n                result += char\n        else:\n            multiplier += char\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            result += s[j] * count\n            i = j + 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        else:\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            if count:\n                result += result[-1] * (int(count) - 1)\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            j = i\n            while j < len(s) and s[j].isdigit():\n                j += 1\n            count = int(s[i:j])\n            result += s[j]*count\n            i = j + 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    num_str = ''\n    for char in s:\n        if char.isdigit():\n            num_str += char\n        else:\n            if num_str:\n                result += char * int(num_str)\n                num_str = ''\n            else:\n                result += char\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        elif s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            if i < len(s) and s[i].isalpha():\n                result += s[i] * int(count)\n            else:\n                i -= 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    multiplier = \"\"\n    for char in s:\n        if char.isdigit():\n            multiplier += char\n        else:\n            if multiplier:\n                result += char * int(multiplier)\n                multiplier = \"\"\n            else:\n                result += char\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    num = \"\"\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num != \"\":\n                result += char * int(num)\n                num = \"\"\n            else:\n                result += char\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result += s[i]\n            i += 1\n        else:\n            count = \"\"\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            if count:\n                result += result[-1] * int(count[0])\n    return result",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result.append(s[i])\n            i += 1\n        elif s[i].isdigit():\n            count = int(s[i])\n            j = i + 1\n            while j < len(s) and s[j].isalpha():\n                result.extend([s[j]] * count)\n                j += 1\n            i = j\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = []\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result.extend([char] * multiplier)\n            multiplier = 1\n    return ''.join(result)",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result.append(s[i])\n            i += 1\n        elif s[i].isdigit():\n            count = int(s[i])\n            j = i + 1\n            while j < len(s) and s[j].isalpha():\n                result.extend([s[j]] * count)\n                j += 1\n            i = j\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = []\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result.extend([char] * multiplier)\n            multiplier = 1\n    return ''.join(result)",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            result.append(s[i])\n            i += 1\n        elif s[i].isdigit():\n            count = int(s[i])\n            j = i + 1\n            while j < len(s) and s[j].isalpha():\n                result.extend([s[j]] * count)\n                j += 1\n            i = j\n    return ''.join(result)",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = []\n    multiplier = 1\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)\n        else:\n            result.extend([char] * multiplier)\n            multiplier = 1\n    return ''.join(result)",
            "logp": null
        }
    ]
}