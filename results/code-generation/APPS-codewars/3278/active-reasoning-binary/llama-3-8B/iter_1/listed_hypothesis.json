{
    "0": [
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        num = ''\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = ''\n            while i >= 0 and not s[i].isalpha():\n                i -= 1\n            if i >= 0:\n                char = s[i]\n                i -= 1\n                while num > 0:\n                    result += char\n                    num -= 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isalpha():\n            if count:\n                result += count * (len(count) == 1 and int(count) or 1) * char\n                count = ''\n            else:\n                result += char\n        else:\n            count += char\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() if s[i+1].isalpha() else s[i+1].lower()\n            while count > 1:\n                result += result[-1]\n                count -= 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            if i + 1 < len(s) and s[i+1].isdigit():\n                i += 1\n            i += 1\n            prev = ''\n            while i < len(s) and s[i].isalpha():\n                prev += s[i]\n                i += 1\n            result += prev * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        },
        {
            "content": "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                for i in range(int(count)):\n                    result += char\n                count = ''\n            else:\n                result += char\n    return result",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            temp = ''\n            while i < len(s) and s[i].isalpha():\n                temp += s[i]\n                i += 1\n            result += temp * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            if i + 1 < len(s) and s[i+1].isdigit():\n                i += 1\n            i += 1\n            prev = ''\n            while i < len(s) and s[i].isalpha():\n                prev += s[i]\n                i += 1\n            result += prev * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "logp": null
        }
    ]
}