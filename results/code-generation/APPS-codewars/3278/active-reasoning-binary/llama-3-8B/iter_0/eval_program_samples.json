{
    "0": {
        "0": [
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "1": [
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            char = s[i]\n            i += 1\n            result += char * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            if i + 1 < len(s) and s[i+1].isdigit():\n                i += 1\n            i += 1\n            prev = ''\n            while i < len(s) and s[i].isalpha():\n                prev += s[i]\n                i += 1\n            result += prev * count\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "2": [
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() if s[i+1].isalpha() else s[i+1].lower()\n            while count > 1:\n                result += result[-1]\n                count -= 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            if i + 1 < len(s) and s[i+1].isdigit():\n                i += 1\n            i += 1\n            prev = ''\n            while i < len(s) and s[i].isalpha():\n                prev += s[i]\n                i += 1\n            result += prev * count\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "3": [
            "def string_expansion(s):\n    if not s:\n        return ''\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            i -= 1\n            j = 1\n            while j <= int(count):\n                result += s[i].lower()\n                if s[i].isupper():\n                    result += s[i].upper()\n                i += 1\n                j += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            result += s[i - len(count)] * int(count)\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isdigit():\n                i += 1\n            result += s[i-1] * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            temp = ''\n            while i < len(s) and s[i].isalpha():\n                temp += s[i]\n                i += 1\n            result += temp * count\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ],
        "4": [
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            result += s[i - len(count)] * int(count)\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isdigit():\n                i += 1\n            result += s[i-1] * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            temp = ''\n            while i < len(s) and s[i].isalpha():\n                temp += s[i]\n                i += 1\n            result += temp * count\n        else:\n            result += s[i]\n            i += 1\n    return result"
        ]
    },
    "1": {
        "0": [
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result"
        ],
        "1": [
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        num = \"\"\n        while i < len(s) and s[i].isdigit():\n            num += s[i]\n            i += 1\n        if num:\n            num = int(num)\n            i -= 1\n            char = s[i]\n            result += char * num\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            if i + 1 < len(s) and s[i+1].isdigit():\n                i += 1\n            i += 1\n            prev = ''\n            while i < len(s) and s[i].isalpha():\n                prev += s[i]\n                i += 1\n            result += prev * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                for i in range(int(count)):\n                    result += char\n                count = ''\n            else:\n                result += char\n    return result"
        ],
        "2": [
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isalpha():\n            if count:\n                result += count * (len(count) == 1 and 1 or int(count))\n                count = ''\n            result += char\n        else:\n            count += char\n    if count:\n        result += count * (len(count) == 1 and 1 or int(count))\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() if s[i+1].isalpha() else s[i+1]\n            for _ in range(count - 1):\n                result += s[i+1].upper() if s[i+1].isalpha() else s[i+1]\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            if i + 1 < len(s) and s[i+1].isdigit():\n                i += 1\n            i += 1\n            prev = ''\n            while i < len(s) and s[i].isalpha():\n                prev += s[i]\n                i += 1\n            result += prev * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                for _ in range(int(count)):\n                    result += char\n                count = ''\n            else:\n                result += char\n    return result"
        ],
        "3": [
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            result += s[i - len(count)] * int(count)\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() if s[i+1].isalpha() else s[i+1].lower()\n            while count > 1:\n                result += result[-1]\n                count -= 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            temp = ''\n            while i < len(s) and s[i].isalpha():\n                temp += s[i]\n                i += 1\n            result += temp * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result"
        ],
        "4": [
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = ''\n            while i < len(s) and s[i].isdigit():\n                count += s[i]\n                i += 1\n            result += s[i - len(count)] * int(count)\n            i += 1\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isdigit():\n                i += 1\n            result += s[i-1] * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            temp = ''\n            while i < len(s) and s[i].isalpha():\n                temp += s[i]\n                i += 1\n            result += temp * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result"
        ]
    },
    "2": {
        "0": [
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result"
        ],
        "1": [
            "def string_expansion(s):\n    result = ''\n    temp = ''\n    for char in s:\n        if char.isalpha():\n            if temp:\n                result += temp * int(temp)\n                temp = ''\n            result += char\n        elif char.isdigit():\n            temp += char\n        elif temp:\n            result += temp * int(temp)\n            temp = ''\n    if temp:\n        result += temp * int(temp)\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() * count\n            i += 1\n        else:\n            result += s[i].upper()\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            if i + 1 < len(s) and s[i+1].isdigit():\n                i += 1\n            i += 1\n            prev = ''\n            while i < len(s) and s[i].isalpha():\n                prev += s[i]\n                i += 1\n            result += prev * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                for _ in range(int(count)):\n                    result += char\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    num = \"\"\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = \"\"\n            else:\n                result += char\n    return result"
        ],
        "2": [
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = 0\n            while i < len(s) and s[i].isdigit():\n                count = count * 10 + int(s[i])\n                i += 1\n            i -= 1\n            result += s[i+1].upper() if s[i+1].isalpha() else s[i+1]\n            for _ in range(count - 1):\n                result += s[i+1].upper() if s[i+1].isalpha() else s[i+1]\n            i += 1\n        else:\n            result += s[i]\n        i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                for _ in range(int(count)):\n                    result += char\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = ''\n            else:\n                result += char\n    return result"
        ],
        "3": [
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isdigit():\n                i += 1\n            result += s[i-1] * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            temp = ''\n            while i < len(s) and s[i].isalpha():\n                temp += s[i]\n                i += 1\n            result += temp * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = ''\n            else:\n                result += char\n    return result"
        ],
        "4": [
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                result += char * int(count)\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = \"\"\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            if i < len(s) and s[i].isdigit():\n                i += 1\n            result += s[i-1] * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            temp = ''\n            while i < len(s) and s[i].isalpha():\n                temp += s[i]\n                i += 1\n            result += temp * count\n        else:\n            result += s[i]\n            i += 1\n    return result",
            "def string_expansion(s):\n    result = ''\n    count = ''\n    for char in s:\n        if char.isdigit():\n            count += char\n        else:\n            if count != '':\n                for i in range(int(count)):\n                    result += char\n                count = ''\n            else:\n                result += char\n    return result",
            "def string_expansion(s):\n    result = ''\n    num = ''\n    for char in s:\n        if char.isdigit():\n            num += char\n        else:\n            if num:\n                result += char * int(num)\n                num = ''\n            else:\n                result += char\n    return result"
        ]
    }
}