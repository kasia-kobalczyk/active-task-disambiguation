{
    "0": [
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        if i > 0 and s[i - 1].isdigit():\n            count = int(s[i - 1])\n        else:\n            count = 1\n        result.append(s[i] * count)\n        i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    repeat_count = 0\n\n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n        else:\n            if repeat_count == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * repeat_count)\n            repeat_count = 0\n        i += 1\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    count = 0\n\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            if count == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * count)\n            count = 0\n        i += 1\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    multiplier = 1\n\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char) if multiplier == 1 else multiplier\n        else:\n            result.append(char * multiplier)\n            multiplier = 1\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    repeat_count = 0\n    \n    for char in s:\n        if char.isdigit():\n            repeat_count = int(char)\n        else:\n            if repeat_count > 0:\n                result.append(char * repeat_count)\n            else:\n                result.append(char)\n            repeat_count = 0\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isalpha():\n                repeat_count = int(s[i])\n                last_char = s[i-1]\n                result.append(last_char * (repeat_count - 1))\n            i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i + 1 < len(s) and s[i + 1].isalpha():\n                count = int(s[i])\n                result.append(s[i + 1] * count)\n                i += 2\n            else:\n                i += 1\n        elif s[i].isalpha():\n            result.append(s[i])\n            i += 1\n        else:\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            repeat = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            i += 1\n            continue\n            \n        count = 1\n        if i > 0 and s[i - 1].isdigit():\n            count = int(s[i - 1])\n        \n        result.append(s[i] * count)\n        i += 1\n    \n    return ''.join(result)\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    previous_char = ''\n    previous_num = 1\n    \n    for char in s:\n        if char.isdigit():\n            previous_num = int(char)\n        else:\n            if previous_char != char:\n                result.append(char * previous_num)\n                previous_char = char\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i + 1 < len(s) and s[i + 1].isdigit():\n                i += 1  # Skip the second digit\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    n = len(s)\n    repeat_count = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            if repeat_count == 0:\n                continue\n        else:\n            if repeat_count > 0:\n                result.append(s[i] * repeat_count)\n            else:\n                result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    length = len(s)\n    prev_char = ''\n    \n    while i < length:\n        if s[i].isdigit():\n            multiplier = int(s[i])\n            i += 1\n            while i < length and s[i].isalpha():\n                result.append(s[i] * multiplier)\n                prev_char = s[i]\n                i += 1\n        elif s[i].isalpha():\n            if prev_char == '' or not prev_char.isdigit():\n                result.append(s[i])\n            prev_char = s[i]\n            i += 1\n        else:\n            i += 1  # Skip any other characters (not expected in this problem)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        }
    ]
}