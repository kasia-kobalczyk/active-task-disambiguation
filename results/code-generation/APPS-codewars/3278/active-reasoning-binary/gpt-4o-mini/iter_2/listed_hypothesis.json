{
    "0": [
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isalpha():\n                repeat_count = int(s[i])\n                last_char = s[i-1]\n                result.append(last_char * (repeat_count - 1))\n            i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i + 1 < len(s) and s[i] == s[i + 1]:\n                i += 1\n                continue\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            repeat = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    prev_char = \"\"\n    count = 1\n\n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            if count > 0:\n                result.append(char * count)\n            count = 1\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        count = 1\n        if i > 0 and s[i-1].isdigit():\n            count = int(s[i-1])\n        result.append(s[i] * count)\n        i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    num = 1\n\n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            num = 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    prev_char = \"\"\n    count = 0\n    \n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            if count == 0:\n                result.append(char)\n            else:\n                result.append(char * count)\n            count = 0\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    num = 0\n\n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                result.append(char)\n            else:\n                result.append(char * num)\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    length = len(s)\n    while i < length:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < length and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    last_multiplier = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_multiplier = int(char)\n        else:\n            if last_multiplier > 0:\n                result.append(char * last_multiplier)\n            else:\n                result.append(char)\n                \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num == 0:\n                result.append(char)\n            else:\n                result.append(char * num)\n                \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            if last_num > 0:\n                result.append(char * last_num)\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    num = 0\n    \n    while i < length:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n        else:\n            if num == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * num)\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        elif char.isalpha():\n            result.append(char * last_num)\n    \n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "logp": null
        }
    ]
}