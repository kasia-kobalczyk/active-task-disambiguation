{
    "0": {
        "0": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    count = 0\n    \n    for char in s:\n        if char.isdigit():\n            count = int(char)\n        else:\n            if count > 0:\n                result.append(char * count)\n                count = 0\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i + 1 < len(s) and s[i + 1].isdigit():\n                i += 1\n                continue\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    multiplier = 1\n    \n    for char in s:\n        if char.isdigit():\n            multiplier = max(multiplier, int(char))  # Update multiplier but ignore consecutive digits\n        else:\n            result.append(char * multiplier)  # Expand the character\n            multiplier = 1  # Reset multiplier after using it\n            prev_char = char\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n            last_num = 1  # Reset for the next character\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isdigit():\n                i += 1\n                continue\n            repeat_count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_num = 0\n\n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n            last_num = 1  # reset to 1 for next character if no number follows\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            i += 1\n            continue\n        if i > 0 and s[i - 1].isdigit():\n            count = int(s[i - 1])\n        else:\n            count = 1\n        result.append(s[i] * count)\n        i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    multiplier = 0\n\n    while i < n:\n        if s[i].isdigit():\n            multiplier = int(s[i])\n        else:\n            if multiplier == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * multiplier)\n            multiplier = 0\n        i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    count = 0\n\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n        else:\n            if count == 0:\n                result.append(s[i])\n            else:\n                result.append(s[i] * count)\n            count = 0\n        i += 1\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_char = ''\n    multiplier = 1\n\n    for char in s:\n        if char.isdigit():\n            multiplier = int(char)  # Update the multiplier\n        else:\n            if multiplier > 0:\n                result.append(char * multiplier)  # Expand the character\n            multiplier = 1  # Reset multiplier for the next character\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_num = 1\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)\n        else:\n            result.append(char * last_num)\n            last_num = 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isalpha():\n                count = int(s[i])\n                j = i - 1\n                while j >= 0 and s[j].isalpha():\n                    result.append(s[j] * count)\n                    j -= 1\n            i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i - 1].isdigit():\n                i += 1\n                continue\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    length = len(s)\n    current_count = 1\n    \n    while i < length:\n        if s[i].isdigit():\n            current_count = int(s[i])\n        else:\n            result.append(s[i] * current_count)\n            current_count = 1  # Reset count after using it\n        i += 1\n    \n    return ''.join(result)\n```"
        ],
        "1": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            else:\n                result.append(char)\n                \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    length = len(s)\n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    length = len(s)\n    while i < length:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < length and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_number = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_number = int(char)\n        else:\n            if last_number > 0:\n                result.append(char * last_number)\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isdigit():\n                i += 1\n                continue\n            repeat_count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    last_number = 0\n\n    for char in s:\n        if char.isdigit():\n            last_number = int(char)\n        else:\n            if last_number > 0:\n                result.append(char * last_number)\n            else:\n                result.append(char)\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    prev_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            prev_num = int(char)\n        else:\n            if prev_num > 0:\n                result.append(char * prev_num)\n            else:\n                result.append(char)\n                \n    return ''.join(result)\n```"
        ],
        "2": [
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isdigit():\n                i += 1\n                continue\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            repeat_count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * repeat_count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    i = 0\n    n = len(s)\n    prev_num = 0\n\n    while i < n:\n        if s[i].isdigit():\n            prev_num = int(s[i])\n            i += 1\n        elif s[i].isalpha():\n            result.append(s[i] * (prev_num if prev_num > 0 else 1))\n            i += 1\n        else:\n            i += 1  # Skip any non-alphanumeric characters\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    num = 0\n    \n    for char in s:\n        if char.isdigit():\n            num = int(char)\n        else:\n            if num > 0:\n                result.append(char * num)\n            else:\n                result.append(char)\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            if i > 0 and s[i-1].isdigit():\n                i += 1\n                continue\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```"
        ],
        "3": [
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)  # Update the last numeric value\n        else:\n            if last_num > 0:\n                result.append(char * last_num)  # Repeat char last_num times\n            else:\n                result.append(char)  # Append char as it is if no last_num\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n            \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    last_num = 0\n\n    for char in s:\n        if char.isdigit():\n            last_num = int(char)  # Update last_num to the current digit\n        else:\n            if last_num > 0:\n                result.append(char * last_num)  # Repeat the character last_num times\n            else:\n                result.append(char)  # Just add the character if no number precedes it\n\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            num = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * num)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    \n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i].isdigit():\n            multiplier = int(s[i])\n            i += 1\n            while i < n and not s[i].isdigit():\n                result.append(s[i] * multiplier)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return \"\"\n    \n    result = []\n    last_num = 0\n    \n    for char in s:\n        if char.isdigit():\n            last_num = int(char)  # Update the last_num if current char is digit\n        else:\n            if last_num > 0:\n                result.append(char * last_num)  # Repeat the char last_num times\n            else:\n                result.append(char)  # Just append the char if no number found before\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < n and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    if not s:\n        return ''\n    \n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and not s[i].isdigit():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    \n    return ''.join(result)\n```",
            "```python\ndef string_expansion(s):\n    result = []\n    i = 0\n    while i < len(s):\n        if s[i].isdigit():\n            count = int(s[i])\n            i += 1\n            while i < len(s) and s[i].isalpha():\n                result.append(s[i] * count)\n                i += 1\n        else:\n            result.append(s[i])\n            i += 1\n    return ''.join(result)\n```"
        ]
    }
}