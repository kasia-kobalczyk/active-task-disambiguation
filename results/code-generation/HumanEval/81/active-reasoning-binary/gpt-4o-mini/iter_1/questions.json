{
    "0": [
        "assert numerical_letter_grade([2.5, 1.5, 0.0]) == ['B', 'C-', 'E']",
        "assert numerical_letter_grade([4.0]) == ['A+']",
        "assert numerical_letter_grade([3.1, 1.8, 0.3]) == ['B+', 'C', 'D-']",
        "assert numerical_letter_grade([3.8, 3.5, 2.5]) == ['A', 'A-', 'B']",
        "assert numerical_letter_grade([3.4]) == ['A-']",
        "assert numerical_letter_grade([2.0, 1.5, 0.0]) == ['C+', 'D+', 'E']",
        "assert numerical_letter_grade([3.8]) == ['A']"
    ],
    "1": [
        "assert numerical_letter_grade([3.4, 2.8, 1.6, 0.0]) == ['A-', 'B', 'C-', 'E']",
        "assert numerical_letter_grade([3.1, 2.9, 1.5, 0.1]) == ['B+', 'C+', 'C-', 'D-']",
        "assert numerical_letter_grade([1.5, 2.2, 0.0]) == ['D+', 'C-', 'E']",
        "assert numerical_letter_grade([3.7, 2.5, 1.0, 0.1]) == ['A', 'B', 'D+', 'D-']",
        "assert numerical_letter_grade([4.0]) == ['A+']",
        "assert numerical_letter_grade([3.8, 3.1, 2.9]) == ['A', 'B+', 'B']",
        "assert numerical_letter_grade([3.8, 2.5, 1.0]) == ['A', 'B', 'D+']"
    ],
    "2": [
        "assert numerical_letter_grade([3.0, 1.0, 0.5, 3.9]) == ['B+', 'D+', 'D-', 'A']",
        "assert numerical_letter_grade([4.0, 3.8, 3.5, 2.2]) == ['A+', 'A', 'A-', 'B-']",
        "assert numerical_letter_grade([1.5, 2.9, 3.3, 4.0]) == ['D+', 'B+', 'A-', 'A+']",
        "assert numerical_letter_grade([4.0, 3.9, 2.5, 1.0]) == ['A+', 'A', 'C+', 'D+']",
        "assert numerical_letter_grade([2.9, 1.7, 3.1, 2.6]) == ['B+', 'C', 'B+', 'B']",
        "assert numerical_letter_grade([3.2, 2.1, 0.5, 3.8]) == ['B+', 'C+', 'E', 'A']",
        "assert numerical_letter_grade([0.0, 2.3, 4.0, 3.2]) == ['E', 'B-', 'A+', 'B+']",
        "assert numerical_letter_grade([2.7, 3.5, 1.8, 0.0]) == ['B', 'A', 'C', 'E']"
    ],
    "3": [
        "assert numerical_letter_grade([0.0, 2.5, 4.0, 1.2]) == ['E', 'C+', 'A+', 'C-']",
        "assert numerical_letter_grade([1.5, 2.9, 3.3, 4.0]) == ['D+', 'B+', 'A-', 'A+']",
        "assert numerical_letter_grade([4.0, 3.8, 3.5, 2.2]) == ['A+', 'A', 'A-', 'B-']",
        "assert numerical_letter_grade([4.0, 3.9, 2.5, 1.0]) == ['A+', 'A', 'C+', 'D+']",
        "assert numerical_letter_grade([2.9, 1.7, 3.1, 2.4]) == ['B+', 'C', 'B+', 'B-']",
        "assert numerical_letter_grade([3.2, 2.1, 0.5, 3.8]) == ['B+', 'C+', 'E', 'A']",
        "assert numerical_letter_grade([2.7, 3.5, 1.8, 0.0]) == ['B', 'A', 'C', 'E']"
    ]
}