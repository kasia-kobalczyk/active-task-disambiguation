{
    "0": {
        "0": [
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[-1]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        for i in range(2, n + 1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_prev = 0\n        fib_curr = 1\n        for i in range(2, n+1):\n            fib_next = fib_prev + fib_curr\n            fib_prev = fib_curr\n            fib_curr = fib_next\n        return fib_curr",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n-1]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return \"Please enter a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[-1]",
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n-1]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for _ in range(3, n+1):\n            fib_n = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n\n    Parameters:\n    n (int): The position of the Fibonacci number to be returned.\n\n    Returns:\n    int: The n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        fib1 = 1\n        fib2 = 1\n        for i in range(3, n+1):\n            fib1, fib2 = fib2, fib1 + fib2\n        return fib2",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    \n    fib_1 = 0\n    fib_2 = 1\n    \n    for i in range(3, n+1):\n        fib_n = fib_1 + fib_2\n        fib_1 = fib_2\n        fib_2 = fib_n\n    \n    return fib_2",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input. n must be a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        while len(fib_seq) < n:\n            next_num = fib_seq[-1] + fib_seq[-2]\n            fib_seq.append(next_num)\n        return fib_seq[-1]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]"
        ],
        "1": [
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b\n\nassert fib(0) == 0",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    \n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for _ in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n    \n    assert fib(0) == 0\n    assert fib(1) == 1\n    assert fib(2) == 1\n    assert fib(3) == 2\n    assert fib(4) == 3\n    \n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a+b\n        return b\n    \nassert fib(0) == 0\nassert fib(1) == 1\nassert fib(2) == 1\nassert fib(3) == 2\nassert fib(4) == 3\nassert fib(5) == 5\nassert fib(6) == 8\nassert fib(7) == 13\nassert fib(8) == 21\nassert fib(9) == 34\nassert fib(10) == 55\nassert fib(11) == 89\nassert fib(12) == 144\nassert fib(13) == 233\nassert fib(14) == 377\nassert fib(15) == 610\nassert fib(16) == 987\nassert fib(17) == 1597\nassert fib(18) == 2584\nassert fib(19) == 4181\nassert fib(20) == 6765\nassert fib(21) == 10946\nassert fib(22) == 17711\nassert fib(23) == 28657\nassert fib(24) == 46368\nassert fib(25) == 75025\nassert fib(26) == 121393\nassert fib(27) == 196418\nassert fib(28) == 317811\nassert fib(29) == 514229\nassert fib(30) == 832040",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        for i in range(2, n+1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for i in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]"
        ],
        "2": [
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_prev = 0\n        fib_current = 1\n        for _ in range(2, n+1):\n            fib_next = fib_prev + fib_current\n            fib_prev = fib_current\n            fib_current = fib_next\n        return fib_current",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for i in range(2, n+1):\n            fib_i = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_i\n        return fib_i",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)"
        ],
        "3": [
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_prev = 0\n        fib_current = 1\n        for _ in range(2, n+1):\n            fib_next = fib_prev + fib_current\n            fib_prev = fib_current\n            fib_current = fib_next\n        return fib_current",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for i in range(2, n+1):\n            fib_i = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_i\n        return fib_i",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)"
        ],
        "4": [
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_prev = 0\n        fib_current = 1\n        for _ in range(2, n+1):\n            fib_next = fib_prev + fib_current\n            fib_prev = fib_current\n            fib_current = fib_next\n        return fib_current",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for i in range(2, n+1):\n            fib_i = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_i\n        return fib_i",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)"
        ]
    },
    "1": {
        "0": [
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for _ in range(3, n+1):\n            fib_n = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n\n    Parameters:\n    n (int): The position of the Fibonacci number to be returned.\n\n    Returns:\n    int: The n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Input must be a positive integer.\"\n\n    if n == 1:\n        return 0\n\n    if n == 2:\n        return 1\n\n    fib_minus_2 = 0\n    fib_minus_1 = 1\n\n    for i in range(3, n+1):\n        fib_current = fib_minus_2 + fib_minus_1\n        fib_minus_2 = fib_minus_1\n        fib_minus_1 = fib_current\n\n    return fib_minus_1",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    \n    fib_1 = 0\n    fib_2 = 1\n    \n    for i in range(3, n+1):\n        fib_n = fib_1 + fib_2\n        fib_1 = fib_2\n        fib_2 = fib_n\n    \n    return fib_2",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input. n must be a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        while len(fib_seq) < n:\n            next_num = fib_seq[-1] + fib_seq[-2]\n            fib_seq.append(next_num)\n        return fib_seq[-1]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-2):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for _ in range(2, n+1):\n            fib_n = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n\n    Arguments:\n    n -- the position of the Fibonacci number to be returned\n\n    Returns:\n    the n-th Fibonacci number\n\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_minus_1 = 1\n        fib_minus_2 = 0\n        for i in range(3, n+1):\n            fib_current = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_current\n        return fib_current",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input. Please provide a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(3, n+1):\n            fib1, fib2 = fib2, fib1 + fib2\n        return fib2",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    fib_n_minus_2 = 0\n    fib_n_minus_1 = 1\n    fib_n = 0\n    for _ in range(3, n+1):\n        fib_n = fib_n_minus_2 + fib_n_minus_1\n        fib_n_minus_2 = fib_n_minus_1\n        fib_n_minus_1 = fib_n\n    return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input. Please enter a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for _ in range(2, n):\n            fib_0, fib_1 = fib_1, fib_0 + fib_1\n        return fib_1",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    fib_nums = [0, 1]\n    for i in range(2, n):\n        fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n    return fib_nums[n-1]"
        ],
        "1": [
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n    \n    assert fib(0) == 0\n    assert fib(1) == 1\n    assert fib(2) == 1\n    assert fib(3) == 2\n    assert fib(4) == 3\n    \n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a+b\n        return b\n    \nassert fib(0) == 0\nassert fib(1) == 1\nassert fib(2) == 1\nassert fib(3) == 2\nassert fib(4) == 3\nassert fib(5) == 5\nassert fib(6) == 8\nassert fib(7) == 13\nassert fib(8) == 21\nassert fib(9) == 34\nassert fib(10) == 55\nassert fib(11) == 89\nassert fib(12) == 144\nassert fib(13) == 233\nassert fib(14) == 377\nassert fib(15) == 610\nassert fib(16) == 987\nassert fib(17) == 1597\nassert fib(18) == 2584\nassert fib(19) == 4181\nassert fib(20) == 6765\nassert fib(21) == 10946\nassert fib(22) == 17711\nassert fib(23) == 28657\nassert fib(24) == 46368\nassert fib(25) == 75025\nassert fib(26) == 121393\nassert fib(27) == 196418\nassert fib(28) == 317811\nassert fib(29) == 514229\nassert fib(30) == 832040",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        for i in range(2, n+1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for i in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_2 = 0\n        fib_n_minus_1 = 1\n        for _ in range(2, n+1):\n            fib_n = fib_n_minus_2 + fib_n_minus_1\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b\n    \nassert fib(0) == 0",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n\n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_minus_2 = 0\n        fib_minus_1 = 1\n        fib_n = 0\n        for i in range(2, n+1):\n            fib_n = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for _ in range(2, n+1):\n            fib = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib\n        return fib"
        ],
        "2": [
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for i in range(2, n+1):\n            fib_i = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_i\n        return fib_i",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n\n    if n <= 1:\n        return n\n    \n    fib_sequence = [0, 1]\n    \n    for i in range(2, n+1):\n        fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n    \n    return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_minus_2 = 0\n        fib_minus_1 = 1\n        fib_n = 0\n        for i in range(2, n+1):\n            fib_n = fib_minus_2 + fib_minus_1\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(2, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    \n    a = 0\n    b = 1\n    \n    for i in range(2, n+1):\n        c = a + b\n        a = b\n        b = c\n    \n    return b"
        ],
        "3": [
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for i in range(2, n+1):\n            fib_i = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_i\n        return fib_i",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n\n    if n <= 1:\n        return n\n    \n    fib_sequence = [0, 1]\n    \n    for i in range(2, n+1):\n        fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n    \n    return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_minus_2 = 0\n        fib_minus_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(2, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    \n    a = 0\n    b = 1\n    \n    for i in range(2, n+1):\n        c = a + b\n        a = b\n        b = c\n    \n    return b"
        ],
        "4": [
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for i in range(2, n+1):\n            fib_i = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_i\n        return fib_i",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n\n    if n <= 1:\n        return n\n    \n    fib_sequence = [0, 1]\n    \n    for i in range(2, n+1):\n        fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n    \n    return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_minus_2 = 0\n        fib_minus_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(2, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    \n    a = 0\n    b = 1\n    \n    for i in range(2, n+1):\n        c = a + b\n        a = b\n        b = c\n    \n    return b"
        ]
    },
    "2": {
        "0": [
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-2):\n            a, b = b, a+b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for _ in range(2, n+1):\n            fib_n = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n\n    Arguments:\n    n -- the position of the Fibonacci number to be returned\n\n    Returns:\n    the n-th Fibonacci number\n\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_minus_1 = 1\n        fib_minus_2 = 0\n        for i in range(3, n+1):\n            fib_current = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_current\n        return fib_current",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input. Please provide a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(3, n+1):\n            fib1, fib2 = fib2, fib1 + fib2\n        return fib2",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    fib_n_minus_2 = 0\n    fib_n_minus_1 = 1\n    fib_n = 0\n    for _ in range(3, n+1):\n        fib_n = fib_n_minus_2 + fib_n_minus_1\n        fib_n_minus_2 = fib_n_minus_1\n        fib_n_minus_1 = fib_n\n    return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input. Please enter a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for _ in range(2, n):\n            fib_0, fib_1 = fib_1, fib_0 + fib_1\n        return fib_1",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    fib_nums = [0, 1]\n    for i in range(2, n):\n        fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n    return fib_nums[n-1]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[-1]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[-1]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-2):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Input must be a positive integer\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[-1]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        fib_n = 0\n        for i in range(2, n+1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return None\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n\n    prev1 = 0\n    prev2 = 1\n    result = None\n\n    for i in range(2, n):\n        result = prev1 + prev2\n        prev1 = prev2\n        prev2 = result\n\n    return result",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return \"Invalid input\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for i in range(3, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b"
        ],
        "1": [
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_2 = 0\n        fib_n_minus_1 = 1\n        for _ in range(2, n+1):\n            fib_n = fib_n_minus_2 + fib_n_minus_1\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        fib_nums = [0, 1]\n        for i in range(2, n+1):\n            fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        return fib_nums[n]",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b\n    \nassert fib(0) == 0",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n\n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_seq = [0, 1]\n        for i in range(2, n+1):\n            fib_seq.append(fib_seq[i-1] + fib_seq[i-2])\n        return fib_seq[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_minus_2 = 0\n        fib_minus_1 = 1\n        fib_n = 0\n        for i in range(2, n+1):\n            fib_n = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for _ in range(2, n+1):\n            fib = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib\n        return fib",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for _ in range(2, n+1):\n            fib = fib1 + fib2\n            fib1, fib2 = fib2, fib\n        return fib",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for i in range(2, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b\n\nassert fib(0) == 0",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        for i in range(2, n+1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b\n\nassert fib(0) == 0",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    a = 0\n    b = 1\n    \n    if n == 0:\n        return a\n    elif n == 1:\n        return b\n    else:\n        for i in range(2, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        for i in range(2, n + 1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        for i in range(2, n+1):\n            fib_n = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_n\n        return fib_n",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)"
        ],
        "2": [
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n\n    if n <= 1:\n        return n\n    \n    fib_sequence = [0, 1]\n    \n    for i in range(2, n+1):\n        fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n    \n    return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_minus_2 = 0\n        fib_minus_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(2, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    \n    a = 0\n    b = 1\n    \n    for i in range(2, n+1):\n        c = a + b\n        a = b\n        b = c\n    \n    return b",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        for i in range(2, n+1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n + 1):\n            fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        fib_n = 0\n        for _ in range(2, n+1):\n            fib_n = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_n\n        return fib_n\n\n# Testing the function\nassert fib(0) == 0\nassert fib(5) == 5\nassert fib(10) == 55\nassert fib(15) == 610\nassert fib(20) == 6765\n\nprint(\"All tests passed!\")"
        ],
        "3": [
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n\n    if n <= 1:\n        return n\n    \n    fib_sequence = [0, 1]\n    \n    for i in range(2, n+1):\n        fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n    \n    return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_minus_2 = 0\n        fib_minus_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(2, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    \n    a = 0\n    b = 1\n    \n    for i in range(2, n+1):\n        c = a + b\n        a = b\n        b = c\n    \n    return b",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_numbers = [0, 1]\n        for i in range(2, n+1):\n            fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n        return fib_numbers[n]",
            "def fib(n: int):\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        for i in range(2, n+1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n + 1):\n            fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        fib_n = 0\n        for _ in range(2, n+1):\n            fib_n = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_n\n        return fib_n\n\n# Testing the function\nassert fib(0) == 0\nassert fib(5) == 5\nprint(\"Tests passed!\")"
        ],
        "4": [
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib1 = 0\n        fib2 = 1\n        for i in range(2, n+1):\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        return fibn",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n-1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_list = [0, 1]\n        for i in range(2, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2])\n        return fib_list[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_1",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n\n    if n <= 1:\n        return n\n    \n    fib_sequence = [0, 1]\n    \n    for i in range(2, n+1):\n        fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n    \n    return fib_sequence[n]",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_minus_2 = 0\n        fib_minus_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_minus_1 + fib_minus_2\n            fib_minus_2 = fib_minus_1\n            fib_minus_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a = 0\n        b = 1\n        for _ in range(2, n+1):\n            c = a + b\n            a = b\n            b = c\n        return b\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 1):\n            a, b = b, a + b\n        return b",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_0 = 0\n        fib_1 = 1\n        for i in range(2, n+1):\n            fib_n = fib_0 + fib_1\n            fib_0 = fib_1\n            fib_1 = fib_n\n        return fib_n\n\nassert fib(0) == 0\nassert fib(5) == 5",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    \n    a = 0\n    b = 1\n    \n    for i in range(2, n+1):\n        c = a + b\n        a = b\n        b = c\n    \n    return b",
            "def fib(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_numbers = [0, 1]\n        for i in range(2, n+1):\n            fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n        return fib_numbers[n]",
            "def fib(n: int):\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_n_minus_1 = 1\n        fib_n_minus_2 = 0\n        for i in range(2, n+1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(0) == 0\n    assert fib(5) == 5\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n + 1):\n            fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_sequence = [0, 1]\n        for i in range(2, n+1):\n            fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2])\n        return fib_sequence[n]",
            "def fib(n: int):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)",
            "def fib(n: int) -> int:\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        fib_1 = 0\n        fib_2 = 1\n        fib_n = 0\n        for _ in range(2, n+1):\n            fib_n = fib_1 + fib_2\n            fib_1 = fib_2\n            fib_2 = fib_n\n        return fib_n\n\n# Testing the function\nassert fib(0) == 0\nassert fib(5) == 5\nprint(\"Tests passed!\")"
        ]
    }
}