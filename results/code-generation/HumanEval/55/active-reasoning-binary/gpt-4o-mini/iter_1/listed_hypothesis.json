{
    "0": [
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(3, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(3, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(3, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(3, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(3, n + 1):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        },
        {
            "content": "```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    \n    Examples:\n\n    assert fib(2) == 1\n    assert fib(1) == 1\n    assert fib(4) == 3\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```",
            "logp": null
        }
    ]
}