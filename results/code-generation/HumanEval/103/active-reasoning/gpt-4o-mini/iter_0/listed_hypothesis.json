{
    "0": [
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    return bin(round(avg))[2:]\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) // (m - n + 1)\n    return bin(round(avg))\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "logp": null
        },
        {
            "content": "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "logp": null
        }
    ]
}