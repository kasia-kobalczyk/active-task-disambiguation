{
    "0": {
        "0": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```"
        ],
        "1": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```"
        ],
        "2": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```"
        ],
        "3": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) // 2\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) // (m - n + 1)\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```"
        ],
        "4": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total // count\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) // 2\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total_sum = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total_sum / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total // count\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total // count + (total % count * 2 // count)  # Rounding\n    return bin(average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = round(total / count)\n    return bin(avg)\n```"
        ]
    },
    "1": {
        "0": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```"
        ],
        "1": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```"
        ],
        "2": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total_sum = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total_sum / count\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```"
        ],
        "3": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) // 2\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) // (m - n + 1)\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) // 2\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total // count\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```"
        ],
        "4": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) // 2\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total_sum = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total_sum / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total // count + (total % count * 2 // count)  # Rounding\n    return bin(average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = round(total / count)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = round(total / count)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total // count + (total % count > 0)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```"
        ]
    },
    "2": {
        "0": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)[2:]\n```"
        ],
        "1": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```"
        ],
        "2": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total_sum = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total_sum / count\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```"
        ],
        "3": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) // (m - n + 1)\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) // 2\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total // count\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total_sum = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total_sum / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) // 2\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```"
        ],
        "4": [
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total_sum = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total_sum / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = sum(range(n, m + 1)) / (m - n + 1)\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total // count\n    return bin(round(average))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = round(total / count)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = round(total / count)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = (n + m) / 2\n    rounded = round(average)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total // count + (total % count > 0)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    avg = total / count\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    average = round((n + m) / 2)\n    return bin(average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = sum(range(n, m + 1)) / (m - n + 1)\n    return bin(round(avg))\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    total_sum = sum(range(n, m + 1))\n    count = m - n + 1\n    average = total_sum / count\n    rounded_average = round(average)\n    return bin(rounded_average)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded = round(avg)\n    return bin(rounded)\n```",
            "```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n```"
        ]
    }
}