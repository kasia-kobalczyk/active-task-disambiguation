{
    "0": [
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x**0.5)) if n > 1 else x == 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return x > 0 and n > 1 and int(n ** round(x ** (1 / n))) == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        if result > x:\n            return False\n        power += 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        if result > x:\n            return False\n        power += 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    while x > 1:\n        if x % n != 0:\n            return False\n        x //= n\n    return x == 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        if result > x:\n            return False\n        power += 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    return any(n**i == x for i in range(1, x+1))\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    while x > 1:\n        if x % n != 0:\n            return False\n        x //= n\n    return x == 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power <= x:\n        if n**power == x:\n            return True\n        power += 1\n    return False\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "logp": null
        },
        {
            "content": "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "logp": null
        }
    ]
}