{
    "0": {
        "0": [
            "```python\ndef is_simple_power(x, n):\n    return n ** round(n ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x > 0 and n > 1 and (x**(1/n)).is_integer()\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```"
        ],
        "1": [
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1/n), 0))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        if result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real))\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real)) if n > 1 else x == 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1/n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real))\n```"
        ],
        "2": [
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real)) if n > 1 else x == 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1/n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x**(1/n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return any(n**i == x for i in range(1, x+1))\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real)) if n > 1 else x == 1\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power <= x:\n        if n**power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```"
        ],
        "3": [
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return any(n**i == x for i in range(1, x+1))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```"
        ],
        "4": [
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        if result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        if result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    \n    Examples:\n\n    assert is_simple_power(8, 2) == True\n    assert is_simple_power(16, 4) == True\n    assert is_simple_power(27, 3) == True\n    \"\"\"\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```"
        ]
    },
    "1": {
        "0": [
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x**0.5)) if n > 1 else x == 1\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1/n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(x**(1/n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    return x > 0 and n > 1 and int(n ** round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(x ** 0.5) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```"
        ],
        "1": [
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real)) if n > 1 else x == 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real)) if n > 1 else x == 1\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 0\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n**power <= x:\n        if n**power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1/n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```"
        ],
        "2": [
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x**(1/n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return any(n**i == x for i in range(1, x+1))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x ** (1 / n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x**(1/n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```"
        ],
        "3": [
            "```python\ndef is_simple_power(x, n):\n    return any(n**i == x for i in range(1, x+1))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power <= x:\n        if n**power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```"
        ],
        "4": [
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    \n    Examples:\n\n    assert is_simple_power(8, 2) == True\n    assert is_simple_power(16, 4) == True\n    assert is_simple_power(27, 3) == True\n    \"\"\"\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == 1\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == 1\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        if result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == 1\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```"
        ]
    },
    "2": {
        "0": [
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        current_power = n ** power\n        if current_power == x:\n            return True\n        elif current_power > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```"
        ],
        "1": [
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 0\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1/n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real))\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1/n)))\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real)) if n > 1 else x == 1\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```"
        ],
        "2": [
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power <= x:\n        if n**power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x ** (1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** round(x**(1/n)) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return n**int(round(x**(1/n))) == x\n```",
            "```python\ndef is_simple_power(x, n):\n    return x == n ** int(round(x ** (1 / n).real))\n```",
            "```python\ndef is_simple_power(x, n):\n    return n ** int(round(x ** (1 / n))) == x\n```"
        ],
        "3": [
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power <= x:\n        if n**power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 0\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```"
        ],
        "4": [
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == 1\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == 1\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n**power < x:\n        power += 1\n    return n**power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        if result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == 1\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return False\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == 1\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while n ** power < x:\n        power += 1\n    return n ** power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```",
            "```python\ndef is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    \n    Examples:\n\n    assert is_simple_power(8, 2) == True\n    assert is_simple_power(16, 4) == True\n    assert is_simple_power(27, 3) == True\n    \"\"\"\n    if n <= 1:\n        return x == 1\n    \n    power = 1\n    while n ** power <= x:\n        if n ** power == x:\n            return True\n        power += 1\n    return False\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while True:\n        result = n ** power\n        if result == x:\n            return True\n        elif result > x:\n            return False\n        power += 1\n```",
            "```python\ndef is_simple_power(x, n):\n    if n <= 1:\n        return x == n\n    power = 1\n    while power < x:\n        power *= n\n    return power == x\n```"
        ]
    }
}