{
    "0": [
        {
            "content": "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    sentences = [s.strip() for s in sentences]\n    sentences = [s for s in sentences if s != '']\n    for sentence in sentences:\n        if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    boredoms = 0\n    sentences = S.split('.') + S.split('?') + S.split('!')\n    \n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms += 1\n    \n    return boredoms",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    count = 0\n    sentences = S.split('. ') + S.split('? ') + S.split('! ')\n    for sentence in sentences:\n        if sentence.startswith('I'):\n            count += 1\n    return count",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    count = 0\n    sentences = S.split('.')\n    for sentence in sentences:\n        if sentence.startswith('I'):\n            count += 1\n    sentences = S.split('?')\n    for sentence in sentences:\n        if sentence.startswith('I'):\n            count += 1\n    sentences = S.split('!')\n    for sentence in sentences:\n        if sentence.startswith('I'):\n            count += 1\n    return count",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    sentences = S.split('.')\n    sentences = [s.strip() for s in sentences]\n    \n    boredoms = 0\n    for sentence in sentences:\n        if sentence.startswith('I'):\n            boredoms += 1\n    \n    return boredoms",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    sentences = S.split('.')\n    sentences = [sentence.strip() for sentence in sentences]\n    sentences = [sentence for sentence in sentences if sentence]\n    \n    num_boredoms = 0\n    for sentence in sentences:\n        if sentence.startswith('I'):\n            num_boredoms += 1\n            \n    return num_boredoms",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence in sentences:\n        words = sentence.split()\n        if len(words) > 0 and words[0] == 'I':\n            boredoms += 1\n    sentences = S.split('?')\n    for sentence in sentences:\n        words = sentence.split()\n        if len(words) > 0 and words[0] == 'I':\n            boredoms += 1\n    sentences = S.split('!')\n    for sentence in sentences:\n        words = sentence.split()\n        if len(words) > 0 and words[0] == 'I':\n            boredoms += 1\n    return boredoms",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    # Split the string into sentences\n    sentences = S.split('.')\n\n    # Initialize a counter for boredoms\n    count = 0\n\n    # Iterate over each sentence\n    for sentence in sentences:\n        # Remove any leading or trailing whitespace\n        sentence = sentence.strip()\n\n        # Check if the sentence starts with \"I\"\n        if sentence.startswith(\"I\"):\n            # Increment the boredom counter\n            count += 1\n\n    # Return the final count of boredoms\n    return count",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    sentences = S.split('.')\n    sentences = [sentence for sentence in sentences if sentence != '']\n    boredoms = 0\n    for sentence in sentences:\n        if sentence[0] == 'I':\n            boredoms += 1\n    return boredoms",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    sentences = S.split('.') + S.split('?') + S.split('!')\n    count = 0\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n            count += 1\n    return count",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def is_bored(S):\n    sentences = S.split('.')\n    sentences = [s for s in sentences if s != '']\n    count = 0\n    for sentence in sentences:\n        words = sentence.split(' ')\n        if words[0] == \"I\":\n            count += 1\n    return count\n\n# Testing the function\nprint(is_bored(\"I'm bored.\")) # 0",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def is_bored(S):\n    sentences = S.split(\".\")\n    sentences = [s.strip() for s in sentences]\n    sentences = [s for s in sentences if s]  # remove empty strings\n    count = 0\n    for sentence in sentences:\n        words = sentence.split(\" \")\n        if words[0].lower() == \"i\":\n            count += 1\n    return count",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    sentences = S.split('.')\n    sentences = [s.strip() for s in sentences]\n    sentences = [s for s in sentences if s]\n    \n    count = 0\n    for sentence in sentences:\n        words = sentence.split()\n        if words[0] == 'I':\n            count += 1\n    \n    return count",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def is_bored(S):\n    sentences = S.split('.')\n    sentences = [sentence for sentence in sentences if sentence]\n    \n    count = 0\n    for sentence in sentences:\n        words = sentence.split()\n        if words and words[0] == \"I\":\n            count += 1\n    \n    return count",
            "logp": null
        },
        {
            "content": "def is_bored(S):\n    sentences = S.split('.')\n    sentences = [sentence for sentence in sentences if sentence]\n    \n    num_boredoms = 0\n    for sentence in sentences:\n        words = sentence.split()\n        if words[0].lower() == 'i':\n            num_boredoms += 1\n    \n    return num_boredoms",
            "logp": null
        }
    ]
}