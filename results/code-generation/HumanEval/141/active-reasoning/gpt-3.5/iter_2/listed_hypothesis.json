{
    "0": [
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    parts = file_name.split('.')\n    if not parts[0] or not parts[0][0].isalpha():\n        return 'No'\n    \n    if parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    digit_count = sum(c.isdigit() for c in file_name)\n    if digit_count > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    digits = 0\n    dot_count = 0\n    alpha_count = 0\n    file_ext = \"\"\n\n    for char in file_name:\n        if char.isdigit():\n            digits += 1\n        elif char == \".\":\n            dot_count += 1\n        elif char.isalpha():\n            alpha_count += 1\n\n    if digits > 3 or dot_count != 1 or alpha_count == 0:\n        return \"No\"\n\n    file_name_parts = file_name.split(\".\")\n    if len(file_name_parts) != 2:\n        return \"No\"\n\n    file_ext = file_name_parts[1]\n    if file_ext not in ['txt', 'exe', 'dll']:\n        return \"No\"\n\n    return \"Yes\"",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    # Check if the file name has more than three digits\n    if sum(char.isdigit() for char in file_name) > 3:\n        return 'No'\n    \n    # Check if the file name contains exactly one dot\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    # Split the file name into two parts, before and after the dot\n    parts = file_name.split('.')\n    \n    # Check if the substring before the dot is empty or does not start with a letter\n    if len(parts[0]) == 0 or not parts[0][0].isalpha():\n        return 'No'\n    \n    # Check if the substring after the dot is 'txt', 'exe' or 'dll'\n    if parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    # All conditions are met, return 'Yes'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    # Check the number of digits in the file name\n    num_digits = sum(1 for char in file_name if char.isdigit())\n    if num_digits > 3:\n        return 'No'\n    \n    # Check the number of dots in the file name\n    num_dots = file_name.count('.')\n    if num_dots != 1:\n        return 'No'\n    \n    # Split the file name into two parts: before and after the dot\n    parts = file_name.split('.')\n    if len(parts) != 2:\n        return 'No'\n    \n    # Check the substring before the dot\n    name = parts[0]\n    if len(name) == 0 or not name[0].isalpha():\n        return 'No'\n    \n    # Check the substring after the dot\n    ext = parts[1]\n    valid_exts = ['txt', 'exe', 'dll']\n    if ext not in valid_exts:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    digits_count = 0\n    for char in file_name:\n        if char.isdigit():\n            digits_count += 1\n            if digits_count > 3:\n                return 'No'\n\n    if file_name.count('.') != 1:\n        return 'No'\n\n    name, ext = file_name.split('.')\n    if not name or not name[0].isalpha():\n        return 'No'\n\n    if ext not in ['txt', 'exe', 'dll']:\n        return 'No'\n\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    # check if there are more than three digits in the file name\n    if sum(c.isdigit() for c in file_name) > 3:\n        return 'No'\n    \n    # check if there is exactly one dot in the file name\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    # split the file name into two parts, before and after the dot\n    parts = file_name.split('.')\n    prefix = parts[0]\n    suffix = parts[1]\n    \n    # check if the prefix is not empty and starts with a letter\n    if not prefix or not prefix[0].isalpha():\n        return 'No'\n    \n    # check if the suffix is one of ['txt', 'exe', 'dll']\n    if suffix not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    # if all conditions are met, return 'Yes'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    before_dot, after_dot = file_name.split('.')\n    \n    if len(before_dot) == 0 or not before_dot[0].isalpha():\n        return 'No'\n    \n    if after_dot not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    digit_count = sum([1 for char in file_name if char.isdigit()])\n    if digit_count > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    parts = file_name.split('.')\n    prefix = parts[0]\n    suffix = parts[1]\n    if len(prefix) == 0:\n        return 'No'\n    if not prefix[0].isalpha():\n        return 'No'\n    if len([c for c in prefix if c.isdigit()]) > 3:\n        return 'No'\n    if suffix not in ['txt', 'exe', 'dll']:\n        return 'No'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    import re\n    \n    # Condition 1: There should not be more than three digits ('0'-'9') in the file's name.\n    if len(re.findall(r'\\d', file_name)) > 3:\n        return 'No'\n    \n    # Condition 2: The file's name contains exactly one dot '.'\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    # Condition 3: The substring before the dot should not be empty, and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z').\n    if not re.match(r'^[a-zA-Z]', file_name.split('.')[0]):\n        return 'No'\n    \n    # Condition 4: The substring after the dot should be one of these: ['txt', 'exe', 'dll']\n    if file_name.split('.')[-1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    # If all conditions are met, return 'Yes'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if len([c for c in file_name if c.isdigit()]) > 3:\n        return 'No'\n    if file_name.count('.') != 1:\n        return 'No'\n    name, extension = file_name.split('.')\n    if not name or not name[0].isalpha():\n        return 'No'\n    if extension not in ['txt', 'exe', 'dll']:\n        return 'No'\n    return 'Yes'",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    name, extension = file_name.split('.')\n    if not name or not name[0].isalpha():\n        return 'No'\n    if extension not in ['txt', 'exe', 'dll']:\n        return 'No'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    file_parts = file_name.split('.')\n    if len(file_parts) != 2:\n        return 'No'\n    \n    prefix = file_parts[0]\n    suffix = file_parts[1]\n    \n    if not prefix or not prefix[0].isalpha():\n        return 'No'\n    \n    if suffix not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    parts = file_name.split('.')\n    if len(parts[0]) == 0 or not parts[0][0].isalpha():\n        return 'No'\n    \n    if parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    digit_count = sum(1 for char in file_name if char.isdigit())\n    if digit_count > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    \"\"\"\n    Function to check if a file name is valid.\n\n    Parameters:\n    file_name (str): The name of the file to be checked.\n\n    Returns:\n    str: 'Yes' if the file name is valid, 'No' otherwise.\n    \"\"\"\n    # Check if the file name has exactly one dot ('.')\n    if file_name.count('.') != 1:\n        return 'No'\n\n    # Split the file name into name and extension\n    name, extension = file_name.split('.')\n\n    # Check if the name is not empty and starts with a letter\n    if not name or not name[0].isalpha():\n        return 'No'\n\n    # Check if the extension is one of the valid options\n    if extension not in ['txt', 'exe', 'dll']:\n        return 'No'\n\n    # Check if the name has more than three digits ('0'-'9')\n    if sum(1 for char in name if char.isdigit()) > 3:\n        return 'No'\n\n    # All conditions are met, file name is valid\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return \"No\"\n    \n    file_name_parts = file_name.split('.')\n    if len(file_name_parts[0]) == 0 or not file_name_parts[0][0].isalpha():\n        return \"No\"\n    \n    if file_name_parts[1] not in ['txt', 'exe', 'dll']:\n        return \"No\"\n    \n    digit_count = sum(1 for char in file_name if char.isdigit())\n    if digit_count > 3:\n        return \"No\"\n    \n    return \"Yes\"",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    file_parts = file_name.split('.')\n    if len(file_parts[0]) == 0 or not file_parts[0][0].isalpha():\n        return 'No'\n    if file_parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    digit_count = sum(1 for char in file_name if char.isdigit())\n    if digit_count > 3:\n        return 'No'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    import re\n\n    # Check if there is exactly one dot '.'\n    if file_name.count('.') != 1:\n        return 'No'\n\n    # Split the file name into two parts based on the dot\n    parts = file_name.split('.')\n\n    # Check if the substring before the dot is empty or does not start with a letter\n    if not parts[0] or not re.match('[a-zA-Z]', parts[0]):\n        return 'No'\n\n    # Check if the substring after the dot is 'txt', 'exe', or 'dll'\n    if parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n\n    # Check if there are more than three digits in the file's name\n    digits = re.findall('\\d', file_name)\n    if len(digits) > 3:\n        return 'No'\n\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return \"No\"\n    elif len(file_name.split('.')[0]) < 1 or not file_name.split('.')[0][0].isalpha():\n        return \"No\"\n    elif file_name.split('.')[1] not in ['txt', 'exe', 'dll']:\n        return \"No\"\n    elif sum(char.isdigit() for char in file_name) > 3:\n        return \"No\"\n    else:\n        return \"Yes\"",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    name, ext = file_name.split('.')\n    \n    if len(name) == 0 or not name[0].isalpha():\n        return 'No'\n    \n    if ext not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    digits = sum(c.isdigit() for c in name)\n    if digits > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    \"\"\"\n    Check if the given file name is valid.\n\n    Args:\n    file_name (str): The file name to check.\n\n    Returns:\n    str: 'Yes' if the file name is valid, 'No' otherwise.\n    \"\"\"\n    digits_count = 0\n    dot_count = 0\n    for char in file_name:\n        if char.isdigit():\n            digits_count += 1\n            if digits_count > 3:\n                return 'No'\n        elif char == '.':\n            dot_count += 1\n        elif char.isalpha() and dot_count == 1:\n            break\n        else:\n            return 'No'\n    if dot_count != 1 or digits_count == 0:\n        return 'No'\n    file_extension = file_name.split('.')[-1]\n    if file_extension not in ['txt', 'exe', 'dll']:\n        return 'No'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    digits = sum([1 for char in file_name if char.isdigit()])\n    if digits > 3:\n        return 'No'\n    if '.' not in file_name:\n        return 'No'\n    if file_name.count('.') > 1:\n        return 'No'\n    if file_name.split('.')[-1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    file_name_split = file_name.split('.')\n    if not file_name_split[0] or not file_name_split[0][0].isalpha():\n        return 'No'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    # Check if file name has more than three digits\n    digits_count = 0\n    for char in file_name:\n        if char.isdigit():\n            digits_count += 1\n    if digits_count > 3:\n        return 'No'\n    \n    # Check if file name has exactly one dot\n    dots_count = file_name.count('.')\n    if dots_count != 1:\n        return 'No'\n    \n    # Check if substring before the dot is not empty and starts with a letter\n    substring_before_dot = file_name.split('.')[0]\n    if not substring_before_dot or not substring_before_dot[0].isalpha():\n        return 'No'\n    \n    # Check if substring after the dot is 'txt', 'exe', or 'dll'\n    substring_after_dot = file_name.split('.')[1]\n    valid_extensions = ['txt', 'exe', 'dll']\n    if substring_after_dot not in valid_extensions:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    name, extension = file_name.split('.')\n    \n    if len(name) == 0 or not name[0].isalpha():\n        return 'No'\n    \n    if extension not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    digits = sum(1 for char in name if char.isdigit())\n    if digits > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    else:\n        file_parts = file_name.split('.')\n        if len(file_parts[0]) == 0 or not file_parts[0][0].isalpha():\n            return 'No'\n        elif file_parts[1] not in ['txt', 'exe', 'dll']:\n            return 'No'\n        else:\n            digit_count = sum(1 for char in file_name if char.isdigit())\n            if digit_count > 3:\n                return 'No'\n            else:\n                return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return \"No\"\n    else:\n        file_name_split = file_name.split('.')\n        name = file_name_split[0]\n        ext = file_name_split[1]\n        if name == \"\":\n            return \"No\"\n        if not name[0].isalpha():\n            return \"No\"\n        if ext not in ['txt', 'exe', 'dll']:\n            return \"No\"\n        if len([char for char in name if char.isdigit()]) > 3:\n            return \"No\"\n        return \"Yes\"",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    else:\n        file_parts = file_name.split('.')\n        if len(file_parts[0]) == 0 or not file_parts[0][0].isalpha():\n            return 'No'\n        elif len(file_parts[1]) != 3 or file_parts[1] not in ['txt', 'exe', 'dll']:\n            return 'No'\n        else:\n            digit_count = sum([1 for char in file_parts[0] if char.isdigit()])\n            if digit_count > 3:\n                return 'No'\n            else:\n                return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    valid_extensions = ['txt', 'exe', 'dll']\n    \n    if file_name.count('.') != 1:\n        return 'No'\n    \n    name, extension = file_name.split('.')\n    \n    if len(name) == 0 or not name[0].isalpha():\n        return 'No'\n    \n    if len(extension) != 3 or extension not in valid_extensions:\n        return 'No'\n    \n    digit_count = sum(1 for char in file_name if char.isdigit())\n    if digit_count > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count(\".\") != 1:\n        return \"No\"\n    filename, extension = file_name.split(\".\")\n    if not filename or not filename[0].isalpha():\n        return \"No\"\n    if extension not in [\"txt\", \"exe\", \"dll\"]:\n        return \"No\"\n    return \"Yes\"",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:  # Check if there is exactly one dot\n        return 'No'\n    \n    name, extension = file_name.split('.')  # Split the file name into name and extension\n    \n    if not name or not name[0].isalpha():  # Check if the name is not empty and starts with a letter\n        return 'No'\n    \n    if not extension in ['txt', 'exe', 'dll']:  # Check if the extension is valid\n        return 'No'\n    \n    if sum(1 for char in name if char.isdigit()) > 3:  # Check if there are not more than 3 digits in the name\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    name, ext = file_name.split('.')\n    if not name or not ext:\n        return 'No'\n    if len(ext) != 3 or ext not in ['txt', 'exe', 'dll']:\n        return 'No'\n    if len([c for c in name if c.isdigit()]) > 3:\n        return 'No'\n    if not any(c.isalpha() for c in name):\n        return 'No'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    # Check if there is exactly one dot in the file name\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    # Split the file name into two parts: before the dot and after the dot\n    parts = file_name.split('.')\n    before_dot = parts[0]\n    after_dot = parts[1]\n    \n    # Check if the substring before the dot is not empty and starts with a letter\n    if len(before_dot) == 0 or not before_dot[0].isalpha():\n        return 'No'\n    \n    # Check if the substring after the dot is one of the valid options\n    if after_dot not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    # Check if there are not more than three digits in the file name\n    digit_count = sum(1 for char in file_name if char.isdigit())\n    if digit_count > 3:\n        return 'No'\n    \n    # If all conditions are met, return 'Yes'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    name_parts = file_name.split('.')\n    if len(name_parts[0]) == 0:\n        return 'No'\n    \n    if not name_parts[0][0].isalpha():\n        return 'No'\n    \n    if len([char for char in name_parts[0] if char.isdigit()]) > 3:\n        return 'No'\n    \n    if name_parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    # Check if there is more than one dot in the file's name\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    # Split the file's name into two parts: before the dot and after the dot\n    parts = file_name.split('.')\n    \n    # Check if the substring before the dot is empty or does not start with a letter\n    if len(parts[0]) == 0 or not parts[0][0].isalpha():\n        return 'No'\n    \n    # Check if the substring after the dot is not one of ['txt', 'exe', 'dll']\n    if parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    # Check if the file's name has more than three digits\n    digit_count = sum(c.isdigit() for c in file_name)\n    if digit_count > 3:\n        return 'No'\n    \n    # All conditions are met, return 'Yes'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return \"No\"\n    \n    name, extension = file_name.split('.')\n    \n    if len(name) == 0 or not name[0].isalpha() or not extension in ['txt', 'exe', 'dll']:\n        return \"No\"\n    \n    count = 0\n    for char in name:\n        if char.isdigit():\n            count += 1\n    if count > 3:\n        return \"No\"\n    \n    return \"Yes\"",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "def file_name_check(file_name):\n    num_digits = sum(1 for char in file_name if char.isdigit())\n    num_dots = sum(1 for char in file_name if char == '.')\n    dot_index = file_name.find('.')\n    before_dot = file_name[:dot_index]\n    after_dot = file_name[dot_index + 1:]\n    \n    if num_digits > 3 or num_dots != 1:\n        return 'No'\n    elif not before_dot or not before_dot[0].isalpha():\n        return 'No'\n    elif after_dot not in ['txt', 'exe', 'dll']:\n        return 'No'\n    else:\n        return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    valid_extensions = ['txt', 'exe', 'dll']\n    \n    if file_name.count('.') != 1:\n        return 'No'\n    \n    name, extension = file_name.split('.')\n    \n    if not name or not name[0].isalpha():\n        return 'No'\n    \n    if extension not in valid_extensions:\n        return 'No'\n    \n    digits_count = sum([1 for char in file_name if char.isdigit()])\n    \n    if digits_count > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    import re\n    pattern = r'^[a-zA-Z]+\\.([a-zA-Z]{3})$'\n    if re.match(pattern, file_name) and file_name.count('.') == 1:\n        return 'Yes'\n    else:\n        return 'No'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    digits = 0\n    dot = False\n    alphabet = False\n    extension = False\n\n    for char in file_name:\n        if char.isdigit():\n            digits += 1\n        elif char == '.':\n            dot = True\n        elif char.isalpha() and not dot:\n            alphabet = True\n        elif char.isalpha() and dot:\n            if file_name[file_name.index('.')+1:] in ['txt', 'exe', 'dll']:\n                extension = True\n\n    if digits > 3 or not dot or not alphabet or not extension:\n        return 'No'\n    else:\n        return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    file_name_parts = file_name.split('.')\n    if len(file_name_parts[0]) == 0 or not file_name_parts[0][0].isalpha():\n        return 'No'\n    \n    valid_extensions = ['txt', 'exe', 'dll']\n    if file_name_parts[1] not in valid_extensions:\n        return 'No'\n    \n    digit_count = sum(1 for char in file_name if char.isdigit())\n    if digit_count > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    name, extension = file_name.split('.')\n    if not name or not name[0].isalpha():\n        return 'No'\n    \n    allowed_extensions = ['txt', 'exe', 'dll']\n    if extension not in allowed_extensions:\n        return 'No'\n    \n    digit_count = sum(c.isdigit() for c in file_name)\n    if digit_count > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    digits_count = sum([1 for char in file_name if char.isdigit()])\n    dot_count = sum([1 for char in file_name if char == '.'])\n    if digits_count > 3 or dot_count != 1:\n        return 'No'\n    name, extension = file_name.split('.')\n    if not name or not name[0].isalpha():\n        return 'No'\n    if extension not in ['txt', 'exe', 'dll']:\n        return 'No'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if len(file_name) < 5:\n        return 'No'\n    if file_name.count('.') != 1:\n        return 'No'\n    file_parts = file_name.split('.')\n    if len(file_parts[0]) == 0:\n        return 'No'\n    if not file_parts[0][0].isalpha():\n        return 'No'\n    if file_parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return \"No\"\n    \n    name, ext = file_name.split('.')\n    \n    if not name or not ext:\n        return \"No\"\n    \n    if len([c for c in name if c.isdigit()]) > 3:\n        return \"No\"\n    \n    if ext not in ['txt', 'exe', 'dll']:\n        return \"No\"\n    \n    return \"Yes\"",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return \"No\"\n    file_name_split = file_name.split('.')\n    if not file_name_split[0] or not file_name_split[1]:\n        return \"No\"\n    if file_name_split[1] not in ['txt', 'exe', 'dll']:\n        return \"No\"\n    if sum(1 for c in file_name_split[0] if c.isdigit()) > 3:\n        return \"No\"\n    if not file_name_split[0][0].isalpha():\n        return \"No\"\n    return \"Yes\"",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    if file_name.count('.') != 1:\n        return 'No'\n    \n    parts = file_name.split('.')\n    \n    if len(parts[0]) == 0 or not parts[0][0].isalpha():\n        return 'No'\n    \n    if len(parts[1]) != 3 or parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    digits = sum(c.isdigit() for c in file_name)\n    if digits > 3:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    digits = 0\n    for char in file_name:\n        if char.isdigit():\n            digits += 1\n    \n    if digits > 3:\n        return 'No'\n    \n    if '.' not in file_name:\n        return 'No'\n    \n    parts = file_name.split('.')\n    if len(parts) != 2:\n        return 'No'\n    \n    prefix = parts[0]\n    suffix = parts[1]\n    \n    if not prefix:\n        return 'No'\n    \n    if not prefix[0].isalpha():\n        return 'No'\n    \n    valid_suffixes = ['txt', 'exe', 'dll']\n    if suffix not in valid_suffixes:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        },
        {
            "content": "def file_name_check(file_name):\n    digits_count = sum(1 for char in file_name if char.isdigit())\n    dot_count = sum(1 for char in file_name if char == '.')\n    dot_index = file_name.find('.')\n    file_extension = file_name[dot_index+1:]\n    \n    if digits_count > 3:\n        return 'No'\n    elif dot_count != 1:\n        return 'No'\n    elif not file_name[:dot_index].isalpha() or len(file_name[:dot_index]) == 0:\n        return 'No'\n    elif file_extension not in ['txt', 'exe', 'dll']:\n        return 'No'\n    \n    return 'Yes'",
            "logp": null
        }
    ]
}