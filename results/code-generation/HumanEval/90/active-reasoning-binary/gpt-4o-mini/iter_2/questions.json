{
    "0": [
        "assert next_smallest([5]) == None",
        "assert next_smallest([3, 3, 3, 3]) == None",
        "assert next_smallest([7, 7, 7, 7]) == None",
        "assert next_smallest([3, 1, 2, 4]) == 2",
        "assert next_smallest([5, 2, 9, 1, 7]) == 2",
        "assert next_smallest([10, 20, 30, 5, 15]) == 10",
        "assert next_smallest([10, 20, 30, 20]) == 20",
        "assert next_smallest([-1, -5, -3, -4]) == -4"
    ],
    "1": [
        "assert next_smallest([7, 7, 7, 7]) == None",
        "assert next_smallest([3, 1, 2]) == 2",
        "assert next_smallest([10, 5, 20, 1]) == 5",
        "assert next_smallest([-1, -5, -3, -2]) == -3",
        "assert next_smallest([-1, -3, -2, -4]) == -2",
        "assert next_smallest([7, 8, 5, 6, 5]) == 6",
        "assert next_smallest([10, 10, 10]) == None",
        "assert next_smallest([3, 1, 4, 2]) == 2"
    ],
    "2": [
        "assert next_smallest([-1, -2, -3, -4]) == -2",
        "assert next_smallest([10, 4, 5, 4, 3]) == 4",
        "assert next_smallest([3, 1, 2]) == 2",
        "assert next_smallest([10, 10, 10, 5, 5]) == 10",
        "assert next_smallest([1, 2, 2, 3, 3]) == 2",
        "assert next_smallest([3, 1, 4, 2]) == 2",
        "assert next_smallest([100]) == None",
        "assert next_smallest([-1, -2, -3, -2]) == -2"
    ],
    "3": [
        "assert next_smallest([10, 4, 5, 4, 3]) == 4",
        "assert next_smallest([3, 1, 2]) == 2",
        "assert next_smallest([10, 10, 10, 5, 5]) == 10",
        "assert next_smallest([1, 2, 2, 3, 3]) == 2",
        "assert next_smallest([3, 1, 4, 2]) == 2",
        "assert next_smallest([100]) == None",
        "assert next_smallest([-1, -2, -3, -4]) == -3",
        "assert next_smallest([-1, -2, -3, -2]) == -2"
    ]
}