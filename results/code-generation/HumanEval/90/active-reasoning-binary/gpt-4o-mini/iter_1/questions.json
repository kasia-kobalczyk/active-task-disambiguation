{
    "0": [
        "assert next_smallest([10]) == None",
        "assert next_smallest([5, 5, 5, 5]) == None",
        "assert next_smallest([5, 3, 9, 1, 6]) == 3",
        "assert next_smallest([3, 1, 4, 2]) == 2",
        "assert next_smallest([7, 7, 7, 7]) == None",
        "assert next_smallest([8, 2, 7, 3, 5]) == 3"
    ],
    "1": [
        "assert next_smallest([2, 4, 6, 8, 10]) == 4",
        "assert next_smallest([5, 3, 1]) == 3",
        "assert next_smallest([7, 8, 6, 5]) == 6",
        "assert next_smallest([4, 4, 4, 4]) == None",
        "assert next_smallest([7, 7, 7, 7]) == None",
        "assert next_smallest([5, 1, 3]) == 3",
        "assert next_smallest([-1, -2, -3, -4]) == -2",
        "assert next_smallest([3]) == None"
    ],
    "2": [
        "assert next_smallest([1, 2]) == None",
        "assert next_smallest([3, 1, 2, 4]) == 2",
        "assert next_smallest([10, 20, 20, 30, 40]) == 20",
        "assert next_smallest([5, 5, 5, 5]) == None",
        "assert next_smallest([-1, -2, -3, -4]) == -2",
        "assert next_smallest([7, 7, 7]) == None",
        "assert next_smallest([5, 3, 1, 2]) == 2",
        "assert next_smallest([10, 9, 8, 7, 6]) == 9"
    ],
    "3": [
        "assert next_smallest([10, 20, 20, 30, 10]) == 20",
        "assert next_smallest([5, 3, 1, 2, 4]) == 2",
        "assert next_smallest([10, 20, 30]) == 20",
        "assert next_smallest([3, 1, 2, 4]) == 2",
        "assert next_smallest([7, 7, 7, 7]) == None",
        "assert next_smallest([5, 5, 5, 5]) == None",
        "assert next_smallest([-1, -2, -3, -4]) == -2"
    ]
}