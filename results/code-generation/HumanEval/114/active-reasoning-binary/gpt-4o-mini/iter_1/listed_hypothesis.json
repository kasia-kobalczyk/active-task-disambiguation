{
    "0": [
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = min_sum = nums[0]\n    for num in nums[1:]:\n        current_sum = min(num, current_sum + num)\n        min_sum = min(min_sum, current_sum)\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        }
    ],
    "1": [
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = min_sum = nums[0]\n    for num in nums[1:]:\n        current_sum = min(num, current_sum + num)\n        min_sum = min(min_sum, current_sum)\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n\n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = min_sum = nums[0]\n    for num in nums[1:]:\n        current_sum = min(num, current_sum + num)\n        min_sum = min(min_sum, current_sum)\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        }
    ],
    "2": [
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n            \n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        }
    ],
    "3": [
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    current_sum = float('inf')\n    min_sum = float('inf')\n    \n    for num in nums:\n        if current_sum > 0:\n            current_sum = num\n        else:\n            current_sum += num\n        \n        min_sum = min(min_sum, current_sum)\n    \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n            \n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n\n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n\n    return min_sum\n```",
            "logp": null
        },
        {
            "content": "```python\ndef minSubArraySum(nums):\n    min_sum = float('inf')\n    current_sum = 0\n    \n    for num in nums:\n        current_sum += num\n        if current_sum < min_sum:\n            min_sum = current_sum\n        if current_sum > 0:\n            current_sum = 0\n    \n    return min_sum\n```",
            "logp": null
        }
    ]
}