{
    "0": [
        "assert intersperse([1, 2, 3], 0) == [1, 0, 2, 0, 3]",
        "assert intersperse([4], 9) == [4]",
        "assert intersperse([], 7) == []",
        "assert intersperse([9], 1) == [9]",
        "assert intersperse([10, 20], 5) == [10, 5, 20]",
        "assert intersperse([5, 10], 7) == [5, 7, 10]",
        "assert intersperse([], 4) == []"
    ],
    "1": [
        "assert intersperse([1], 3) == [1]",
        "assert intersperse([10], 1) == [10]",
        "assert intersperse([5, 10, 15], 1) == [5, 1, 10, 1, 15]",
        "assert intersperse([9, 8, 7, 6], 5) == [9, 5, 8, 5, 7, 5, 6]",
        "assert intersperse([], 7) == []",
        "assert intersperse([3, 1], 2) == [3, 2, 1]",
        "assert intersperse([4, 5, 6], 9) == [4, 9, 5, 9, 6]"
    ],
    "2": [
        "assert intersperse([7, 8], 4) == [7, 4, 8]",
        "assert intersperse([100, 200, 300, 400], 50) == [100, 50, 200, 50, 300, 50, 400]",
        "assert intersperse([4, 8, 12, 16], -1) == [4, -1, 8, -1, 12, -1, 16]",
        "assert intersperse([5, 10, 15], 1) == [5, 1, 10, 1, 15]",
        "assert intersperse([], 7) == []",
        "assert intersperse([9], 2) == [9]",
        "assert intersperse([], 9) == []"
    ],
    "3": [
        "assert intersperse([5, 5, 5], -1) == [5, -1, 5, -1, 5]",
        "assert intersperse([5, 15], 99) == [5, 99, 15]",
        "assert intersperse([10, 20, 30, 40], 100) == [10, 100, 20, 100, 30, 100, 40]",
        "assert intersperse([0, 0, 0], 1) == [0, 1, 0, 1, 0]",
        "assert intersperse([10, 20, 30, 40], -1) == [10, -1, 20, -1, 30, -1, 40]",
        "assert intersperse([], 5) == []",
        "assert intersperse([-1, 0, 1], 2) == [-1, 2, 0, 2, 1]"
    ]
}