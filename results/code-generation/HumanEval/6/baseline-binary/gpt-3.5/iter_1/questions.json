{
    "0": [
        "assert parse_nested_parens(\"((())()())\") == [3]\n# So the output should be [3].",
        "assert parse_nested_parens(\"()\") == [1]",
        "assert parse_nested_parens(\"(()) ()\") == [2, 1]"
    ],
    "1": [
        "assert parse_nested_parens(\"(((())()()))\") == [4]",
        "assert parse_nested_parens(\"((())()()) (())() (())\") == [3, 1, 1]",
        "assert parse_nested_parens(\"((())) () () (((((())))))\") == [3, 0, 0, 6]"
    ],
    "2": [
        "assert parse_nested_parens(\"(((())))) () (())\") == [4, 1, 1]\n# So the output should be [4, 1, 1].",
        "assert parse_nested_parens(\"()\") == [1]",
        "assert parse_nested_parens(\"((()()) (()()) ())\") == [2, 2, 1]"
    ],
    "3": [
        "assert parse_nested_parens(\"()\") == [1]",
        "assert parse_nested_parens(\"((()()) (()()) ())\") == [2, 2, 1]"
    ]
}