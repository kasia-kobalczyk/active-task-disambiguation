{
    "0": [
        "assert parse_nested_parens(\"() ()\") == [1, 1]",
        "assert parse_nested_parens(\"()() ()\") == [1, 1]",
        "assert parse_nested_parens(\"() () ()\") == [1, 1, 1]",
        "assert parse_nested_parens(\"() () (()())\") == [1, 1, 2]",
        "assert parse_nested_parens(\"((()))\") == [3]",
        "assert parse_nested_parens(\"((())) (() (()()))\") == [3, 2, 3]",
        "assert parse_nested_parens(\"((()) (()()) () ())\") == [2, 2, 1]",
        "assert parse_nested_parens(\"(()(())) (()())\") == [3, 2]"
    ],
    "1": [
        "assert parse_nested_parens(\"() (()) ()\") == [1, 2, 1]",
        "assert parse_nested_parens(\"((()) ())\") == [2, 1]",
        "assert parse_nested_parens(\"()()() ()()\") == [1, 1]",
        "assert parse_nested_parens(\"((())) (()())\") == [3, 2]",
        "assert parse_nested_parens(\"()()()\") == [1, 1, 1]",
        "assert parse_nested_parens(\"(()(())) (())\") == [2, 1]",
        "assert parse_nested_parens(\"((()))\") == [3]",
        "assert parse_nested_parens(\"(()) (())\") == [2, 2]"
    ],
    "2": [
        "assert parse_nested_parens(\"((()())())\") == [3]",
        "assert parse_nested_parens(\"()()()()\") == [1, 1, 1, 1]",
        "assert parse_nested_parens(\"(()) (()) (())\") == [2, 2, 2]",
        "assert parse_nested_parens(\"((()())) (()())\") == [3, 2]",
        "assert parse_nested_parens(\"()()()\") == [1, 1, 1]",
        "assert parse_nested_parens(\"((()))\") == [3]",
        "assert parse_nested_parens(\"() (()) ((()))\") == [1, 2, 3]"
    ],
    "3": [
        "assert parse_nested_parens(\"()()()()\") == [1, 1, 1, 1]",
        "assert parse_nested_parens(\"((())) ()\") == [3, 1]",
        "assert parse_nested_parens(\"(())\") == [2]",
        "assert parse_nested_parens(\"((((()))))\") == [5]",
        "assert parse_nested_parens(\"() (()) () ((()))\") == [1, 2, 1, 3]",
        "assert parse_nested_parens(\"((()) (()()))\") == [2, 3]",
        "assert parse_nested_parens(\"() (()) (()) (()())\") == [1, 2, 2, 3]",
        "assert parse_nested_parens(\"() () (()) (()())\") == [1, 1, 2, 2]"
    ]
}