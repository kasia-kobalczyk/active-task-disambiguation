{
    "0": [
        "assert solution([1, 2, 3, 4, 5, 6]) == 1  ",
        "assert solution([2, 3, 4, 5, 6]) == 2  ",
        "assert solution([0, 2, 4, 6, 8]) == 0  ",
        "assert solution([1, 1, 1, 1, 1]) == 3  ",
        "assert solution([1, 3, 5, 7, 9]) == 1  ",
        "assert solution([1, 2, 3, 4, 5]) == 4",
        "assert solution([2, 3, 4, 5, 6]) == 0  ",
        "assert solution([1, 2, 3, 4, 5]) == 1"
    ],
    "1": [
        "assert solution([0, 1, 2, 3, 4, 5, 6]) == 0  ",
        "assert solution([1, 2, 3, 4, 5, 6]) == 9  ",
        "assert solution([1, 2, 3, 4, 5, 6]) == 4  ",
        "assert solution([2, 3, 4, 5, 6]) == 2",
        "assert solution([10, 15, 20, 25, 30]) == 10  ",
        "assert solution([9, 8, 7, 6, 5, 4, 3]) == 9  ",
        "assert solution([2, 3, 5, 7, 11]) == 2",
        "assert solution([7, 8, 9, 10, 11, 12]) == 18  "
    ],
    "2": [
        "assert solution([7, 2, 1, 4, 3, 8, 5]) == 8  ",
        "assert solution([1, 3, 5, 7, 9]) == 16",
        "assert solution([9, 1, 2, 3, 5, 6]) == 14  ",
        "assert solution([2, 4, 6, 8, 10]) == 0  ",
        "assert solution([1, 2, 3, 4, 5, 6, 7, 8]) == 9  ",
        "assert solution([2, 3, 4, 5, 6, 7]) == 6  ",
        "assert solution([1, 2, 3, 4, 5]) == 1",
        "assert solution([5, 2, 8, 3, 1]) == 6  "
    ],
    "3": [
        "assert solution([1, 3, 5, 7, 9]) == 16",
        "assert solution([2, 4, 6, 8, 10]) == 0  ",
        "assert solution([1, 2, 3, 4, 5, 6, 7, 8]) == 9  ",
        "assert solution([2, 3, 4, 5, 6, 7]) == 6  ",
        "assert solution([1, 2, 3, 4, 5]) == 1",
        "assert solution([9, 1, 2, 3, 4, 5]) == 9  ",
        "assert solution([5, 10, 15, 20, 25]) == 30  "
    ]
}