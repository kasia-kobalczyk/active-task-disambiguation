{
    "0": [
        "assert solution([1, 2, 3, 4, 5, 6, 7]) == 1  ",
        "assert solution([2, 3, 4, 5, 6]) == 0  ",
        "assert solution([7, 0, 9, 2, 1, 4]) == 7  ",
        "assert solution([2, 1, 4, 3, 6]) == 0  ",
        "assert solution([1, 2, 3, 4, 5]) == 1",
        "assert solution([7, 10, 9, 12, 11, 14]) == 7  ",
        "assert solution([1, 2, 3, 4, 5, 6]) == 1  "
    ],
    "1": [
        "assert solution([1, 2, 3, 4, 5, 6, 7]) == 4  ",
        "assert solution([2, 1, 3, 4, 5, 6]) == 3  ",
        "assert solution([0, 1, 2, 3, 4, 5, 6]) == 0  ",
        "assert solution([10, 15, 20, 25, 30]) == 10  ",
        "assert solution([1, 2, 3, 4, 5]) == 1",
        "assert solution([7, 8, 9, 10, 11, 12]) == 7  "
    ],
    "2": [
        "assert solution([2, 1, 3, 4, 5, 6]) == 3  ",
        "assert solution([0, 1, 0, 3, 0, 5]) == 0  ",
        "assert solution([1, 3, 5, 7, 9]) == 16  ",
        "assert solution([10, 9, 8, 7, 6, 5]) == 10  ",
        "assert solution([1, 2, 3, 4, 5]) == 1",
        "assert solution([7, 8, 9, 10, 11, 12]) == 7  "
    ],
    "3": [
        "assert solution([7, 8, 3, 2, 5, 12]) == 12  ",
        "assert solution([0, 1, 2, 3, 4, 5, 6]) == 0  ",
        "assert solution([10, 11, 12, 13, 14]) == 0  ",
        "assert solution([0, 1, 2, 3, 4, 5, 6, 7]) == 6  ",
        "assert solution([10, 15, 20, 25, 30]) == 10  ",
        "assert solution([10, 3, 5, 7, 6, 9]) == 10  ",
        "assert solution([0, 1, 2, 3, 4, 5]) == 0  ",
        "assert solution([7, 8, 9, 10, 11, 12]) == 7  ",
        "assert solution([1, 2, 3, 4, 5]) == 1"
    ]
}